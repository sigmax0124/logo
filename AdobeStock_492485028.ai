%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Japanese
%%Title: 21050106ai.eps
%%Creator: Adobe Illustrator(R) 24.1
%%For: WKSU037
%%CreationDate: 3/14/2022
%%BoundingBox: 0 0 3000 1500
%%HiResBoundingBox: 0 0 3000 1500
%%CropBox: 0 0 3000 1500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.1.0 x369 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=72 GradRes=72 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c148 79.164050, 2019/10/01-18:03:16        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">21050106ai</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">monogram sigma logo design inspiration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>logo</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>sigma</rdf:li>
               <rdf:li>monogram</rdf:li>
               <rdf:li>idea</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>e logo</rdf:li>
               <rdf:li>inspiration</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>human</rdf:li>
               <rdf:li>creativity</rdf:li>
               <rdf:li>mind</rdf:li>
               <rdf:li>intelligence</rdf:li>
               <rdf:li>innovation</rdf:li>
               <rdf:li>think</rdf:li>
               <rdf:li>brain</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>education</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>logo pack</rdf:li>
               <rdf:li>solution</rdf:li>
               <rdf:li>smart</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>knowledge</rdf:li>
               <rdf:li>silhouette</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>science</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>colorful</rdf:li>
               <rdf:li>data</rdf:li>
               <rdf:li>intellect</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>pixel</rdf:li>
               <rdf:li>brainstorm</rdf:li>
               <rdf:li>health</rdf:li>
               <rdf:li>success</rdf:li>
               <rdf:li>memory</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>imagination</rdf:li>
               <rdf:li>learning</rdf:li>
               <rdf:li>intellectual</rdf:li>
               <rdf:li>learn</rdf:li>
               <rdf:li>corporate</rdf:li>
               <rdf:li>brainstorming</rdf:li>
               <rdf:li>artificial intelligence</rdf:li>
               <rdf:li>entertainment</rdf:li>
               <rdf:li>multimedia</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator 24.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-03-14T10:02:19+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-03-14T10:02:19+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-03-14T10:02:19+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>128</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEAlgCWAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAlgAAAAEA&#xA;AQCWAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAgAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX5fZs2p2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2Kv1BzWNrsVdiqR+a/O/lTynawXPmHUY9PiuZPStg4Z3kcCpCRxh3&#xA;ag60G2KpPo/5zflnrGq22k2GuRvqF4xS1gking9RwK8VaaONSx7CtTirNMVdirsVdirsVdirD7r8&#xA;4fystLmW1uvNWmwXMDtHPBJcRo6OhoyspIIIIoQcVT7QPM3l7zFZG+0LUrfU7NXMbT2siyoHXcqS&#xA;pNDv0xVMsVdirsVfl9mzanYq7FU68r+S/NHmq5mttA0+S/ktk9W4KFUSNCaAvJIVRanpU74JSA5p&#xA;pN9X/J/8yNI0u51S+0SRLC0UPdTRywTemhNOTLDI7BR3NKDIjJErTDsmh2KuxV2KuxV2Ksttfyj/&#xA;ADOu7aK6tfLGoz206LJDNHbuyOjiqsrAUIINQcj4ke9NJHr3lvX/AC/eiy1zTrjTbsoJFguo2iYo&#xA;ejAMBUbdcIIPJCXYVdirsVfqDmsbXYq7FXhn50eR9dtPMU3niwu7u9ju7QabJbWsoj1XTlH7w3Gi&#xA;mqBnKxn1YvtuvMBhy+FVj35a+RtM/MPT20/zZqeuazFacL3Tdci1a8l028UMUWRI52dre6hJ4yxN&#xA;8SnpscVfRtja/VLKC19aW49BFjE87c5XCinJ2oOTHue+Kq+KuxV2KuxVC6rYHUNOuLJbmeyadCi3&#xA;dqwSaMno8bEMAR7gjxxV8s6noHmjyv50vdJk8w63c/mLqpt1sNRsLuzt7C9sZJxGkl+rQvJbPFXh&#xA;V+fJqBK1pir2zyp+Tdr5e81Seao/Mut3Oq3kapqkVzNaSQXQRaKJglpCzlP2X2b3pUYq9ExV2Kux&#xA;V+X2bNqdirsVe2/k7510S78vw+Sr61tLKS0ujqMdxdRmTTNQY/uxBrIo5CBpB6cv2EbgSvw/FTki&#xA;bv8AHwZAp/8AmN521LyBfrf+VtN0TR5brlZ6josml2cWo2bFQzRvJCqLcW01OUcq/Cw67jIwjxc1&#xA;JfPN7dfW7ya59GO39Z2kMMC8IkLGvFFqeK+A7ZkBio4q7FXYq7FUVpd8LDULe8a2hvFgcO1rcqXh&#xA;kA6o6gqaH2IPhiQr6d03XfLPmbydZarHoGi235faWLhr7T761vLi+s71ITI8diyzJHcJLTnROHEV&#xA;L0pXMUgg892bxjzT+b9zr/lePyxJ5c0W20u0dn02W3hu457Yu1WMJe6mCB/2k3X2rvl8cdG7Y28/&#xA;yaHYq7FX6g5rG12KuxV4X+cXkzzu/nBfMtu95q2ltbC20n6jbpd3WhXdVJu7eyLQx3BkClfULepG&#xA;WqD8K4qxfybZfnFoFvZeXPJEd5At3dGS/vNZ8vCxhHMFprq5u3vbqSWTYfDxqegpQDFX0rYw3UNl&#xA;BFdXH1q5RFWe54CP1HA+JuC7LU9u2Kq+KuxV2KuxVC6rDqU+nXEOmXUdlfyIVtruaE3CRuf2zEHh&#xA;508OYxV8qXnkLzrcnX/L+o3mtXFleXsdze68fK8k1zqUkL8l/e/W/VSGMqAgBTb7IFTir178tH/O&#xA;PUNclm1y/EHlKyCx20d1pa6ffXbhaH9yZrhoYkP7TNybsB1xV6virsVdir8vs2bU7FXYq9t/KPzh&#xA;5LXyifLlwlppWprcm51X67O9ra65aUYC0nvAsr2/plg3pheEgWhHxNlOSJu/wGQZP5vvPyj12e88&#xA;w+dJLSc2tsI7G00fXzeyngQsNrb2iWdrHFHufi5UHU13OQjxDYfcuz5xvZbaa8mltYPqts7s0Ntz&#xA;MnpoT8K823ag798yQxUcVdirsVdiqK0ubTodQt5dStpLywRw1xaxSi3eRR+yJSkvCvjxOJV9Q2nn&#xA;rybbjQte0+00a3vLSzktrLQx5mjhttNjlXi37r6r6TzSBiXJDb9SaDMXhO4/Qzt5N+Y6flDYaLFD&#xA;oliZvNd4TJcvbam1/ZWqFqj98IbdZZXH7KjivcnplsOK9+TE08ty1DsVdir9Qc1jax/z5rOsaN5a&#xA;l1HSLWS8vIbmyVreGCW6kNvJeQx3TLDAGkcpbu7fCDSlaYq821z8yPzfa41A6DoE00BlC2MEmkXs&#xA;csVuby2ihnMtzLBFO88E0rtDSMw8f3hXi1VUvtfzQ/PKR7iSTy1I1xH+jTb6WulX8KzfWPqn1v8A&#xA;0qWsMfAzTD4nPDjU8lUnFU5sPPH51ahBOV8tmxvWvRHaWs1qxRYCmoMvrSvNBGVBt7ZXkR/2/hB5&#xA;KMVRy+e/zFiuNTin0aefiL2DTZbbTbwQ/W6A6eGaXjI0RCOssvARhiPj4nZVOvKfmbz7qHmT9H61&#xA;of1DS4ob9/0lxYLPJHdxLaBAf7v/AEd25h/tMKp8IOKs4xV2KvPPN/nXznpes6zp2maXNcBbbTZN&#xA;Hul069u4OUs8qai7vbgJI1vAqSLDzV3PwrUmmKsK1L8zPz3hjaWz8syTxfVrn0pP0VdKJJI1vWt5&#xA;fS9Zp4XmFtAfReNqepxZ1YqCqmenfmH+cDXllA3l2S+065u9Ojn1b6jdWRggkvBFfFrS4Cztxide&#xA;DBaKAzt8NMVRP+M/ziTSZNQfR1SNYrcmJ7C5kuDM8MMkiQQQSSSv8TSqTKkaowA5HeiqYS+evzC5&#xA;obXy5dTta3Uq6hbPayQtJb/WZDD9WkZjC7m0QHZyvqEKxWuKsz8oX+vX+gxXOvWgsNVM1yk9oteK&#xA;CO5kjj4sftgxqpD9G+0Njiqc4q/L7Nm1J95G0jSNY8xxafq1zHZ2ktveMs8s8VrGJ47SWS2Vppis&#xA;ah50RfiI60wSNBIejaL+Xf5SrBYDXNdhhmERa9mTVrOSKW4FpcyzQCK3inlhSGeGJFlrIJeX7sNy&#xA;XKjOXQJpH3X5Z/kpGlvGnmONYJP0iLjUzqljM0XofWvqv+jR0mk5iKI/Cg58qDizAY8cu5aCT33k&#xA;r8m7CaAN5iF7ZiyMl1dQ3Kh2nD2Ct6USQzyAkXFyyRun7HxEcWOESl3LQQLeR/y+lg02WDV4YORs&#xA;p9RiuNRtDN9VqRflVi5IsoLo0UXMyFQfg5Dc8RRST+avLfkWw8u/X9H1v69qck1in6O5KWhSS1la&#xA;7Lkf3n+kIvAp9lTRviIwxJvdWFZNDsVegeUvJvk/U9H0fUNS1OGAtc6jHq9s2oWdrNSKCJtOREnP&#xA;NFuJ2eNpuDIg+JqAVyEpEFLMtO/Lf8j5nWK78yRwS/Wbf1Y/0pasY45Gs1uIvU9FYJkiNzOPWSRa&#xA;8OSoyhiIGcu5NBLNQ8gflKtpeTL5gjstQtrXUJINK+u2t4J547My2QW6ty0K1lRuS8qsSqL8VcIn&#xA;LuWkP/g78on1WPT01cvI0k4EiX1ukAiWaaNHnnmjSJfhWJgInkZlJPEbVeKSEBF5I8g8GFz5htoF&#xA;uraJrC4S6jmVLj6vGJvrEaqJUQXbkboG9MFlDUw8R7lph/m2x0Ox1yW20K7N9pYitngumpycyW8c&#xA;knID7JEjMCnVfsncZOJNbqk+FD9Qc1ja7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX5fZs2p&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv1BzWNrsVdirzT83/zltPIlusNglrqevD05pdGm&#xA;mkhmNrIWT1o+EcvOjLuPCvfbFWLXn/OQesQaZPfIfLMvpQNOsCX+p+q3FCwRUfTY/jPShI38MVey&#xA;+X9Sk1TQdN1OSMQyX1rBcvECSEM0auVBYKduVNxiqPxV2KuxV2KrZvV9J/RCmXifTD1C8qbcqb0r&#xA;irwW5/PX8wtPt7qTWrPy/pE9lqB0q6sp31iaeO5I5RBls7K5HGdPjhatHHTcEBVmf5UeffPvm+81&#xA;CfVtJs7PQLSkVrqMH12M3U5oT6UV7DbS+mgqGZkX4thXfFXpOKuxV2Kvy+zZtTsVdir0f8pfyfuv&#xA;PFw01891puhn1IotYihSaEXUYDejJzki4VU7Hxp88ryZOFIDJ7T8g9In1KGyceZIvVmWFp3sNN9J&#xA;eThS7Omov8I61AO3jkfF9yaeP69pyaZruo6bHIZY7G6mtklNAWEUjIGNCw349jlwNhigcVdirsVd&#xA;iq6L0vVT1eQi5D1ClC3Gu9K7Vpir3O2/JDyDfz2yaNd69qsF5YDVLW8gTSYYZLYHjKQ13eWx5QP8&#xA;Ey0qh67EE0eIetMqYf8Amn5G8jeU7Swh0rVbu7126rLdafP9TkFtCKgerLZy3EXqOaFVVz8O5ptk&#xA;4SJQQ86yxDsVdir9Qc1ja7FXYq8j/PTVPLaS6XYWc3pfmQW9Tyzc200dvNaVqGnu5nqqWfUSI4Ik&#xA;+yoJ3CqE/I/zT5dhXzW+q6vG+uHU3bWNVkuYl026kANH05QURYlXZvh5V+0zbUVezRyRyRrJGweN&#xA;wGR1NQQdwQR1BxVvFXYq7FXYqtm4+k/MFl4nkoqSRTcADfFXxWLLy3b6lFHr2g640NprbprFlctd&#xA;SXTabd1Ok20ojnjk+teovKGjIAOW0nxVVfakIAiQAMo4jZzVht+0STU/Tiq7FXYq7FX5fZs2p2Ku&#xA;xV6v+SWmeYni1O+u4vU/LsL6fmO3uYXuIbqlCsNrClGe86GN0IMf2iQNjVkI+KQi/wA6vLPmCZvK&#xA;6aXpMiaKNNRdJ0tLaVtRtYyRVNQaju0jNuvxcafZVd6uOQ3SXj8kbxu0cilJEJV0YUII2IIOWsVu&#xA;KuxV2KuxVdFy9VOBCtyHFjQAGuxNdsVfZJvPMU+nSSaHrmirNdaKj6TeW62sdsuo2tBqtzGXgeP6&#xA;t6Z4y1VyTx3j+GmHt1DN8bSkmVySpPI7oKKd+wAFB9GZjBbirsVdir9Qc1jah7/UbHT7b6zfTpbW&#xA;/OOL1ZWCrzmkWKJanu8jqo9ziqUX35geR7C5vba816xgudOCtfQPcRh4Q7pGvNa1HxyovzYeIxVg&#xA;f5jQflz56WCzsfNOkadq6SWzSagILO+nkhmC/V4ecp+FZGuIytG3qB3xVi2rflzoU1hfWl1588vw&#xA;REyWF3INA0mMxSOsyMpkUqY2X6vLvyHHgxqKYq9f8ua35V07RINIg1i2uf0HZelcyq6rSPT0SKaV&#xA;lBPFUNOW9B0xVOLTW9Hu5YorW9hnlnWd4UjdWLLayrDcEAHf0pXCP4MaHFUbirsVQF95g0GwW8a+&#xA;1K1tV0+OOa/M00cfoRTFlieXkRwVyjBS3Whp0xVK5fzC8itAvp+aNJikuLZrq2d7y3IMKqxM4UyL&#xA;yjXgxJ6bHfbFXlFl+V2jXumzWsvnvRNdhnvxeXU95p9nePLfX8hhid2NyRzkZTFEPbioxVPvy40b&#xA;y75FvtRkXz3pc+jXiJM+iQrbWttBK4ThcQqs8np+ohFQo4tUHFXpw1/QmaFRqNqWuHaO3UTR1kdH&#xA;MTKnxfEwkBUgd9uuKom1u7W7h9e1mjuISzIJYmDryjYo68lJFVdSp8CKYqq4q/L7Nm1Iix0++v7j&#xA;6tZQPcXHCSX0o1LNwhjaWRqDskaMx9hiSqbWXkLzrfW9nc2eh309vqBYWUyQSFJSiPI3BqUPwRO3&#xA;yU+BwGQ700zj8vZvzC8kNNd3vljVtQ0po7hY7Az3llCk0Jb15uEQ+Jo1gcNVdqE9srnUuqhk+l/m&#xA;FrcV9Y3dr5G16aUBL61jOu6rIJY1MTKwjYMJFb14tuJrzGxrkTAd4+SbeS+YdG8z6hrM+qzaRc2/&#xA;6bvPVto2RmrJfu0sMasQOTOK8dt+uWgikJRdaLq9pFLLdWc0McLQJK8iMoVrqMzQAkj/AHbEhdPE&#xA;CuStCDxV2Ko+y0DXb5rRbLTrm6a/kkhsRDDJJ68sQVpEi4g82QOpYL0qK4khUyi8g+d1nb1PLOqS&#xA;Jb3C21yiWlwCJmZQISwjbjI3NQB13G2R4x3pp6lefmbrFnqUVzF5I1rRJoLE2dtBaX93aLHY2EYl&#xA;kRFFuDwjVhLKffk2VcA702kf5h6x5g872Onxt5H1ODWLN3hXWZmuLq5miQvzgmZoI/U9NwaFjyWh&#xA;GSgBHqgvNjoWtqszHT7kLbosk5MMlI0ZBIrPt8IMZDAntvlthCGubW6tZvRuoXgmCq5jlUo3GRQ6&#xA;GjAGjKwYeIOKqWKv1BzWNqT+bfLNr5m0KXSLm5ns45Jba4W5tTGJo5LS4juomX1kmj/vIVqGQimK&#xA;sPvfyI8r6grrqWp6pdq8/wBbAaaGLjcyXMN1cTJ6EMXFriW2XnTYVPphDviqXQ/840+RY0uYWvtS&#xA;ltLwWi3Ns7WY5rZGAxr6y2y3FGFogekm+5+1uFU20j8ivJGlwm2ia9lszOLh7aS4IViEu4/Tdo1j&#xA;kdGGoScwznltyr8XJVFN+UHl8zXUq39/F9caYXEULwQxNBcgi4tvSjhSP05tubcfUJVTzqAcVR3l&#xA;38s/LHl/X5de05Zl1C4juIZ2d+SMt1Mk7nhQKp5xV+ClaktyO+KsrxV2KsM8x/lfpuu6xeanJquo&#xA;Wb30dilxb2xtPSMmlzvc2cw9a3mkDxTSFqc+LdGVhtirH7//AJx08mX8coudR1Z5bgT/AFqX6xF+&#xA;9kuhdiaZ4vR9D1GOoysGEY47BeK8gyqIt/yA8nR31jqM95qN3qenzWtxb3sssKvysrhbiEPHDDFC&#xA;wBXhuleLNQgknFUa35L+Vhpf1GK6vopVWOOK+9SKWeJI4ooqQCeKWGAv9XjZnijVyyj4tqYqvm/J&#xA;3y5cB0u77UrmL1muLdJJ1DW8kkrzu8MqRrKGaeT1eTOWVgOJUbYqyjy35d03y5o8WkaYrJYwPM8E&#xA;bEHgJ5nmKCgHwqZCF9qVr1xVM8Vfl9mzak28q+ZLny3rcWrW1vBdyRxXEDW10JDC8d3byW0qt6Tw&#xA;yf3czUKuN8EhYSy6z/PHzNYMjadpumWjJD9VJWGaXlbx281rbwv680vJbeO4bhXc0HMvkPCC2mM3&#xA;/OR3neR7aZbLToru0N01vcIt2eDXonEjei1y1vVTdOUrHtsPs7EeCFtKdW/O7zpqcwuJVsorsQG3&#xA;W5jtwWUF7V+aLIzxo6mwj4FVHHfjT4eMhjAW0Mv5ta8IbaJrGxl+prF9XkmSeaVZ7Y1t7j1ZJmk5&#xA;w78F5emAzDhQkY+GFtBeYPzI8y69oMWh6g0TWEElvLCqJxdTbQvAg51LMOEv7VaUAXiNsIgAbW2L&#xA;ZJDsVZh5d/MzUdE0i002PS7C8SxkvXt7i5F16oTUoUt7yE+jcQoUlijC/Z5L1Vgd8iYWm0+sf+cg&#xA;/ONjJGbbT9KSKAw/Vovq8v7qO2NqYYUl9X1/TUafEpUyHluWq3ErE4gtqFx+fHm+SyvdPgs9PtNN&#xA;1CG6t7iyiimZeN5bm3mKPNNLMpIbns9OQWtQKY+EFtBD84vM51P67LbWUkZaSSSx9OWKGV5JZZKz&#xA;GGWKaYL9YkVUlkZArH4cPhhbWw/m55htyj2ljp1tJ6SwXDRwMVnjjjSBEljd2iKrBH6XEIFZSeQJ&#xA;3x8MLbGfMXmDUfMOry6tqTK97OkKTSKCOZhhSEOak/EwjBb38OmSApCW4VfqDmsbXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq/L7Nm1OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV+oOaxt&#xA;dirsVeD/AJ76z5+k1/TNC0ZbvQJ7mQLpOvRaq1rp94xILWdwvpqEnYKfTHIE/slumKpJoejef/OE&#xA;1zp+ga/rely6bffUda1K412S7W1eLeZEtvqtq0zH7KkPx71xV9D6Npi6Xpdtp63NxefV0CG6vJWn&#xA;uJT1LySNuWYn5DoABQYqjMVdirsVdiqF1aa5g0y7mtbZr24jidorSNxE8rBSQiufss3QHxxV8seT&#xA;NS8w6nqQsrg+bbo6zNdzeXaeZ5LV/StW4z2Uwkl4/WbZq8l2Yp8XHvir1z8r/wAu/N+n+YLzzD5i&#xA;1fV47XeHSPLd3q9xqKRJSjT3TmRopZHNeCgcVHi3RV6rirsVdir8vs2bU7FXYq9x/I/R/Ikehalr&#xA;erta67BbRltV0OXSxc39ooBAu7dvUYvApYczxIH7QXrlOQm6DIJ1rWseRPKMNtf69oOjalFqNl9d&#xA;0bTrfQ47RrpJdome4+tXSxKOrApy7UyIBPI/arwDWNSbU9Tub829vafWHLi1tIlhgjHQJHGuwAH0&#xA;nqSTvmQBTFB4q7FXYq7FUVpUNtPqVrDc3K2dvJKiy3boZUiUsAXZB9pV6kYlX095w07QNN043luP&#xA;Ktr+h4bWLzBXy3Hcp6tyvKC8hMcVfq9wKcW3UN8PLtmLEk9/zZvJ/wAzPzA8pX+g2fl/y/pOkyXO&#xA;02reYrTSrfT3ketVgtkEayRxrtyYnkx8F63QgbssSXl+WIdirsVfqDmsbXYq7FXiX55+Z769mj8p&#xA;X2kXdp5Nu5Ei1fXfSt2e4kLAx2lgt1JGgd2H96dx+wK0OKrPyw86XPknQ5NM83aFe+W/Lw1GWPRb&#xA;ma0jW3tLWdy0CX1zC/HkzHj6hj6kc3YmuKvb1ZWUMpDKwqrDcEHuMVbxV2KuxV2KobU7m7tdOubi&#xA;ztHv7qKNngso3jjeZwKrGHlZEXkdqsaDFXy95Ph/MTXNca+l8nXGpJp2vz6x5iazvtPgjfW4QI4I&#xA;LZ2mVFhto9pDGzM77Oe2KvoLyf57t9fubzS7yxm0TzJptGv9Du2jaZYn/u543iZo5on6c0JAOxxV&#xA;lGKuxV2Kvy+zZtTsVdir2f8AJLy3Y2cMnmuy1W0uvN9rG8ulaH6twqQRhSJLq+a2SRyiKf7obH9s&#xA;0qMpyHp0ZBf+Zfk6286a3HqXlPXLLzFr50+KTWLaG6kae7uoUCzNZW0q14qo5emJOleKACmMJUN9&#xA;lLxZlZWKsCrKaEHYgjLmLWKuxV2KuxVE6bb2tzqFtb3d2ljayyKk97IjyLEhNGkKRB3biN6KK4lX&#xA;0x5tm/L7RdFWyi83W+nPqGgwaT5fW7sr+Z00aUmSea5RYWdprmTeMOqqiboO+Y0bJ5dWbwTzd5Hu&#xA;NBt7PU7O9h1ry7qNRY61aK6xNIn95DIkgWSKVOvBwCRuMvjK/expjOSQ7FXYq/UHNY2pH5081W3l&#xA;by/JrV1GJLeK4s4JeTiJVW8u4rX1GdgQBH63M+wxV53rP/ORel2E98tppiajBbzNb2slveI8khS7&#xA;t7QyzQxRyvFC5uw8Tjn6gGw3GKsT1z87fIHmpy3mTyVFqVvpkdjLGtw4uZlXUja8jBCYeLUF2NuQ&#xA;ZuPQdlVtjqX5OanZy3WlfllZXFLsW1rC9vSadWW+dGWKK3nkDuunfChXq45MoBOKs60v82/Lmjw3&#xA;mkR6db6ZbaTDeDT7NLjZ3td4LVaxLEJLlA7RrFJIAFI6igVZB5W/M6z8weY20GLTbq1uYYb2a4mm&#xA;WkQ+qXMdugjenGT1lm9T4T8A2bc4qzTFXYqwLzd+bmk+WtT1bTLmGM3mnw6bLbRy3McAnOp3ElvU&#xA;lx+7jtzGHlk3Cqa/NVh1/wD85L2dsjh/L7zKtvdSSNDdc42e0F5z9GZYfSkib9HtwkDgkMCE60VY&#xA;1pnmD8kb290+ym/LixF3ql1Y29tJBAs9ufrt39Vkd5zDHw9AshYMo5Fgo8cVTjRfMvkLQm/xDonk&#xA;Cy0x4YYnTVIeUKxC4hileOWSO1Yk+nOSEhErMEYlVFMVZpL+d2gII3S3a4jS4lh1D6u/qPaxxXLw&#xA;iaSMLz4tFEZwKV4dK4qzDyn5iXzFoUOrLay2QmkuI/qs+0qG3nkgIcfstWOpHbpiqb4q/L7Nm1J1&#xA;5O8sXPmfXo9GtnMdxLb3c8fFDIzG0tZbn01RSCTJ6PAfPBKVC0vQdH/5x81O+hsjdai+nzzwrPcx&#xA;z2boiB7S4uhFFLI8SSzILUpKh48D1Oxys5U0ynRfyY8+eV0C+XfOUunXGpSXsUjW6G3hLacLqgmm&#xA;9bktTanfiVXl1PeByA8wtL73Tvzd028ittU/Mm9t62pubmZLisMLK1kjq0stxDGVRtQ+Jw3RDQMS&#xA;BiDE9F3YRqf5U+YdWms9Wk1CfUrjVZrQ3949vuiXW09y1JGl4W7lFkaVIyeQPQ1NgmAikg8z/ltd&#xA;6B5eXXJNRtrm2mls4beKJqyn63bSTuXSvKP0mi9P4h8R3XYYYzs0tMOyaHYqzryn+VGq+Y9N0rUr&#xA;eaQWd/NqMVy8dvJOYBptvHcUAQ/vJLgSFIo9izCnyhLJSaZdYf8AOOF3cOhTXkiZri1jRZrbg6pd&#xA;Gz4erC0vqpKv19ecZQgFSC3SsDm8k0yTUdA/Oi0s767g/MO9a10y2vZ7iKaZobgGztPrMaJAJpOf&#xA;r8XClWNApY+GRBj3Luk+s+XPPOuL+gNa893mpLNLKj6ZLxmaQ280saSRxyXKgD1IBV5jEqllAZt8&#xA;IIG4CsOi/JfXXLq8628jQRTWHrp6aXMktskxhjkLcOSyyiAmtOfWmT8QIpiXmry+3l/XJtKa6jvD&#xA;DHBJ9Zg3icXECTgoe60koD365OJsKlOFD9Qc1jatlhimjMcqLJG32kcBgaGu4OKqa2NkpJW3jBIU&#xA;EhFGyGqjp+yemKrV07T0fmttEr7HkEUGoII3p2IxVVW3gVy6xqHJ5FgoBrvvX/ZHFVotbUEkQoCX&#xA;9UkKN3/n6fa98VXiONSCqgEVAIA2DGp+84quxV2KqUlnaSuZJII3kK8S7KpPE9qkdMVWmxsTGIzb&#xA;xGNQAqFFoAoIApTsCcVXJZ2iR+mkEax1B4KqgVBqDQDsd8Vc1ratEYWhRojSsZUFdum1KdsVXejC&#xA;HL+mvNiGZqCpIFASfYbYquVVUUUACpNBtuTUn78VbxV+X2bNqXRSyxOJInaORejqSpFduoxVUa9v&#xA;GADTyEAsQC7HdxRj1/a740rbahfsnBrmVk3HEuxG4odq+BxpVNp52UI0jFQOIUkkU22p/sRiq43V&#xA;yQAZnICemKsfsfy/6vtiqwySMCCxINCQSd6Cg+7FVuKuxVVju7qNBHHNIiA8gisQOQ70B64q2L69&#xA;DmQXEgkYklw7VJYgk1r3IGNK093dO/qPNI0lCOZYk0Iodye42xVy3VysolWZ1lFaSBiG3679e+Kr&#xA;fWmKBObcFBVVqaAE1IA+eKrWZmNWJJoBU77AUH4Yq1ir9Qc1ja7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FX5fZs2p2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:a4a6b504-ccb5-b643-a26a-bcd5055feebf</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:a4a6b504-ccb5-b643-a26a-bcd5055feebf</xmpMM:InstanceID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:814f3e7f-65d9-46e5-b7bb-ae2a3becdec2</stRef:instanceID>
            <stRef:documentID>xmp.did:40be00d0-995e-1141-a349-333f9b9ce44a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:41a2a6cc-fc0f-f84d-b227-9b8086220de7</stEvt:instanceID>
                  <stEvt:when>2020-05-02T09:28:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:47bfddbc-00b2-284f-95f9-71e92aaceb15</stEvt:instanceID>
                  <stEvt:when>2020-05-18T21:28:27+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:205FE2191599EA11B6578F703C81C250</stEvt:instanceID>
                  <stEvt:when>2020-05-18T21:37:29+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C9B6CC171799EA11B6578F703C81C250</stEvt:instanceID>
                  <stEvt:when>2020-05-18T21:53:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2b4aa0a8-eeec-6647-ac75-470c217843f7</stEvt:instanceID>
                  <stEvt:when>2020-08-15T08:12:01+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a4a6b504-ccb5-b643-a26a-bcd5055feebf</stEvt:instanceID>
                  <stEvt:when>2022-03-14T10:02:19+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <photoshop:AuthorsPosition>monogram sigma logo design inspiration</photoshop:AuthorsPosition>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3000.000000</stDim:w>
            <stDim:h>1500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1500 li
3000 1500 li
3000 0 li
cp
clp
1500 1500 mo
0 1500 li
0 1.01016e-07 li
1500 1.01016e-07 li
1500 1500 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
3000 1500 mo
1500 1500 li
1500 1.01016e-07 li
3000 1.01016e-07 li
3000 1500 li
cp
.0313726 .0431373 .172549 rgb
f
474.221 606.72 mo
338.806 606.72 li
338.806 617.078 li
341.98 619.887 li
364.335 639.652 li
314.257 639.652 li
314.257 650.01 li
369.777 699.093 li
314.257 748.177 li
314.257 758.535 li
461.683 758.535 li
474.221 769.61 li
474.221 752.083 li
466.628 745.368 li
399.096 745.368 li
417.105 729.436 li
420.543 726.408 li
418.773 724.842 li
396.609 705.238 li
386.69 714.031 li
400.676 726.393 li
379.214 745.368 li
337.313 745.368 li
362.287 723.292 li
379.726 707.872 li
389.645 699.093 li
389.66 699.093 li
401.919 688.252 li
418.773 673.345 li
420.543 671.779 li
417.105 668.751 li
409.483 662.006 li
389.601 662.006 li
400.676 671.794 li
379.726 690.315 li
337.313 652.819 li
466.613 652.819 li
474.221 646.089 li
474.221 628.548 li
461.668 639.652 li
384.203 639.652 li
361.863 619.887 li
474.221 619.887 li
474.221 606.72 li
cp
361.863 778.3 mo
373.801 767.737 li
353.918 767.737 li
341.98 778.3 li
338.806 781.109 li
338.806 791.467 li
474.221 791.467 li
474.221 778.3 li
361.863 778.3 li
cp
0 0 0 rgb
f
474.216 606.72 mo
474.216 652.819 li
461.049 652.819 li
461.049 606.72 li
474.216 606.72 li
cp
f
474.216 745.368 mo
474.216 791.467 li
461.049 791.467 li
461.049 745.368 li
474.216 745.368 li
cp
f
166.19 830.606 mo
176.701 830.606 li
176.701 867.458 li
199.474 867.458 li
199.474 876.021 li
166.19 876.021 li
166.19 830.606 li
cp
f
233.859 865.998 mo
236.022 864.765 237.72 863.046 238.953 860.84 cv
240.185 858.634 240.802 856.126 240.802 853.313 cv
240.802 850.503 240.185 847.994 238.953 845.788 cv
237.72 843.582 236.022 841.862 233.859 840.63 cv
231.696 839.397 229.274 838.781 226.593 838.781 cv
223.911 838.781 221.489 839.397 219.327 840.63 cv
217.163 841.862 215.466 843.582 214.233 845.788 cv
213.001 847.994 212.384 850.503 212.384 853.313 cv
212.384 856.126 213.001 858.634 214.233 860.84 cv
215.466 863.046 217.163 864.765 219.327 865.998 cv
221.489 867.23 223.911 867.847 226.593 867.847 cv
229.274 867.847 231.696 867.23 233.859 865.998 cv
cp
213.844 873.751 mo
210.059 871.719 207.097 868.917 204.956 865.349 cv
202.814 861.78 201.744 857.77 201.744 853.313 cv
201.744 848.859 202.814 844.847 204.956 841.278 cv
207.097 837.71 210.059 834.91 213.844 832.877 cv
217.628 830.845 221.878 829.827 226.593 829.827 cv
231.307 829.827 235.546 830.845 239.31 832.877 cv
243.072 834.91 246.035 837.71 248.198 841.278 cv
250.36 844.847 251.442 848.859 251.442 853.313 cv
251.442 857.77 250.36 861.78 248.198 865.349 cv
246.035 868.917 243.072 871.719 239.31 873.751 cv
235.546 875.784 231.307 876.8 226.593 876.8 cv
221.878 876.8 217.628 875.784 213.844 873.751 cv
cp
f
285.633 841.214 mo
283.989 839.852 281.588 839.17 278.431 839.17 cv
269.867 839.17 li
269.867 855.001 li
278.431 855.001 li
281.588 855.001 283.989 854.31 285.633 852.925 cv
287.276 851.541 288.098 849.595 288.098 847.086 cv
288.098 844.534 287.276 842.576 285.633 841.214 cv
cp
288.293 876.021 mo
279.534 863.37 li
279.015 863.37 li
269.867 863.37 li
269.867 876.021 li
259.356 876.021 li
259.356 830.606 li
279.015 830.606 li
283.038 830.606 286.53 831.277 289.493 832.617 cv
292.456 833.959 294.737 835.861 296.338 838.327 cv
297.938 840.792 298.739 843.712 298.739 847.086 cv
298.739 850.459 297.928 853.368 296.306 855.812 cv
294.684 858.256 292.38 860.126 289.396 861.424 cv
299.582 876.021 li
288.293 876.021 li
cp
f
342.207 867.587 mo
342.207 876.021 li
307.042 876.021 li
307.042 830.606 li
341.363 830.606 li
341.363 839.04 li
317.488 839.04 li
317.488 848.902 li
338.574 848.902 li
338.574 857.077 li
317.488 857.077 li
317.488 867.587 li
342.207 867.587 li
cp
f
391.904 876.021 mo
391.839 848.772 li
378.474 871.221 li
373.738 871.221 li
360.438 849.356 li
360.438 876.021 li
350.576 876.021 li
350.576 830.606 li
359.27 830.606 li
376.268 858.829 li
393.007 830.606 li
401.636 830.606 li
401.766 876.021 li
391.904 876.021 li
cp
f
413.963 830.606 mo
420.451 830.606 li
420.451 876.021 li
413.963 876.021 li
413.963 830.606 li
cp
f
461 853.995 mo
463.162 852.243 464.244 849.725 464.244 846.437 cv
464.244 843.15 463.162 840.63 461 838.878 cv
458.837 837.126 455.701 836.251 451.592 836.251 cv
440.563 836.251 li
440.563 856.623 li
451.592 856.623 li
455.701 856.623 458.837 855.747 461 853.995 cv
cp
465.671 834.823 mo
469.045 837.636 470.732 841.506 470.732 846.437 cv
470.732 851.367 469.045 855.239 465.671 858.05 cv
462.298 860.862 457.669 862.268 451.787 862.268 cv
440.563 862.268 li
440.563 876.021 li
434.075 876.021 li
434.075 830.606 li
451.787 830.606 li
457.669 830.606 462.298 832.012 465.671 834.823 cv
cp
f
484.258 874.951 mo
481.079 873.892 478.581 872.519 476.765 870.831 cv
479.165 865.771 li
480.895 867.328 483.112 868.593 485.815 869.566 cv
488.518 870.539 491.297 871.026 494.152 871.026 cv
497.915 871.026 500.727 870.389 502.586 869.112 cv
504.446 867.837 505.376 866.139 505.376 864.019 cv
505.376 862.462 504.868 861.196 503.852 860.224 cv
502.835 859.25 501.581 858.504 500.089 857.985 cv
498.597 857.466 496.488 856.882 493.763 856.233 cv
490.346 855.412 487.588 854.59 485.491 853.768 cv
483.393 852.947 481.598 851.682 480.106 849.973 cv
478.614 848.265 477.868 845.961 477.868 843.063 cv
477.868 840.641 478.505 838.456 479.781 836.51 cv
481.057 834.563 482.993 833.007 485.588 831.839 cv
488.183 830.671 491.405 830.087 495.255 830.087 cv
497.937 830.087 500.575 830.434 503.17 831.125 cv
505.766 831.817 507.993 832.812 509.853 834.109 cv
507.712 839.3 li
505.808 838.09 503.776 837.17 501.613 836.543 cv
499.45 835.916 497.332 835.602 495.255 835.602 cv
491.578 835.602 488.821 836.272 486.983 837.613 cv
485.144 838.954 484.226 840.685 484.226 842.804 cv
484.226 844.36 484.745 845.626 485.783 846.599 cv
486.821 847.572 488.107 848.329 489.643 848.87 cv
491.178 849.411 493.265 849.983 495.904 850.589 cv
499.32 851.411 502.067 852.233 504.144 853.055 cv
506.22 853.877 508.004 855.131 509.496 856.817 cv
510.988 858.504 511.734 860.775 511.734 863.63 cv
511.734 866.009 511.086 868.183 509.788 870.15 cv
508.491 872.119 506.522 873.676 503.884 874.821 cv
501.246 875.968 498.001 876.541 494.152 876.541 cv
490.735 876.541 487.437 876.012 484.258 874.951 cv
cp
f
525.878 871.351 mo
522.504 867.891 520.817 862.916 520.817 856.428 cv
520.817 830.606 li
527.305 830.606 li
527.305 856.169 li
527.305 865.9 531.565 870.767 540.086 870.767 cv
544.239 870.767 547.417 869.566 549.624 867.166 cv
551.83 864.765 552.933 861.1 552.933 856.169 cv
552.933 830.606 li
559.226 830.606 li
559.226 856.428 li
559.226 862.96 557.539 867.944 554.165 871.383 cv
550.792 874.821 546.077 876.541 540.021 876.541 cv
533.965 876.541 529.251 874.812 525.878 871.351 cv
cp
f
614.632 876.021 mo
614.567 842.934 li
598.153 870.507 li
595.168 870.507 li
578.754 843.128 li
578.754 876.021 li
572.525 876.021 li
572.525 830.606 li
577.845 830.606 li
596.79 862.526 li
615.476 830.606 li
620.795 830.606 li
620.86 876.021 li
614.632 876.021 li
cp
f
1182.37 605.11 mo
1029.15 605.11 li
1026.48 605.11 1024.94 608.157 1026.53 610.31 cv
1066.49 664.362 li
1066.5 664.362 li
1076.23 677.529 li
1092.17 699.093 li
1081.1 714.075 li
1097.47 714.075 li
1108.54 699.093 li
1092.6 677.529 li
1082.88 664.362 li
1082.86 664.362 li
1048.8 618.277 li
1158.97 618.277 li
1143.44 634.297 li
1082.71 634.297 li
1104.94 664.362 li
1090.35 664.362 li
1100.08 677.529 li
1125.48 677.529 li
1127.79 677.529 1129.11 674.906 1127.74 673.053 cv
1108.81 647.464 li
1149.03 647.464 li
1184.71 610.64 li
1186.72 608.571 1185.25 605.11 1182.37 605.11 cv
cp
f
1184.71 787.547 mo
1149.03 750.723 li
1108.81 750.723 li
1127.74 725.134 li
1129.11 723.281 1127.79 720.658 1125.48 720.658 cv
1051.03 720.658 li
1066.97 699.093 li
1051.03 677.529 li
1068.76 677.529 li
1059.01 664.362 li
1031.39 664.362 li
1028.71 664.362 1027.18 667.409 1028.77 669.561 cv
1050.6 699.093 li
1028.77 728.626 li
1027.18 730.778 1028.71 733.825 1031.39 733.825 cv
1058.95 733.825 li
1087.23 733.825 li
1104.94 733.825 li
1082.71 763.89 li
1143.44 763.89 li
1158.97 779.909 li
1048.8 779.909 li
1077.99 740.409 li
1061.62 740.409 li
1026.53 787.878 li
1024.94 790.03 1026.48 793.076 1029.15 793.076 cv
1182.37 793.076 li
1185.25 793.076 1186.72 789.615 1184.71 787.547 cv
cp
f
877.713 832.215 mo
888.224 832.215 li
888.224 869.066 li
910.996 869.066 li
910.996 877.631 li
877.713 877.631 li
877.713 832.215 li
cp
f
945.382 867.606 mo
947.544 866.374 949.242 864.654 950.475 862.449 cv
951.708 860.243 952.324 857.735 952.324 854.923 cv
952.324 852.111 951.708 849.603 950.475 847.396 cv
949.242 845.19 947.544 843.472 945.382 842.239 cv
943.219 841.006 940.797 840.39 938.116 840.39 cv
935.433 840.39 933.011 841.006 930.849 842.239 cv
928.686 843.472 926.989 845.19 925.756 847.396 cv
924.523 849.603 923.907 852.111 923.907 854.923 cv
923.907 857.735 924.523 860.243 925.756 862.449 cv
926.989 864.654 928.686 866.374 930.849 867.606 cv
933.011 868.84 935.433 869.456 938.116 869.456 cv
940.797 869.456 943.219 868.84 945.382 867.606 cv
cp
925.367 875.359 mo
921.582 873.327 918.619 870.526 916.478 866.958 cv
914.337 863.39 913.267 859.378 913.267 854.923 cv
913.267 850.469 914.337 846.456 916.478 842.888 cv
918.619 839.319 921.582 836.52 925.367 834.485 cv
929.151 832.453 933.4 831.437 938.116 831.437 cv
942.83 831.437 947.069 832.453 950.832 834.485 cv
954.595 836.52 957.557 839.319 959.72 842.888 cv
961.883 846.456 962.964 850.469 962.964 854.923 cv
962.964 859.378 961.883 863.39 959.72 866.958 cv
957.557 870.526 954.595 873.327 950.832 875.359 cv
947.069 877.394 942.83 878.409 938.116 878.409 cv
933.4 878.409 929.151 877.394 925.367 875.359 cv
cp
f
997.155 842.823 mo
995.511 841.46 993.11 840.779 989.954 840.779 cv
981.39 840.779 li
981.39 856.609 li
989.954 856.609 li
993.11 856.609 995.511 855.918 997.155 854.533 cv
998.799 853.149 999.621 851.203 999.621 848.694 cv
999.621 846.143 998.799 844.186 997.155 842.823 cv
cp
999.815 877.631 mo
991.057 864.979 li
990.538 864.979 li
981.39 864.979 li
981.39 877.631 li
970.879 877.631 li
970.879 832.215 li
990.538 832.215 li
994.56 832.215 998.053 832.886 1001.02 834.227 cv
1003.98 835.567 1006.26 837.47 1007.86 839.936 cv
1009.46 842.401 1010.26 845.32 1010.26 848.694 cv
1010.26 852.068 1009.45 854.978 1007.83 857.421 cv
1006.21 859.865 1003.9 861.735 1000.92 863.033 cv
1011.1 877.631 li
999.815 877.631 li
cp
f
1053.73 869.196 mo
1053.73 877.631 li
1018.56 877.631 li
1018.56 832.215 li
1052.89 832.215 li
1052.89 840.649 li
1029.01 840.649 li
1029.01 850.511 li
1050.1 850.511 li
1050.1 858.686 li
1029.01 858.686 li
1029.01 869.196 li
1053.73 869.196 li
cp
f
1103.43 877.631 mo
1103.36 850.381 li
1090 872.829 li
1085.26 872.829 li
1071.96 850.965 li
1071.96 877.631 li
1062.1 877.631 li
1062.1 832.215 li
1070.79 832.215 li
1087.79 860.438 li
1104.53 832.215 li
1113.16 832.215 li
1113.29 877.631 li
1103.43 877.631 li
cp
f
1125.49 832.215 mo
1131.97 832.215 li
1131.97 877.631 li
1125.49 877.631 li
1125.49 832.215 li
cp
f
1172.52 855.604 mo
1174.68 853.853 1175.77 851.333 1175.77 848.046 cv
1175.77 844.759 1174.68 842.239 1172.52 840.487 cv
1170.36 838.735 1167.22 837.859 1163.11 837.859 cv
1152.09 837.859 li
1152.09 858.231 li
1163.11 858.231 li
1167.22 858.231 1170.36 857.355 1172.52 855.604 cv
cp
1177.19 836.433 mo
1180.57 839.244 1182.25 843.114 1182.25 848.046 cv
1182.25 852.977 1180.57 856.848 1177.19 859.659 cv
1173.82 862.471 1169.19 863.876 1163.31 863.876 cv
1152.09 863.876 li
1152.09 877.631 li
1145.6 877.631 li
1145.6 832.215 li
1163.31 832.215 li
1169.19 832.215 1173.82 833.621 1177.19 836.433 cv
cp
f
1195.78 876.561 mo
1192.6 875.501 1190.1 874.127 1188.29 872.44 cv
1190.69 867.38 li
1192.42 868.937 1194.63 870.202 1197.34 871.175 cv
1200.04 872.148 1202.82 872.635 1205.67 872.635 cv
1209.44 872.635 1212.25 871.997 1214.11 870.721 cv
1215.97 869.445 1216.9 867.748 1216.9 865.628 cv
1216.9 864.07 1216.39 862.806 1215.37 861.832 cv
1214.36 860.859 1213.1 860.113 1211.61 859.594 cv
1210.12 859.075 1208.01 858.491 1205.29 857.843 cv
1201.87 857.021 1199.11 856.199 1197.01 855.377 cv
1194.92 854.556 1193.12 853.291 1191.63 851.581 cv
1190.14 849.873 1189.39 847.57 1189.39 844.672 cv
1189.39 842.25 1190.03 840.065 1191.3 838.119 cv
1192.58 836.173 1194.52 834.615 1197.11 833.447 cv
1199.71 832.28 1202.93 831.696 1206.78 831.696 cv
1209.46 831.696 1212.1 832.043 1214.69 832.734 cv
1217.29 833.427 1219.52 834.421 1221.38 835.719 cv
1219.23 840.909 li
1217.33 839.698 1215.3 838.779 1213.14 838.151 cv
1210.97 837.525 1208.85 837.211 1206.78 837.211 cv
1203.1 837.211 1200.34 837.882 1198.51 839.222 cv
1196.67 840.563 1195.75 842.294 1195.75 844.412 cv
1195.75 845.97 1196.27 847.234 1197.31 848.208 cv
1198.34 849.181 1199.63 849.938 1201.17 850.479 cv
1202.7 851.02 1204.79 851.593 1207.43 852.198 cv
1210.84 853.02 1213.59 853.842 1215.67 854.663 cv
1217.74 855.485 1219.53 856.739 1221.02 858.427 cv
1222.51 860.113 1223.26 862.384 1223.26 865.238 cv
1223.26 867.618 1222.61 869.791 1221.31 871.759 cv
1220.01 873.728 1218.04 875.285 1215.41 876.431 cv
1212.77 877.577 1209.52 878.149 1205.67 878.149 cv
1202.26 878.149 1198.96 877.62 1195.78 876.561 cv
cp
f
1237.4 872.959 mo
1234.03 869.499 1232.34 864.525 1232.34 858.037 cv
1232.34 832.215 li
1238.83 832.215 li
1238.83 857.777 li
1238.83 867.51 1243.09 872.375 1251.61 872.375 cv
1255.76 872.375 1258.94 871.175 1261.15 868.774 cv
1263.35 866.374 1264.46 862.708 1264.46 857.777 cv
1264.46 832.215 li
1270.75 832.215 li
1270.75 858.037 li
1270.75 864.568 1269.06 869.553 1265.69 872.992 cv
1262.31 876.431 1257.6 878.149 1251.54 878.149 cv
1245.49 878.149 1240.77 876.42 1237.4 872.959 cv
cp
f
1326.15 877.631 mo
1326.09 844.542 li
1309.68 872.116 li
1306.69 872.116 li
1290.28 844.736 li
1290.28 877.631 li
1284.05 877.631 li
1284.05 832.215 li
1289.37 832.215 li
1308.31 864.136 li
1327 832.215 li
1332.32 832.215 li
1332.38 877.631 li
1326.15 877.631 li
cp
f
425.079 252.821 mo
425.079 274.123 li
387.275 241.556 li
357.664 216.173 li
352.104 211.404 li
363.823 200.08 li
382.52 216.173 li
425.079 252.821 li
cp
f
327.395 212.881 mo
357.196 184.119 li
428.597 184.119 li
445.132 200.08 li
363.823 200.08 li
357.664 216.173 li
484.989 216.173 li
435.103 168.026 li
350.686 168.026 li
303.489 213.584 li
387.275 285.388 li
357.664 310.771 li
352.104 315.54 li
363.823 326.864 li
382.52 310.771 li
412 285.388 li
327.395 212.881 li
cp
f
484.989 310.771 mo
435.103 358.918 li
350.686 358.918 li
303.489 313.36 li
348.433 274.825 li
360.81 285.432 li
327.395 314.063 li
357.196 342.825 li
428.597 342.825 li
445.132 326.864 li
363.823 326.864 li
357.664 310.771 li
484.989 310.771 li
cp
f
166.19 409.874 mo
176.701 409.874 li
176.701 446.726 li
199.474 446.726 li
199.474 455.29 li
166.19 455.29 li
166.19 409.874 li
cp
f
233.859 445.266 mo
236.022 444.033 237.72 442.313 238.953 440.108 cv
240.185 437.902 240.802 435.394 240.802 432.582 cv
240.802 429.771 240.185 427.262 238.953 425.056 cv
237.72 422.85 236.022 421.13 233.859 419.898 cv
231.696 418.665 229.274 418.049 226.593 418.049 cv
223.911 418.049 221.489 418.665 219.327 419.898 cv
217.163 421.13 215.466 422.85 214.233 425.056 cv
213.001 427.262 212.384 429.771 212.384 432.582 cv
212.384 435.394 213.001 437.902 214.233 440.108 cv
215.466 442.313 217.163 444.033 219.327 445.266 cv
221.489 446.499 223.911 447.115 226.593 447.115 cv
229.274 447.115 231.696 446.499 233.859 445.266 cv
cp
213.844 453.019 mo
210.059 450.986 207.097 448.185 204.956 444.617 cv
202.814 441.048 201.744 437.037 201.744 432.582 cv
201.744 428.127 202.814 424.115 204.956 420.546 cv
207.097 416.978 210.059 414.178 213.844 412.145 cv
217.628 410.112 221.878 409.095 226.593 409.095 cv
231.307 409.095 235.546 410.112 239.31 412.145 cv
243.072 414.178 246.035 416.978 248.198 420.546 cv
250.36 424.115 251.442 428.127 251.442 432.582 cv
251.442 437.037 250.36 441.048 248.198 444.617 cv
246.035 448.185 243.072 450.986 239.31 453.019 cv
235.546 455.052 231.307 456.068 226.593 456.068 cv
221.878 456.068 217.628 455.052 213.844 453.019 cv
cp
f
285.633 420.482 mo
283.989 419.119 281.588 418.438 278.431 418.438 cv
269.867 418.438 li
269.867 434.269 li
278.431 434.269 li
281.588 434.269 283.989 433.577 285.633 432.192 cv
287.276 430.809 288.098 428.862 288.098 426.354 cv
288.098 423.802 287.276 421.844 285.633 420.482 cv
cp
288.293 455.29 mo
279.534 442.638 li
279.015 442.638 li
269.867 442.638 li
269.867 455.29 li
259.356 455.29 li
259.356 409.874 li
279.015 409.874 li
283.038 409.874 286.53 410.545 289.493 411.885 cv
292.456 413.227 294.737 415.129 296.338 417.595 cv
297.938 420.06 298.739 422.979 298.739 426.354 cv
298.739 429.727 297.928 432.636 296.306 435.08 cv
294.684 437.524 292.38 439.394 289.396 440.692 cv
299.582 455.29 li
288.293 455.29 li
cp
f
342.207 446.855 mo
342.207 455.29 li
307.042 455.29 li
307.042 409.874 li
341.363 409.874 li
341.363 418.308 li
317.488 418.308 li
317.488 428.17 li
338.574 428.17 li
338.574 436.345 li
317.488 436.345 li
317.488 446.855 li
342.207 446.855 li
cp
f
391.904 455.29 mo
391.839 428.04 li
378.474 450.488 li
373.738 450.488 li
360.438 428.624 li
360.438 455.29 li
350.576 455.29 li
350.576 409.874 li
359.27 409.874 li
376.268 438.097 li
393.007 409.874 li
401.636 409.874 li
401.766 455.29 li
391.904 455.29 li
cp
f
413.963 409.874 mo
420.451 409.874 li
420.451 455.29 li
413.963 455.29 li
413.963 409.874 li
cp
f
461 433.263 mo
463.162 431.511 464.244 428.992 464.244 425.705 cv
464.244 422.418 463.162 419.898 461 418.146 cv
458.837 416.394 455.701 415.519 451.592 415.519 cv
440.563 415.519 li
440.563 435.891 li
451.592 435.891 li
455.701 435.891 458.837 435.015 461 433.263 cv
cp
465.671 414.091 mo
469.045 416.903 470.732 420.773 470.732 425.705 cv
470.732 430.635 469.045 434.507 465.671 437.318 cv
462.298 440.13 457.669 441.535 451.787 441.535 cv
440.563 441.535 li
440.563 455.29 li
434.075 455.29 li
434.075 409.874 li
451.787 409.874 li
457.669 409.874 462.298 411.28 465.671 414.091 cv
cp
f
484.258 454.219 mo
481.079 453.16 478.581 451.786 476.765 450.099 cv
479.165 445.039 li
480.895 446.596 483.112 447.861 485.815 448.834 cv
488.518 449.807 491.297 450.294 494.152 450.294 cv
497.915 450.294 500.727 449.656 502.586 448.38 cv
504.446 447.104 505.376 445.407 505.376 443.287 cv
505.376 441.729 504.868 440.464 503.852 439.491 cv
502.835 438.518 501.581 437.772 500.089 437.253 cv
498.597 436.734 496.488 436.15 493.763 435.501 cv
490.346 434.68 487.588 433.858 485.491 433.036 cv
483.393 432.215 481.598 430.95 480.106 429.24 cv
478.614 427.532 477.868 425.229 477.868 422.331 cv
477.868 419.909 478.505 417.724 479.781 415.778 cv
481.057 413.832 482.993 412.274 485.588 411.106 cv
488.183 409.939 491.405 409.355 495.255 409.355 cv
497.937 409.355 500.575 409.702 503.17 410.393 cv
505.766 411.085 507.993 412.08 509.853 413.377 cv
507.712 418.568 li
505.808 417.357 503.776 416.438 501.613 415.811 cv
499.45 415.184 497.332 414.87 495.255 414.87 cv
491.578 414.87 488.821 415.541 486.983 416.881 cv
485.144 418.222 484.226 419.953 484.226 422.071 cv
484.226 423.628 484.745 424.894 485.783 425.867 cv
486.821 426.84 488.107 427.597 489.643 428.138 cv
491.178 428.679 493.265 429.251 495.904 429.857 cv
499.32 430.679 502.067 431.501 504.144 432.322 cv
506.22 433.145 508.004 434.398 509.496 436.085 cv
510.988 437.772 511.734 440.043 511.734 442.897 cv
511.734 445.277 511.086 447.45 509.788 449.418 cv
508.491 451.387 506.522 452.944 503.884 454.089 cv
501.246 455.236 498.001 455.809 494.152 455.809 cv
490.735 455.809 487.437 455.279 484.258 454.219 cv
cp
f
525.878 450.618 mo
522.504 447.158 520.817 442.184 520.817 435.696 cv
520.817 409.874 li
527.305 409.874 li
527.305 435.437 li
527.305 445.168 531.565 450.034 540.086 450.034 cv
544.239 450.034 547.417 448.834 549.624 446.434 cv
551.83 444.033 552.933 440.367 552.933 435.437 cv
552.933 409.874 li
559.226 409.874 li
559.226 435.696 li
559.226 442.228 557.539 447.212 554.165 450.651 cv
550.792 454.089 546.077 455.809 540.021 455.809 cv
533.965 455.809 529.251 454.079 525.878 450.618 cv
cp
f
614.632 455.29 mo
614.567 422.201 li
598.153 449.775 li
595.168 449.775 li
578.754 422.396 li
578.754 455.29 li
572.525 455.29 li
572.525 409.874 li
577.845 409.874 li
596.79 441.794 li
615.476 409.874 li
620.795 409.874 li
620.86 455.29 li
614.632 455.29 li
cp
f
1070.71 187.337 mo
1142.6 187.337 li
1164.79 207.103 li
1093.05 207.103 li
1070.71 187.337 li
cp
1125.95 296.887 mo
1129.39 293.858 li
1127.62 292.293 li
1105.45 272.689 li
1095.53 281.481 li
1109.52 293.844 li
1088.06 312.819 li
1046.16 312.819 li
1071.13 290.742 li
1088.57 275.322 li
1098.49 266.544 li
1098.5 266.544 li
1110.76 255.704 li
1127.62 240.795 li
1129.39 239.23 li
1125.95 236.202 li
1118.33 229.458 li
1098.45 229.458 li
1109.52 239.245 li
1088.57 257.767 li
1046.16 220.27 li
1088.06 220.27 li
1107.94 220.27 li
1200.14 220.27 li
1148.2 174.17 li
1055.81 174.17 li
1035.93 174.17 li
1050.83 187.337 li
1073.18 207.103 li
1011.38 207.103 li
1078.62 266.544 li
1011.38 325.986 li
1073.18 325.986 li
1093.05 325.986 li
1164.79 325.986 li
1142.6 345.751 li
1070.71 345.751 li
1082.65 335.188 li
1062.76 335.188 li
1050.83 345.751 li
1035.93 358.918 li
1055.81 358.918 li
1148.2 358.918 li
1200.14 312.819 li
1107.94 312.819 li
1125.95 296.887 li
cp
f
877.713 409.874 mo
888.224 409.874 li
888.224 446.726 li
910.996 446.726 li
910.996 455.29 li
877.713 455.29 li
877.713 409.874 li
cp
f
945.382 445.266 mo
947.544 444.033 949.242 442.313 950.475 440.108 cv
951.708 437.902 952.324 435.394 952.324 432.582 cv
952.324 429.771 951.708 427.262 950.475 425.056 cv
949.242 422.85 947.544 421.13 945.382 419.898 cv
943.219 418.665 940.797 418.049 938.116 418.049 cv
935.433 418.049 933.011 418.665 930.849 419.898 cv
928.686 421.13 926.989 422.85 925.756 425.056 cv
924.523 427.262 923.907 429.771 923.907 432.582 cv
923.907 435.394 924.523 437.902 925.756 440.108 cv
926.989 442.313 928.686 444.033 930.849 445.266 cv
933.011 446.499 935.433 447.115 938.116 447.115 cv
940.797 447.115 943.219 446.499 945.382 445.266 cv
cp
925.367 453.019 mo
921.582 450.986 918.619 448.185 916.478 444.617 cv
914.337 441.048 913.267 437.037 913.267 432.582 cv
913.267 428.127 914.337 424.115 916.478 420.546 cv
918.619 416.978 921.582 414.178 925.367 412.145 cv
929.151 410.112 933.4 409.095 938.116 409.095 cv
942.83 409.095 947.069 410.112 950.832 412.145 cv
954.595 414.178 957.557 416.978 959.72 420.546 cv
961.883 424.115 962.964 428.127 962.964 432.582 cv
962.964 437.037 961.883 441.048 959.72 444.617 cv
957.557 448.185 954.595 450.986 950.832 453.019 cv
947.069 455.052 942.83 456.068 938.116 456.068 cv
933.4 456.068 929.151 455.052 925.367 453.019 cv
cp
f
997.155 420.482 mo
995.511 419.119 993.11 418.438 989.954 418.438 cv
981.39 418.438 li
981.39 434.269 li
989.954 434.269 li
993.11 434.269 995.511 433.577 997.155 432.192 cv
998.799 430.809 999.621 428.862 999.621 426.354 cv
999.621 423.802 998.799 421.844 997.155 420.482 cv
cp
999.815 455.29 mo
991.057 442.638 li
990.538 442.638 li
981.39 442.638 li
981.39 455.29 li
970.879 455.29 li
970.879 409.874 li
990.538 409.874 li
994.56 409.874 998.053 410.545 1001.02 411.885 cv
1003.98 413.227 1006.26 415.129 1007.86 417.595 cv
1009.46 420.06 1010.26 422.979 1010.26 426.354 cv
1010.26 429.727 1009.45 432.636 1007.83 435.08 cv
1006.21 437.524 1003.9 439.394 1000.92 440.692 cv
1011.1 455.29 li
999.815 455.29 li
cp
f
1053.73 446.855 mo
1053.73 455.29 li
1018.56 455.29 li
1018.56 409.874 li
1052.89 409.874 li
1052.89 418.308 li
1029.01 418.308 li
1029.01 428.17 li
1050.1 428.17 li
1050.1 436.345 li
1029.01 436.345 li
1029.01 446.855 li
1053.73 446.855 li
cp
f
1103.43 455.29 mo
1103.36 428.04 li
1090 450.488 li
1085.26 450.488 li
1071.96 428.624 li
1071.96 455.29 li
1062.1 455.29 li
1062.1 409.874 li
1070.79 409.874 li
1087.79 438.097 li
1104.53 409.874 li
1113.16 409.874 li
1113.29 455.29 li
1103.43 455.29 li
cp
f
1125.49 409.874 mo
1131.97 409.874 li
1131.97 455.29 li
1125.49 455.29 li
1125.49 409.874 li
cp
f
1172.52 433.263 mo
1174.68 431.511 1175.77 428.992 1175.77 425.705 cv
1175.77 422.418 1174.68 419.898 1172.52 418.146 cv
1170.36 416.394 1167.22 415.519 1163.11 415.519 cv
1152.09 415.519 li
1152.09 435.891 li
1163.11 435.891 li
1167.22 435.891 1170.36 435.015 1172.52 433.263 cv
cp
1177.19 414.091 mo
1180.57 416.903 1182.25 420.773 1182.25 425.705 cv
1182.25 430.635 1180.57 434.507 1177.19 437.318 cv
1173.82 440.13 1169.19 441.535 1163.31 441.535 cv
1152.09 441.535 li
1152.09 455.29 li
1145.6 455.29 li
1145.6 409.874 li
1163.31 409.874 li
1169.19 409.874 1173.82 411.28 1177.19 414.091 cv
cp
f
1195.78 454.219 mo
1192.6 453.16 1190.1 451.786 1188.29 450.099 cv
1190.69 445.039 li
1192.42 446.596 1194.63 447.861 1197.34 448.834 cv
1200.04 449.807 1202.82 450.294 1205.67 450.294 cv
1209.44 450.294 1212.25 449.656 1214.11 448.38 cv
1215.97 447.104 1216.9 445.407 1216.9 443.287 cv
1216.9 441.729 1216.39 440.464 1215.37 439.491 cv
1214.36 438.518 1213.1 437.772 1211.61 437.253 cv
1210.12 436.734 1208.01 436.15 1205.29 435.501 cv
1201.87 434.68 1199.11 433.858 1197.01 433.036 cv
1194.92 432.215 1193.12 430.95 1191.63 429.24 cv
1190.14 427.532 1189.39 425.229 1189.39 422.331 cv
1189.39 419.909 1190.03 417.724 1191.3 415.778 cv
1192.58 413.832 1194.52 412.274 1197.11 411.106 cv
1199.71 409.939 1202.93 409.355 1206.78 409.355 cv
1209.46 409.355 1212.1 409.702 1214.69 410.393 cv
1217.29 411.085 1219.52 412.08 1221.38 413.377 cv
1219.23 418.568 li
1217.33 417.357 1215.3 416.438 1213.14 415.811 cv
1210.97 415.184 1208.85 414.87 1206.78 414.87 cv
1203.1 414.87 1200.34 415.541 1198.51 416.881 cv
1196.67 418.222 1195.75 419.953 1195.75 422.071 cv
1195.75 423.628 1196.27 424.894 1197.31 425.867 cv
1198.34 426.84 1199.63 427.597 1201.17 428.138 cv
1202.7 428.679 1204.79 429.251 1207.43 429.857 cv
1210.84 430.679 1213.59 431.501 1215.67 432.322 cv
1217.74 433.145 1219.53 434.398 1221.02 436.085 cv
1222.51 437.772 1223.26 440.043 1223.26 442.897 cv
1223.26 445.277 1222.61 447.45 1221.31 449.418 cv
1220.01 451.387 1218.04 452.944 1215.41 454.089 cv
1212.77 455.236 1209.52 455.809 1205.67 455.809 cv
1202.26 455.809 1198.96 455.279 1195.78 454.219 cv
cp
f
1237.4 450.618 mo
1234.03 447.158 1232.34 442.184 1232.34 435.696 cv
1232.34 409.874 li
1238.83 409.874 li
1238.83 435.437 li
1238.83 445.168 1243.09 450.034 1251.61 450.034 cv
1255.76 450.034 1258.94 448.834 1261.15 446.434 cv
1263.35 444.033 1264.46 440.367 1264.46 435.437 cv
1264.46 409.874 li
1270.75 409.874 li
1270.75 435.696 li
1270.75 442.228 1269.06 447.212 1265.69 450.651 cv
1262.31 454.089 1257.6 455.809 1251.54 455.809 cv
1245.49 455.809 1240.77 454.079 1237.4 450.618 cv
cp
f
1326.15 455.29 mo
1326.09 422.201 li
1309.68 449.775 li
1306.69 449.775 li
1290.28 422.396 li
1290.28 455.29 li
1284.05 455.29 li
1284.05 409.874 li
1289.37 409.874 li
1308.31 441.794 li
1327 409.874 li
1332.32 409.874 li
1332.38 455.29 li
1326.15 455.29 li
cp
f
357.766 1061.69 mo
455.293 1061.69 li
432.936 1081.46 li
380.106 1081.46 li
357.766 1061.69 li
cp
413.009 1171.24 mo
416.447 1168.21 li
414.677 1166.65 li
392.512 1147.04 li
382.593 1155.84 li
396.58 1168.2 li
375.117 1187.17 li
333.217 1187.17 li
358.19 1165.1 li
375.629 1149.68 li
385.548 1140.9 li
385.563 1140.9 li
397.823 1130.06 li
414.677 1115.15 li
416.447 1113.58 li
413.009 1110.56 li
405.387 1103.81 li
385.504 1103.81 li
396.58 1113.6 li
375.629 1132.12 li
333.217 1094.63 li
375.117 1094.63 li
395 1094.63 li
437.887 1094.63 li
490.036 1048.53 li
342.873 1048.53 li
322.991 1048.53 li
337.884 1061.69 li
360.238 1081.46 li
298.441 1081.46 li
365.681 1140.9 li
298.441 1200.34 li
360.238 1200.34 li
380.106 1200.34 li
432.951 1200.34 li
455.317 1220.11 li
357.766 1220.11 li
369.704 1209.54 li
349.822 1209.54 li
337.884 1220.11 li
322.991 1233.27 li
342.873 1233.27 li
490.036 1233.27 li
437.896 1187.17 li
395 1187.17 li
413.009 1171.24 li
cp
f
166.19 1269.3 mo
176.701 1269.3 li
176.701 1306.15 li
199.474 1306.15 li
199.474 1314.71 li
166.19 1314.71 li
166.19 1269.3 li
cp
f
233.859 1304.69 mo
236.022 1303.46 237.72 1301.74 238.953 1299.53 cv
240.185 1297.33 240.802 1294.82 240.802 1292.01 cv
240.802 1289.2 240.185 1286.69 238.953 1284.48 cv
237.72 1282.28 236.022 1280.56 233.859 1279.32 cv
231.696 1278.09 229.274 1277.47 226.593 1277.47 cv
223.911 1277.47 221.489 1278.09 219.327 1279.32 cv
217.163 1280.56 215.466 1282.28 214.233 1284.48 cv
213.001 1286.69 212.384 1289.2 212.384 1292.01 cv
212.384 1294.82 213.001 1297.33 214.233 1299.53 cv
215.466 1301.74 217.163 1303.46 219.327 1304.69 cv
221.489 1305.92 223.911 1306.54 226.593 1306.54 cv
229.274 1306.54 231.696 1305.92 233.859 1304.69 cv
cp
213.844 1312.44 mo
210.059 1310.41 207.097 1307.61 204.956 1304.04 cv
202.814 1300.47 201.744 1296.46 201.744 1292.01 cv
201.744 1287.55 202.814 1283.54 204.956 1279.97 cv
207.097 1276.4 210.059 1273.6 213.844 1271.57 cv
217.628 1269.54 221.878 1268.52 226.593 1268.52 cv
231.307 1268.52 235.546 1269.54 239.31 1271.57 cv
243.072 1273.6 246.035 1276.4 248.198 1279.97 cv
250.36 1283.54 251.442 1287.55 251.442 1292.01 cv
251.442 1296.46 250.36 1300.47 248.198 1304.04 cv
246.035 1307.61 243.072 1310.41 239.31 1312.44 cv
235.546 1314.48 231.307 1315.49 226.593 1315.49 cv
221.878 1315.49 217.628 1314.48 213.844 1312.44 cv
cp
f
285.633 1279.91 mo
283.989 1278.54 281.588 1277.86 278.431 1277.86 cv
269.867 1277.86 li
269.867 1293.69 li
278.431 1293.69 li
281.588 1293.69 283.989 1293 285.633 1291.62 cv
287.276 1290.23 288.098 1288.29 288.098 1285.78 cv
288.098 1283.23 287.276 1281.27 285.633 1279.91 cv
cp
288.293 1314.71 mo
279.534 1302.06 li
279.015 1302.06 li
269.867 1302.06 li
269.867 1314.71 li
259.356 1314.71 li
259.356 1269.3 li
279.015 1269.3 li
283.038 1269.3 286.53 1269.97 289.493 1271.31 cv
292.456 1272.65 294.737 1274.55 296.338 1277.02 cv
297.938 1279.49 298.739 1282.41 298.739 1285.78 cv
298.739 1289.15 297.928 1292.06 296.306 1294.5 cv
294.684 1296.95 292.38 1298.82 289.396 1300.12 cv
299.582 1314.71 li
288.293 1314.71 li
cp
f
342.207 1306.28 mo
342.207 1314.71 li
307.042 1314.71 li
307.042 1269.3 li
341.363 1269.3 li
341.363 1277.73 li
317.488 1277.73 li
317.488 1287.6 li
338.574 1287.6 li
338.574 1295.77 li
317.488 1295.77 li
317.488 1306.28 li
342.207 1306.28 li
cp
f
391.904 1314.71 mo
391.839 1287.47 li
378.474 1309.91 li
373.738 1309.91 li
360.438 1288.05 li
360.438 1314.71 li
350.576 1314.71 li
350.576 1269.3 li
359.27 1269.3 li
376.268 1297.52 li
393.007 1269.3 li
401.636 1269.3 li
401.766 1314.71 li
391.904 1314.71 li
cp
f
413.963 1269.3 mo
420.451 1269.3 li
420.451 1314.71 li
413.963 1314.71 li
413.963 1269.3 li
cp
f
461 1292.69 mo
463.162 1290.94 464.244 1288.42 464.244 1285.13 cv
464.244 1281.84 463.162 1279.32 461 1277.57 cv
458.837 1275.82 455.701 1274.94 451.592 1274.94 cv
440.563 1274.94 li
440.563 1295.32 li
451.592 1295.32 li
455.701 1295.32 458.837 1294.44 461 1292.69 cv
cp
465.671 1273.52 mo
469.045 1276.33 470.732 1280.2 470.732 1285.13 cv
470.732 1290.06 469.045 1293.93 465.671 1296.74 cv
462.298 1299.56 457.669 1300.96 451.787 1300.96 cv
440.563 1300.96 li
440.563 1314.71 li
434.075 1314.71 li
434.075 1269.3 li
451.787 1269.3 li
457.669 1269.3 462.298 1270.71 465.671 1273.52 cv
cp
f
484.258 1313.64 mo
481.079 1312.58 478.581 1311.21 476.765 1309.52 cv
479.165 1304.46 li
480.895 1306.02 483.112 1307.29 485.815 1308.26 cv
488.518 1309.23 491.297 1309.72 494.152 1309.72 cv
497.915 1309.72 500.727 1309.08 502.586 1307.81 cv
504.446 1306.53 505.376 1304.83 505.376 1302.71 cv
505.376 1301.16 504.868 1299.89 503.852 1298.92 cv
502.835 1297.94 501.581 1297.2 500.089 1296.68 cv
498.597 1296.16 496.488 1295.58 493.763 1294.93 cv
490.346 1294.11 487.588 1293.28 485.491 1292.46 cv
483.393 1291.64 481.598 1290.38 480.106 1288.67 cv
478.614 1286.96 477.868 1284.65 477.868 1281.76 cv
477.868 1279.33 478.505 1277.15 479.781 1275.2 cv
481.057 1273.26 482.993 1271.7 485.588 1270.53 cv
488.183 1269.36 491.405 1268.78 495.255 1268.78 cv
497.937 1268.78 500.575 1269.13 503.17 1269.82 cv
505.766 1270.51 507.993 1271.5 509.853 1272.8 cv
507.712 1277.99 li
505.808 1276.78 503.776 1275.86 501.613 1275.24 cv
499.45 1274.61 497.332 1274.29 495.255 1274.29 cv
491.578 1274.29 488.821 1274.97 486.983 1276.31 cv
485.144 1277.65 484.226 1279.38 484.226 1281.5 cv
484.226 1283.05 484.745 1284.32 485.783 1285.29 cv
486.821 1286.27 488.107 1287.02 489.643 1287.56 cv
491.178 1288.1 493.265 1288.68 495.904 1289.28 cv
499.32 1290.1 502.067 1290.93 504.144 1291.75 cv
506.22 1292.57 508.004 1293.82 509.496 1295.51 cv
510.988 1297.2 511.734 1299.47 511.734 1302.32 cv
511.734 1304.7 511.086 1306.88 509.788 1308.84 cv
508.491 1310.81 506.522 1312.37 503.884 1313.51 cv
501.246 1314.66 498.001 1315.23 494.152 1315.23 cv
490.735 1315.23 487.437 1314.71 484.258 1313.64 cv
cp
f
525.878 1310.04 mo
522.504 1306.58 520.817 1301.61 520.817 1295.12 cv
520.817 1269.3 li
527.305 1269.3 li
527.305 1294.86 li
527.305 1304.59 531.565 1309.46 540.086 1309.46 cv
544.239 1309.46 547.417 1308.26 549.624 1305.86 cv
551.83 1303.46 552.933 1299.79 552.933 1294.86 cv
552.933 1269.3 li
559.226 1269.3 li
559.226 1295.12 li
559.226 1301.65 557.539 1306.64 554.165 1310.08 cv
550.792 1313.51 546.077 1315.23 540.021 1315.23 cv
533.965 1315.23 529.251 1313.5 525.878 1310.04 cv
cp
f
614.632 1314.71 mo
614.567 1281.63 li
598.153 1309.2 li
595.168 1309.2 li
578.754 1281.82 li
578.754 1314.71 li
572.525 1314.71 li
572.525 1269.3 li
577.845 1269.3 li
596.79 1301.22 li
615.476 1269.3 li
620.795 1269.3 li
620.86 1314.71 li
614.632 1314.71 li
cp
f
1073.92 1085.06 mo
1138.94 1085.06 li
1146.91 1076.57 li
1164.45 1058.48 li
1054.27 1058.48 li
1073.92 1085.06 li
cp
1042.08 1180.36 mo
1067.28 1180.36 li
1097.64 1139.29 li
1067.28 1098.22 li
1042.08 1098.22 li
1072.45 1139.29 li
1042.08 1180.36 li
cp
1054.27 1220.11 mo
1164.45 1220.11 li
1146.99 1202.09 li
1138.94 1193.53 li
1073.92 1193.53 li
1054.27 1220.11 li
cp
1195.55 1233.27 mo
1028.16 1233.27 li
1057.55 1193.53 li
1015.97 1193.53 li
1056.07 1139.29 li
1015.97 1085.06 li
1057.55 1085.06 li
1028.16 1045.31 li
1195.55 1045.31 li
1156.44 1085.65 li
1144.64 1098.22 li
1083.66 1098.22 li
1114.02 1139.29 li
1083.66 1180.36 li
1144.64 1180.36 li
1156.51 1193 li
1195.55 1233.27 li
cp
f
877.713 1269.3 mo
888.224 1269.3 li
888.224 1306.15 li
910.996 1306.15 li
910.996 1314.71 li
877.713 1314.71 li
877.713 1269.3 li
cp
f
945.382 1304.69 mo
947.544 1303.46 949.242 1301.74 950.475 1299.53 cv
951.708 1297.33 952.324 1294.82 952.324 1292.01 cv
952.324 1289.2 951.708 1286.69 950.475 1284.48 cv
949.242 1282.28 947.544 1280.56 945.382 1279.32 cv
943.219 1278.09 940.797 1277.47 938.116 1277.47 cv
935.433 1277.47 933.011 1278.09 930.849 1279.32 cv
928.686 1280.56 926.989 1282.28 925.756 1284.48 cv
924.523 1286.69 923.907 1289.2 923.907 1292.01 cv
923.907 1294.82 924.523 1297.33 925.756 1299.53 cv
926.989 1301.74 928.686 1303.46 930.849 1304.69 cv
933.011 1305.92 935.433 1306.54 938.116 1306.54 cv
940.797 1306.54 943.219 1305.92 945.382 1304.69 cv
cp
925.367 1312.44 mo
921.582 1310.41 918.619 1307.61 916.478 1304.04 cv
914.337 1300.47 913.267 1296.46 913.267 1292.01 cv
913.267 1287.55 914.337 1283.54 916.478 1279.97 cv
918.619 1276.4 921.582 1273.6 925.367 1271.57 cv
929.151 1269.54 933.4 1268.52 938.116 1268.52 cv
942.83 1268.52 947.069 1269.54 950.832 1271.57 cv
954.595 1273.6 957.557 1276.4 959.72 1279.97 cv
961.883 1283.54 962.964 1287.55 962.964 1292.01 cv
962.964 1296.46 961.883 1300.47 959.72 1304.04 cv
957.557 1307.61 954.595 1310.41 950.832 1312.44 cv
947.069 1314.48 942.83 1315.49 938.116 1315.49 cv
933.4 1315.49 929.151 1314.48 925.367 1312.44 cv
cp
f
997.155 1279.91 mo
995.511 1278.54 993.11 1277.86 989.954 1277.86 cv
981.39 1277.86 li
981.39 1293.69 li
989.954 1293.69 li
993.11 1293.69 995.511 1293 997.155 1291.62 cv
998.799 1290.23 999.621 1288.29 999.621 1285.78 cv
999.621 1283.23 998.799 1281.27 997.155 1279.91 cv
cp
999.815 1314.71 mo
991.057 1302.06 li
990.538 1302.06 li
981.39 1302.06 li
981.39 1314.71 li
970.879 1314.71 li
970.879 1269.3 li
990.538 1269.3 li
994.56 1269.3 998.053 1269.97 1001.02 1271.31 cv
1003.98 1272.65 1006.26 1274.55 1007.86 1277.02 cv
1009.46 1279.49 1010.26 1282.41 1010.26 1285.78 cv
1010.26 1289.15 1009.45 1292.06 1007.83 1294.5 cv
1006.21 1296.95 1003.9 1298.82 1000.92 1300.12 cv
1011.1 1314.71 li
999.815 1314.71 li
cp
f
1053.73 1306.28 mo
1053.73 1314.71 li
1018.56 1314.71 li
1018.56 1269.3 li
1052.89 1269.3 li
1052.89 1277.73 li
1029.01 1277.73 li
1029.01 1287.6 li
1050.1 1287.6 li
1050.1 1295.77 li
1029.01 1295.77 li
1029.01 1306.28 li
1053.73 1306.28 li
cp
f
1103.43 1314.71 mo
1103.36 1287.47 li
1090 1309.91 li
1085.26 1309.91 li
1071.96 1288.05 li
1071.96 1314.71 li
1062.1 1314.71 li
1062.1 1269.3 li
1070.79 1269.3 li
1087.79 1297.52 li
1104.53 1269.3 li
1113.16 1269.3 li
1113.29 1314.71 li
1103.43 1314.71 li
cp
f
1125.49 1269.3 mo
1131.97 1269.3 li
1131.97 1314.71 li
1125.49 1314.71 li
1125.49 1269.3 li
cp
f
1172.52 1292.69 mo
1174.68 1290.94 1175.77 1288.42 1175.77 1285.13 cv
1175.77 1281.84 1174.68 1279.32 1172.52 1277.57 cv
1170.36 1275.82 1167.22 1274.94 1163.11 1274.94 cv
1152.09 1274.94 li
1152.09 1295.32 li
1163.11 1295.32 li
1167.22 1295.32 1170.36 1294.44 1172.52 1292.69 cv
cp
1177.19 1273.52 mo
1180.57 1276.33 1182.25 1280.2 1182.25 1285.13 cv
1182.25 1290.06 1180.57 1293.93 1177.19 1296.74 cv
1173.82 1299.56 1169.19 1300.96 1163.31 1300.96 cv
1152.09 1300.96 li
1152.09 1314.71 li
1145.6 1314.71 li
1145.6 1269.3 li
1163.31 1269.3 li
1169.19 1269.3 1173.82 1270.71 1177.19 1273.52 cv
cp
f
1195.78 1313.64 mo
1192.6 1312.58 1190.1 1311.21 1188.29 1309.52 cv
1190.69 1304.46 li
1192.42 1306.02 1194.63 1307.29 1197.34 1308.26 cv
1200.04 1309.23 1202.82 1309.72 1205.67 1309.72 cv
1209.44 1309.72 1212.25 1309.08 1214.11 1307.81 cv
1215.97 1306.53 1216.9 1304.83 1216.9 1302.71 cv
1216.9 1301.16 1216.39 1299.89 1215.37 1298.92 cv
1214.36 1297.94 1213.1 1297.2 1211.61 1296.68 cv
1210.12 1296.16 1208.01 1295.58 1205.29 1294.93 cv
1201.87 1294.11 1199.11 1293.28 1197.01 1292.46 cv
1194.92 1291.64 1193.12 1290.38 1191.63 1288.67 cv
1190.14 1286.96 1189.39 1284.65 1189.39 1281.76 cv
1189.39 1279.33 1190.03 1277.15 1191.3 1275.2 cv
1192.58 1273.26 1194.52 1271.7 1197.11 1270.53 cv
1199.71 1269.36 1202.93 1268.78 1206.78 1268.78 cv
1209.46 1268.78 1212.1 1269.13 1214.69 1269.82 cv
1217.29 1270.51 1219.52 1271.5 1221.38 1272.8 cv
1219.23 1277.99 li
1217.33 1276.78 1215.3 1275.86 1213.14 1275.24 cv
1210.97 1274.61 1208.85 1274.29 1206.78 1274.29 cv
1203.1 1274.29 1200.34 1274.97 1198.51 1276.31 cv
1196.67 1277.65 1195.75 1279.38 1195.75 1281.5 cv
1195.75 1283.05 1196.27 1284.32 1197.31 1285.29 cv
1198.34 1286.27 1199.63 1287.02 1201.17 1287.56 cv
1202.7 1288.1 1204.79 1288.68 1207.43 1289.28 cv
1210.84 1290.1 1213.59 1290.93 1215.67 1291.75 cv
1217.74 1292.57 1219.53 1293.82 1221.02 1295.51 cv
1222.51 1297.2 1223.26 1299.47 1223.26 1302.32 cv
1223.26 1304.7 1222.61 1306.88 1221.31 1308.84 cv
1220.01 1310.81 1218.04 1312.37 1215.41 1313.51 cv
1212.77 1314.66 1209.52 1315.23 1205.67 1315.23 cv
1202.26 1315.23 1198.96 1314.71 1195.78 1313.64 cv
cp
f
1237.4 1310.04 mo
1234.03 1306.58 1232.34 1301.61 1232.34 1295.12 cv
1232.34 1269.3 li
1238.83 1269.3 li
1238.83 1294.86 li
1238.83 1304.59 1243.09 1309.46 1251.61 1309.46 cv
1255.76 1309.46 1258.94 1308.26 1261.15 1305.86 cv
1263.35 1303.46 1264.46 1299.79 1264.46 1294.86 cv
1264.46 1269.3 li
1270.75 1269.3 li
1270.75 1295.12 li
1270.75 1301.65 1269.06 1306.64 1265.69 1310.08 cv
1262.31 1313.51 1257.6 1315.23 1251.54 1315.23 cv
1245.49 1315.23 1240.77 1313.5 1237.4 1310.04 cv
cp
f
1326.15 1314.71 mo
1326.09 1281.63 li
1309.68 1309.2 li
1306.69 1309.2 li
1290.28 1281.82 li
1290.28 1314.71 li
1284.05 1314.71 li
1284.05 1269.3 li
1289.37 1269.3 li
1308.31 1301.22 li
1327 1269.3 li
1332.32 1269.3 li
1332.38 1314.71 li
1326.15 1314.71 li
cp
f
1974.22 606.72 mo
1838.81 606.72 li
1838.81 617.078 li
1841.98 619.887 li
1864.33 639.652 li
1814.26 639.652 li
1814.26 650.01 li
1869.78 699.093 li
1814.26 748.177 li
1814.26 758.535 li
1961.68 758.535 li
1974.22 769.61 li
1974.22 752.083 li
1966.63 745.368 li
1899.1 745.368 li
1917.11 729.436 li
1920.54 726.408 li
1918.77 724.842 li
1896.61 705.238 li
1886.69 714.031 li
1900.68 726.393 li
1879.21 745.368 li
1837.31 745.368 li
1862.29 723.292 li
1879.73 707.872 li
1889.64 699.093 li
1889.66 699.093 li
1901.92 688.252 li
1918.77 673.345 li
1920.54 671.779 li
1917.11 668.751 li
1909.48 662.006 li
1889.6 662.006 li
1900.68 671.794 li
1879.73 690.315 li
1837.31 652.819 li
1966.61 652.819 li
1974.22 646.089 li
1974.22 628.548 li
1961.67 639.652 li
1884.2 639.652 li
1861.86 619.887 li
1974.22 619.887 li
1974.22 606.72 li
cp
1861.86 778.3 mo
1873.8 767.737 li
1853.92 767.737 li
1841.98 778.3 li
1838.81 781.109 li
1838.81 791.467 li
1974.22 791.467 li
1974.22 778.3 li
1861.86 778.3 li
cp
1 1 1 rgb
f
1974.22 606.72 mo
1974.22 652.819 li
1961.05 652.819 li
1961.05 606.72 li
1974.22 606.72 li
cp
f
1974.22 745.368 mo
1974.22 791.467 li
1961.05 791.467 li
1961.05 745.368 li
1974.22 745.368 li
cp
f
1666.19 830.606 mo
1676.7 830.606 li
1676.7 867.458 li
1699.47 867.458 li
1699.47 876.021 li
1666.19 876.021 li
1666.19 830.606 li
cp
f
1733.86 865.998 mo
1736.02 864.765 1737.72 863.046 1738.95 860.84 cv
1740.19 858.634 1740.8 856.126 1740.8 853.313 cv
1740.8 850.503 1740.19 847.994 1738.95 845.788 cv
1737.72 843.582 1736.02 841.862 1733.86 840.63 cv
1731.7 839.397 1729.27 838.781 1726.59 838.781 cv
1723.91 838.781 1721.49 839.397 1719.33 840.63 cv
1717.16 841.862 1715.47 843.582 1714.23 845.788 cv
1713 847.994 1712.38 850.503 1712.38 853.313 cv
1712.38 856.126 1713 858.634 1714.23 860.84 cv
1715.47 863.046 1717.16 864.765 1719.33 865.998 cv
1721.49 867.23 1723.91 867.847 1726.59 867.847 cv
1729.27 867.847 1731.7 867.23 1733.86 865.998 cv
cp
1713.84 873.751 mo
1710.06 871.719 1707.1 868.917 1704.96 865.349 cv
1702.81 861.78 1701.74 857.77 1701.74 853.313 cv
1701.74 848.859 1702.81 844.847 1704.96 841.278 cv
1707.1 837.71 1710.06 834.91 1713.84 832.877 cv
1717.63 830.845 1721.88 829.827 1726.59 829.827 cv
1731.31 829.827 1735.55 830.845 1739.31 832.877 cv
1743.07 834.91 1746.04 837.71 1748.2 841.278 cv
1750.36 844.847 1751.44 848.859 1751.44 853.313 cv
1751.44 857.77 1750.36 861.78 1748.2 865.349 cv
1746.04 868.917 1743.07 871.719 1739.31 873.751 cv
1735.55 875.784 1731.31 876.8 1726.59 876.8 cv
1721.88 876.8 1717.63 875.784 1713.84 873.751 cv
cp
f
1785.63 841.214 mo
1783.99 839.852 1781.59 839.17 1778.43 839.17 cv
1769.87 839.17 li
1769.87 855.001 li
1778.43 855.001 li
1781.59 855.001 1783.99 854.31 1785.63 852.925 cv
1787.28 851.541 1788.1 849.595 1788.1 847.086 cv
1788.1 844.534 1787.28 842.576 1785.63 841.214 cv
cp
1788.29 876.021 mo
1779.53 863.37 li
1779.02 863.37 li
1769.87 863.37 li
1769.87 876.021 li
1759.36 876.021 li
1759.36 830.606 li
1779.02 830.606 li
1783.04 830.606 1786.53 831.277 1789.49 832.617 cv
1792.46 833.959 1794.74 835.861 1796.34 838.327 cv
1797.94 840.792 1798.74 843.712 1798.74 847.086 cv
1798.74 850.459 1797.93 853.368 1796.31 855.812 cv
1794.68 858.256 1792.38 860.126 1789.4 861.424 cv
1799.58 876.021 li
1788.29 876.021 li
cp
f
1842.21 867.587 mo
1842.21 876.021 li
1807.04 876.021 li
1807.04 830.606 li
1841.36 830.606 li
1841.36 839.04 li
1817.49 839.04 li
1817.49 848.902 li
1838.57 848.902 li
1838.57 857.077 li
1817.49 857.077 li
1817.49 867.587 li
1842.21 867.587 li
cp
f
1891.9 876.021 mo
1891.84 848.772 li
1878.47 871.221 li
1873.74 871.221 li
1860.44 849.356 li
1860.44 876.021 li
1850.58 876.021 li
1850.58 830.606 li
1859.27 830.606 li
1876.27 858.829 li
1893.01 830.606 li
1901.64 830.606 li
1901.77 876.021 li
1891.9 876.021 li
cp
f
1913.96 830.606 mo
1920.45 830.606 li
1920.45 876.021 li
1913.96 876.021 li
1913.96 830.606 li
cp
f
1961 853.995 mo
1963.16 852.243 1964.24 849.725 1964.24 846.437 cv
1964.24 843.15 1963.16 840.63 1961 838.878 cv
1958.84 837.126 1955.7 836.251 1951.59 836.251 cv
1940.56 836.251 li
1940.56 856.623 li
1951.59 856.623 li
1955.7 856.623 1958.84 855.747 1961 853.995 cv
cp
1965.67 834.823 mo
1969.04 837.636 1970.73 841.506 1970.73 846.437 cv
1970.73 851.367 1969.04 855.239 1965.67 858.05 cv
1962.3 860.862 1957.67 862.268 1951.79 862.268 cv
1940.56 862.268 li
1940.56 876.021 li
1934.08 876.021 li
1934.08 830.606 li
1951.79 830.606 li
1957.67 830.606 1962.3 832.012 1965.67 834.823 cv
cp
f
1984.26 874.951 mo
1981.08 873.892 1978.58 872.519 1976.76 870.831 cv
1979.17 865.771 li
1980.89 867.328 1983.11 868.593 1985.82 869.566 cv
1988.52 870.539 1991.3 871.026 1994.15 871.026 cv
1997.92 871.026 2000.73 870.389 2002.59 869.112 cv
2004.45 867.837 2005.38 866.139 2005.38 864.019 cv
2005.38 862.462 2004.87 861.196 2003.85 860.224 cv
2002.83 859.25 2001.58 858.504 2000.09 857.985 cv
1998.6 857.466 1996.49 856.882 1993.76 856.233 cv
1990.35 855.412 1987.59 854.59 1985.49 853.768 cv
1983.39 852.947 1981.6 851.682 1980.11 849.973 cv
1978.61 848.265 1977.87 845.961 1977.87 843.063 cv
1977.87 840.641 1978.51 838.456 1979.78 836.51 cv
1981.06 834.563 1982.99 833.007 1985.59 831.839 cv
1988.18 830.671 1991.4 830.087 1995.26 830.087 cv
1997.94 830.087 2000.58 830.434 2003.17 831.125 cv
2005.77 831.817 2007.99 832.812 2009.85 834.109 cv
2007.71 839.3 li
2005.81 838.09 2003.78 837.17 2001.61 836.543 cv
1999.45 835.916 1997.33 835.602 1995.26 835.602 cv
1991.58 835.602 1988.82 836.272 1986.98 837.613 cv
1985.14 838.954 1984.23 840.685 1984.23 842.804 cv
1984.23 844.36 1984.74 845.626 1985.78 846.599 cv
1986.82 847.572 1988.11 848.329 1989.64 848.87 cv
1991.18 849.411 1993.27 849.983 1995.9 850.589 cv
1999.32 851.411 2002.07 852.233 2004.14 853.055 cv
2006.22 853.877 2008 855.131 2009.5 856.817 cv
2010.99 858.504 2011.73 860.775 2011.73 863.63 cv
2011.73 866.009 2011.09 868.183 2009.79 870.15 cv
2008.49 872.119 2006.52 873.676 2003.88 874.821 cv
2001.25 875.968 1998 876.541 1994.15 876.541 cv
1990.73 876.541 1987.44 876.012 1984.26 874.951 cv
cp
f
2025.88 871.351 mo
2022.5 867.891 2020.82 862.916 2020.82 856.428 cv
2020.82 830.606 li
2027.3 830.606 li
2027.3 856.169 li
2027.3 865.9 2031.56 870.767 2040.09 870.767 cv
2044.24 870.767 2047.42 869.566 2049.62 867.166 cv
2051.83 864.765 2052.93 861.1 2052.93 856.169 cv
2052.93 830.606 li
2059.23 830.606 li
2059.23 856.428 li
2059.23 862.96 2057.54 867.944 2054.17 871.383 cv
2050.79 874.821 2046.08 876.541 2040.02 876.541 cv
2033.96 876.541 2029.25 874.812 2025.88 871.351 cv
cp
f
2114.63 876.021 mo
2114.57 842.934 li
2098.15 870.507 li
2095.17 870.507 li
2078.75 843.128 li
2078.75 876.021 li
2072.53 876.021 li
2072.53 830.606 li
2077.85 830.606 li
2096.79 862.526 li
2115.48 830.606 li
2120.79 830.606 li
2120.86 876.021 li
2114.63 876.021 li
cp
f
2682.37 605.11 mo
2529.15 605.11 li
2526.48 605.11 2524.94 608.157 2526.53 610.31 cv
2566.49 664.362 li
2566.5 664.362 li
2576.23 677.529 li
2592.17 699.093 li
2581.1 714.075 li
2597.47 714.075 li
2608.54 699.093 li
2592.6 677.529 li
2582.88 664.362 li
2582.86 664.362 li
2548.8 618.277 li
2658.97 618.277 li
2643.44 634.297 li
2582.71 634.297 li
2604.94 664.362 li
2590.35 664.362 li
2600.08 677.529 li
2625.48 677.529 li
2627.79 677.529 2629.11 674.906 2627.74 673.053 cv
2608.81 647.464 li
2649.03 647.464 li
2684.71 610.64 li
2686.71 608.571 2685.25 605.11 2682.37 605.11 cv
cp
f
2684.71 787.547 mo
2649.03 750.723 li
2608.81 750.723 li
2627.74 725.134 li
2629.11 723.281 2627.79 720.658 2625.48 720.658 cv
2551.03 720.658 li
2566.97 699.093 li
2551.03 677.529 li
2568.76 677.529 li
2559.01 664.362 li
2531.39 664.362 li
2528.71 664.362 2527.18 667.409 2528.77 669.561 cv
2550.6 699.093 li
2528.77 728.626 li
2527.18 730.778 2528.71 733.825 2531.39 733.825 cv
2558.95 733.825 li
2587.23 733.825 li
2604.94 733.825 li
2582.71 763.89 li
2643.44 763.89 li
2658.97 779.909 li
2548.8 779.909 li
2577.99 740.409 li
2561.62 740.409 li
2526.53 787.878 li
2524.94 790.03 2526.48 793.076 2529.15 793.076 cv
2682.37 793.076 li
2685.25 793.076 2686.71 789.615 2684.71 787.547 cv
cp
f
2377.71 832.215 mo
2388.22 832.215 li
2388.22 869.066 li
2411 869.066 li
2411 877.631 li
2377.71 877.631 li
2377.71 832.215 li
cp
f
2445.38 867.606 mo
2447.54 866.374 2449.24 864.654 2450.47 862.449 cv
2451.71 860.243 2452.32 857.735 2452.32 854.923 cv
2452.32 852.111 2451.71 849.603 2450.47 847.396 cv
2449.24 845.19 2447.54 843.472 2445.38 842.239 cv
2443.22 841.006 2440.8 840.39 2438.12 840.39 cv
2435.43 840.39 2433.01 841.006 2430.85 842.239 cv
2428.69 843.472 2426.99 845.19 2425.76 847.396 cv
2424.52 849.603 2423.91 852.111 2423.91 854.923 cv
2423.91 857.735 2424.52 860.243 2425.76 862.449 cv
2426.99 864.654 2428.69 866.374 2430.85 867.606 cv
2433.01 868.84 2435.43 869.456 2438.12 869.456 cv
2440.8 869.456 2443.22 868.84 2445.38 867.606 cv
cp
2425.37 875.359 mo
2421.58 873.327 2418.62 870.526 2416.48 866.958 cv
2414.34 863.39 2413.27 859.378 2413.27 854.923 cv
2413.27 850.469 2414.34 846.456 2416.48 842.888 cv
2418.62 839.319 2421.58 836.52 2425.37 834.485 cv
2429.15 832.453 2433.4 831.437 2438.12 831.437 cv
2442.83 831.437 2447.07 832.453 2450.83 834.485 cv
2454.59 836.52 2457.56 839.319 2459.72 842.888 cv
2461.88 846.456 2462.96 850.469 2462.96 854.923 cv
2462.96 859.378 2461.88 863.39 2459.72 866.958 cv
2457.56 870.526 2454.59 873.327 2450.83 875.359 cv
2447.07 877.394 2442.83 878.409 2438.12 878.409 cv
2433.4 878.409 2429.15 877.394 2425.37 875.359 cv
cp
f
2497.16 842.823 mo
2495.51 841.46 2493.11 840.779 2489.95 840.779 cv
2481.39 840.779 li
2481.39 856.609 li
2489.95 856.609 li
2493.11 856.609 2495.51 855.918 2497.16 854.533 cv
2498.8 853.149 2499.62 851.203 2499.62 848.694 cv
2499.62 846.143 2498.8 844.186 2497.16 842.823 cv
cp
2499.82 877.631 mo
2491.06 864.979 li
2490.54 864.979 li
2481.39 864.979 li
2481.39 877.631 li
2470.88 877.631 li
2470.88 832.215 li
2490.54 832.215 li
2494.56 832.215 2498.05 832.886 2501.02 834.227 cv
2503.98 835.567 2506.26 837.47 2507.86 839.936 cv
2509.46 842.401 2510.26 845.32 2510.26 848.694 cv
2510.26 852.068 2509.45 854.978 2507.83 857.421 cv
2506.21 859.865 2503.9 861.735 2500.92 863.033 cv
2511.1 877.631 li
2499.82 877.631 li
cp
f
2553.73 869.196 mo
2553.73 877.631 li
2518.56 877.631 li
2518.56 832.215 li
2552.89 832.215 li
2552.89 840.649 li
2529.01 840.649 li
2529.01 850.511 li
2550.1 850.511 li
2550.1 858.686 li
2529.01 858.686 li
2529.01 869.196 li
2553.73 869.196 li
cp
f
2603.43 877.631 mo
2603.36 850.381 li
2590 872.829 li
2585.26 872.829 li
2571.96 850.965 li
2571.96 877.631 li
2562.1 877.631 li
2562.1 832.215 li
2570.79 832.215 li
2587.79 860.438 li
2604.53 832.215 li
2613.16 832.215 li
2613.29 877.631 li
2603.43 877.631 li
cp
f
2625.49 832.215 mo
2631.97 832.215 li
2631.97 877.631 li
2625.49 877.631 li
2625.49 832.215 li
cp
f
2672.52 855.604 mo
2674.68 853.853 2675.77 851.333 2675.77 848.046 cv
2675.77 844.759 2674.68 842.239 2672.52 840.487 cv
2670.36 838.735 2667.22 837.859 2663.12 837.859 cv
2652.09 837.859 li
2652.09 858.231 li
2663.12 858.231 li
2667.22 858.231 2670.36 857.355 2672.52 855.604 cv
cp
2677.19 836.433 mo
2680.57 839.244 2682.25 843.114 2682.25 848.046 cv
2682.25 852.977 2680.57 856.848 2677.19 859.659 cv
2673.82 862.471 2669.19 863.876 2663.31 863.876 cv
2652.09 863.876 li
2652.09 877.631 li
2645.6 877.631 li
2645.6 832.215 li
2663.31 832.215 li
2669.19 832.215 2673.82 833.621 2677.19 836.433 cv
cp
f
2695.78 876.561 mo
2692.6 875.501 2690.1 874.127 2688.29 872.44 cv
2690.69 867.38 li
2692.42 868.937 2694.63 870.202 2697.34 871.175 cv
2700.04 872.148 2702.82 872.635 2705.67 872.635 cv
2709.44 872.635 2712.25 871.997 2714.11 870.721 cv
2715.97 869.445 2716.9 867.748 2716.9 865.628 cv
2716.9 864.07 2716.39 862.806 2715.37 861.832 cv
2714.36 860.859 2713.1 860.113 2711.61 859.594 cv
2710.12 859.075 2708.01 858.491 2705.29 857.843 cv
2701.87 857.021 2699.11 856.199 2697.01 855.377 cv
2694.92 854.556 2693.12 853.291 2691.63 851.581 cv
2690.14 849.873 2689.39 847.57 2689.39 844.672 cv
2689.39 842.25 2690.03 840.065 2691.3 838.119 cv
2692.58 836.173 2694.52 834.615 2697.11 833.447 cv
2699.71 832.28 2702.93 831.696 2706.78 831.696 cv
2709.46 831.696 2712.1 832.043 2714.69 832.734 cv
2717.29 833.427 2719.52 834.421 2721.38 835.719 cv
2719.23 840.909 li
2717.33 839.698 2715.3 838.779 2713.14 838.151 cv
2710.97 837.525 2708.85 837.211 2706.78 837.211 cv
2703.1 837.211 2700.34 837.882 2698.51 839.222 cv
2696.67 840.563 2695.75 842.294 2695.75 844.412 cv
2695.75 845.97 2696.27 847.234 2697.3 848.208 cv
2698.34 849.181 2699.63 849.938 2701.17 850.479 cv
2702.7 851.02 2704.79 851.593 2707.43 852.198 cv
2710.84 853.02 2713.59 853.842 2715.67 854.663 cv
2717.74 855.485 2719.53 856.739 2721.02 858.427 cv
2722.51 860.113 2723.26 862.384 2723.26 865.238 cv
2723.26 867.618 2722.61 869.791 2721.31 871.759 cv
2720.01 873.728 2718.04 875.285 2715.41 876.431 cv
2712.77 877.577 2709.52 878.149 2705.67 878.149 cv
2702.26 878.149 2698.96 877.62 2695.78 876.561 cv
cp
f
2737.4 872.959 mo
2734.03 869.499 2732.34 864.525 2732.34 858.037 cv
2732.34 832.215 li
2738.83 832.215 li
2738.83 857.777 li
2738.83 867.51 2743.09 872.375 2751.61 872.375 cv
2755.76 872.375 2758.94 871.175 2761.15 868.774 cv
2763.35 866.374 2764.46 862.708 2764.46 857.777 cv
2764.46 832.215 li
2770.75 832.215 li
2770.75 858.037 li
2770.75 864.568 2769.06 869.553 2765.69 872.992 cv
2762.31 876.431 2757.6 878.149 2751.54 878.149 cv
2745.49 878.149 2740.77 876.42 2737.4 872.959 cv
cp
f
2826.15 877.631 mo
2826.09 844.542 li
2809.68 872.116 li
2806.69 872.116 li
2790.28 844.736 li
2790.28 877.631 li
2784.05 877.631 li
2784.05 832.215 li
2789.37 832.215 li
2808.31 864.136 li
2827 832.215 li
2832.32 832.215 li
2832.38 877.631 li
2826.15 877.631 li
cp
f
1925.08 252.821 mo
1925.08 274.123 li
1887.28 241.556 li
1857.66 216.173 li
1852.1 211.404 li
1863.82 200.08 li
1882.52 216.173 li
1925.08 252.821 li
cp
f
1827.39 212.881 mo
1857.2 184.119 li
1928.6 184.119 li
1945.13 200.08 li
1863.82 200.08 li
1857.66 216.173 li
1984.99 216.173 li
1935.1 168.026 li
1850.69 168.026 li
1803.49 213.584 li
1887.28 285.388 li
1857.66 310.771 li
1852.1 315.54 li
1863.82 326.864 li
1882.52 310.771 li
1912 285.388 li
1827.39 212.881 li
cp
f
1984.99 310.771 mo
1935.1 358.918 li
1850.69 358.918 li
1803.49 313.36 li
1848.43 274.825 li
1860.81 285.432 li
1827.39 314.063 li
1857.2 342.825 li
1928.6 342.825 li
1945.13 326.864 li
1863.82 326.864 li
1857.66 310.771 li
1984.99 310.771 li
cp
f
1666.19 409.874 mo
1676.7 409.874 li
1676.7 446.726 li
1699.47 446.726 li
1699.47 455.29 li
1666.19 455.29 li
1666.19 409.874 li
cp
f
1733.86 445.266 mo
1736.02 444.033 1737.72 442.313 1738.95 440.108 cv
1740.19 437.902 1740.8 435.394 1740.8 432.582 cv
1740.8 429.771 1740.19 427.262 1738.95 425.056 cv
1737.72 422.85 1736.02 421.13 1733.86 419.898 cv
1731.7 418.665 1729.27 418.049 1726.59 418.049 cv
1723.91 418.049 1721.49 418.665 1719.33 419.898 cv
1717.16 421.13 1715.47 422.85 1714.23 425.056 cv
1713 427.262 1712.38 429.771 1712.38 432.582 cv
1712.38 435.394 1713 437.902 1714.23 440.108 cv
1715.47 442.313 1717.16 444.033 1719.33 445.266 cv
1721.49 446.499 1723.91 447.115 1726.59 447.115 cv
1729.27 447.115 1731.7 446.499 1733.86 445.266 cv
cp
1713.84 453.019 mo
1710.06 450.986 1707.1 448.185 1704.96 444.617 cv
1702.81 441.048 1701.74 437.037 1701.74 432.582 cv
1701.74 428.127 1702.81 424.115 1704.96 420.546 cv
1707.1 416.978 1710.06 414.178 1713.84 412.145 cv
1717.63 410.112 1721.88 409.095 1726.59 409.095 cv
1731.31 409.095 1735.55 410.112 1739.31 412.145 cv
1743.07 414.178 1746.04 416.978 1748.2 420.546 cv
1750.36 424.115 1751.44 428.127 1751.44 432.582 cv
1751.44 437.037 1750.36 441.048 1748.2 444.617 cv
1746.04 448.185 1743.07 450.986 1739.31 453.019 cv
1735.55 455.052 1731.31 456.068 1726.59 456.068 cv
1721.88 456.068 1717.63 455.052 1713.84 453.019 cv
cp
f
1785.63 420.482 mo
1783.99 419.119 1781.59 418.438 1778.43 418.438 cv
1769.87 418.438 li
1769.87 434.269 li
1778.43 434.269 li
1781.59 434.269 1783.99 433.577 1785.63 432.192 cv
1787.28 430.809 1788.1 428.862 1788.1 426.354 cv
1788.1 423.802 1787.28 421.844 1785.63 420.482 cv
cp
1788.29 455.29 mo
1779.53 442.638 li
1779.02 442.638 li
1769.87 442.638 li
1769.87 455.29 li
1759.36 455.29 li
1759.36 409.874 li
1779.02 409.874 li
1783.04 409.874 1786.53 410.545 1789.49 411.885 cv
1792.46 413.227 1794.74 415.129 1796.34 417.595 cv
1797.94 420.06 1798.74 422.979 1798.74 426.354 cv
1798.74 429.727 1797.93 432.636 1796.31 435.08 cv
1794.68 437.524 1792.38 439.394 1789.4 440.692 cv
1799.58 455.29 li
1788.29 455.29 li
cp
f
1842.21 446.855 mo
1842.21 455.29 li
1807.04 455.29 li
1807.04 409.874 li
1841.36 409.874 li
1841.36 418.308 li
1817.49 418.308 li
1817.49 428.17 li
1838.57 428.17 li
1838.57 436.345 li
1817.49 436.345 li
1817.49 446.855 li
1842.21 446.855 li
cp
f
1891.9 455.29 mo
1891.84 428.04 li
1878.47 450.488 li
1873.74 450.488 li
1860.44 428.624 li
1860.44 455.29 li
1850.58 455.29 li
1850.58 409.874 li
1859.27 409.874 li
1876.27 438.097 li
1893.01 409.874 li
1901.64 409.874 li
1901.77 455.29 li
1891.9 455.29 li
cp
f
1913.96 409.874 mo
1920.45 409.874 li
1920.45 455.29 li
1913.96 455.29 li
1913.96 409.874 li
cp
f
1961 433.263 mo
1963.16 431.511 1964.24 428.992 1964.24 425.705 cv
1964.24 422.418 1963.16 419.898 1961 418.146 cv
1958.84 416.394 1955.7 415.519 1951.59 415.519 cv
1940.56 415.519 li
1940.56 435.891 li
1951.59 435.891 li
1955.7 435.891 1958.84 435.015 1961 433.263 cv
cp
1965.67 414.091 mo
1969.04 416.903 1970.73 420.773 1970.73 425.705 cv
1970.73 430.635 1969.04 434.507 1965.67 437.318 cv
1962.3 440.13 1957.67 441.535 1951.79 441.535 cv
1940.56 441.535 li
1940.56 455.29 li
1934.08 455.29 li
1934.08 409.874 li
1951.79 409.874 li
1957.67 409.874 1962.3 411.28 1965.67 414.091 cv
cp
f
1984.26 454.219 mo
1981.08 453.16 1978.58 451.786 1976.76 450.099 cv
1979.17 445.039 li
1980.89 446.596 1983.11 447.861 1985.82 448.834 cv
1988.52 449.807 1991.3 450.294 1994.15 450.294 cv
1997.92 450.294 2000.73 449.656 2002.59 448.38 cv
2004.45 447.104 2005.38 445.407 2005.38 443.287 cv
2005.38 441.729 2004.87 440.464 2003.85 439.491 cv
2002.83 438.518 2001.58 437.772 2000.09 437.253 cv
1998.6 436.734 1996.49 436.15 1993.76 435.501 cv
1990.35 434.68 1987.59 433.858 1985.49 433.036 cv
1983.39 432.215 1981.6 430.95 1980.11 429.24 cv
1978.61 427.532 1977.87 425.229 1977.87 422.331 cv
1977.87 419.909 1978.51 417.724 1979.78 415.778 cv
1981.06 413.832 1982.99 412.274 1985.59 411.106 cv
1988.18 409.939 1991.4 409.355 1995.26 409.355 cv
1997.94 409.355 2000.58 409.702 2003.17 410.393 cv
2005.77 411.085 2007.99 412.08 2009.85 413.377 cv
2007.71 418.568 li
2005.81 417.357 2003.78 416.438 2001.61 415.811 cv
1999.45 415.184 1997.33 414.87 1995.26 414.87 cv
1991.58 414.87 1988.82 415.541 1986.98 416.881 cv
1985.14 418.222 1984.23 419.953 1984.23 422.071 cv
1984.23 423.628 1984.74 424.894 1985.78 425.867 cv
1986.82 426.84 1988.11 427.597 1989.64 428.138 cv
1991.18 428.679 1993.27 429.251 1995.9 429.857 cv
1999.32 430.679 2002.07 431.501 2004.14 432.322 cv
2006.22 433.145 2008 434.398 2009.5 436.085 cv
2010.99 437.772 2011.73 440.043 2011.73 442.897 cv
2011.73 445.277 2011.09 447.45 2009.79 449.418 cv
2008.49 451.387 2006.52 452.944 2003.88 454.089 cv
2001.25 455.236 1998 455.809 1994.15 455.809 cv
1990.73 455.809 1987.44 455.279 1984.26 454.219 cv
cp
f
2025.88 450.618 mo
2022.5 447.158 2020.82 442.184 2020.82 435.696 cv
2020.82 409.874 li
2027.3 409.874 li
2027.3 435.437 li
2027.3 445.168 2031.56 450.034 2040.09 450.034 cv
2044.24 450.034 2047.42 448.834 2049.62 446.434 cv
2051.83 444.033 2052.93 440.367 2052.93 435.437 cv
2052.93 409.874 li
2059.23 409.874 li
2059.23 435.696 li
2059.23 442.228 2057.54 447.212 2054.17 450.651 cv
2050.79 454.089 2046.08 455.809 2040.02 455.809 cv
2033.96 455.809 2029.25 454.079 2025.88 450.618 cv
cp
f
2114.63 455.29 mo
2114.57 422.201 li
2098.15 449.775 li
2095.17 449.775 li
2078.75 422.396 li
2078.75 455.29 li
2072.53 455.29 li
2072.53 409.874 li
2077.85 409.874 li
2096.79 441.794 li
2115.48 409.874 li
2120.79 409.874 li
2120.86 455.29 li
2114.63 455.29 li
cp
f
2570.71 187.337 mo
2642.6 187.337 li
2664.79 207.103 li
2593.05 207.103 li
2570.71 187.337 li
cp
2625.95 296.887 mo
2629.39 293.858 li
2627.62 292.293 li
2605.45 272.689 li
2595.54 281.481 li
2609.52 293.844 li
2588.06 312.819 li
2546.16 312.819 li
2571.13 290.742 li
2588.57 275.322 li
2598.49 266.544 li
2598.5 266.544 li
2610.76 255.704 li
2627.62 240.795 li
2629.39 239.23 li
2625.95 236.202 li
2618.33 229.458 li
2598.45 229.458 li
2609.52 239.245 li
2588.57 257.767 li
2546.16 220.27 li
2588.06 220.27 li
2607.94 220.27 li
2700.14 220.27 li
2648.2 174.17 li
2555.81 174.17 li
2535.93 174.17 li
2550.83 187.337 li
2573.18 207.103 li
2511.38 207.103 li
2578.62 266.544 li
2511.38 325.986 li
2573.18 325.986 li
2593.05 325.986 li
2664.79 325.986 li
2642.6 345.751 li
2570.71 345.751 li
2582.65 335.188 li
2562.76 335.188 li
2550.83 345.751 li
2535.93 358.918 li
2555.81 358.918 li
2648.2 358.918 li
2700.14 312.819 li
2607.94 312.819 li
2625.95 296.887 li
cp
f
2377.71 409.874 mo
2388.22 409.874 li
2388.22 446.726 li
2411 446.726 li
2411 455.29 li
2377.71 455.29 li
2377.71 409.874 li
cp
f
2445.38 445.266 mo
2447.54 444.033 2449.24 442.313 2450.47 440.108 cv
2451.71 437.902 2452.32 435.394 2452.32 432.582 cv
2452.32 429.771 2451.71 427.262 2450.47 425.056 cv
2449.24 422.85 2447.54 421.13 2445.38 419.898 cv
2443.22 418.665 2440.8 418.049 2438.12 418.049 cv
2435.43 418.049 2433.01 418.665 2430.85 419.898 cv
2428.69 421.13 2426.99 422.85 2425.76 425.056 cv
2424.52 427.262 2423.91 429.771 2423.91 432.582 cv
2423.91 435.394 2424.52 437.902 2425.76 440.108 cv
2426.99 442.313 2428.69 444.033 2430.85 445.266 cv
2433.01 446.499 2435.43 447.115 2438.12 447.115 cv
2440.8 447.115 2443.22 446.499 2445.38 445.266 cv
cp
2425.37 453.019 mo
2421.58 450.986 2418.62 448.185 2416.48 444.617 cv
2414.34 441.048 2413.27 437.037 2413.27 432.582 cv
2413.27 428.127 2414.34 424.115 2416.48 420.546 cv
2418.62 416.978 2421.58 414.178 2425.37 412.145 cv
2429.15 410.112 2433.4 409.095 2438.12 409.095 cv
2442.83 409.095 2447.07 410.112 2450.83 412.145 cv
2454.59 414.178 2457.56 416.978 2459.72 420.546 cv
2461.88 424.115 2462.96 428.127 2462.96 432.582 cv
2462.96 437.037 2461.88 441.048 2459.72 444.617 cv
2457.56 448.185 2454.59 450.986 2450.83 453.019 cv
2447.07 455.052 2442.83 456.068 2438.12 456.068 cv
2433.4 456.068 2429.15 455.052 2425.37 453.019 cv
cp
f
2497.16 420.482 mo
2495.51 419.119 2493.11 418.438 2489.95 418.438 cv
2481.39 418.438 li
2481.39 434.269 li
2489.95 434.269 li
2493.11 434.269 2495.51 433.577 2497.16 432.192 cv
2498.8 430.809 2499.62 428.862 2499.62 426.354 cv
2499.62 423.802 2498.8 421.844 2497.16 420.482 cv
cp
2499.82 455.29 mo
2491.06 442.638 li
2490.54 442.638 li
2481.39 442.638 li
2481.39 455.29 li
2470.88 455.29 li
2470.88 409.874 li
2490.54 409.874 li
2494.56 409.874 2498.05 410.545 2501.02 411.885 cv
2503.98 413.227 2506.26 415.129 2507.86 417.595 cv
2509.46 420.06 2510.26 422.979 2510.26 426.354 cv
2510.26 429.727 2509.45 432.636 2507.83 435.08 cv
2506.21 437.524 2503.9 439.394 2500.92 440.692 cv
2511.1 455.29 li
2499.82 455.29 li
cp
f
2553.73 446.855 mo
2553.73 455.29 li
2518.56 455.29 li
2518.56 409.874 li
2552.89 409.874 li
2552.89 418.308 li
2529.01 418.308 li
2529.01 428.17 li
2550.1 428.17 li
2550.1 436.345 li
2529.01 436.345 li
2529.01 446.855 li
2553.73 446.855 li
cp
f
2603.43 455.29 mo
2603.36 428.04 li
2590 450.488 li
2585.26 450.488 li
2571.96 428.624 li
2571.96 455.29 li
2562.1 455.29 li
2562.1 409.874 li
2570.79 409.874 li
2587.79 438.097 li
2604.53 409.874 li
2613.16 409.874 li
2613.29 455.29 li
2603.43 455.29 li
cp
f
2625.49 409.874 mo
2631.97 409.874 li
2631.97 455.29 li
2625.49 455.29 li
2625.49 409.874 li
cp
f
2672.52 433.263 mo
2674.68 431.511 2675.77 428.992 2675.77 425.705 cv
2675.77 422.418 2674.68 419.898 2672.52 418.146 cv
2670.36 416.394 2667.22 415.519 2663.12 415.519 cv
2652.09 415.519 li
2652.09 435.891 li
2663.12 435.891 li
2667.22 435.891 2670.36 435.015 2672.52 433.263 cv
cp
2677.19 414.091 mo
2680.57 416.903 2682.25 420.773 2682.25 425.705 cv
2682.25 430.635 2680.57 434.507 2677.19 437.318 cv
2673.82 440.13 2669.19 441.535 2663.31 441.535 cv
2652.09 441.535 li
2652.09 455.29 li
2645.6 455.29 li
2645.6 409.874 li
2663.31 409.874 li
2669.19 409.874 2673.82 411.28 2677.19 414.091 cv
cp
f
2695.78 454.219 mo
2692.6 453.16 2690.1 451.786 2688.29 450.099 cv
2690.69 445.039 li
2692.42 446.596 2694.63 447.861 2697.34 448.834 cv
2700.04 449.807 2702.82 450.294 2705.67 450.294 cv
2709.44 450.294 2712.25 449.656 2714.11 448.38 cv
2715.97 447.104 2716.9 445.407 2716.9 443.287 cv
2716.9 441.729 2716.39 440.464 2715.37 439.491 cv
2714.36 438.518 2713.1 437.772 2711.61 437.253 cv
2710.12 436.734 2708.01 436.15 2705.29 435.501 cv
2701.87 434.68 2699.11 433.858 2697.01 433.036 cv
2694.92 432.215 2693.12 430.95 2691.63 429.24 cv
2690.14 427.532 2689.39 425.229 2689.39 422.331 cv
2689.39 419.909 2690.03 417.724 2691.3 415.778 cv
2692.58 413.832 2694.52 412.274 2697.11 411.106 cv
2699.71 409.939 2702.93 409.355 2706.78 409.355 cv
2709.46 409.355 2712.1 409.702 2714.69 410.393 cv
2717.29 411.085 2719.52 412.08 2721.38 413.377 cv
2719.23 418.568 li
2717.33 417.357 2715.3 416.438 2713.14 415.811 cv
2710.97 415.184 2708.85 414.87 2706.78 414.87 cv
2703.1 414.87 2700.34 415.541 2698.51 416.881 cv
2696.67 418.222 2695.75 419.953 2695.75 422.071 cv
2695.75 423.628 2696.27 424.894 2697.3 425.867 cv
2698.34 426.84 2699.63 427.597 2701.17 428.138 cv
2702.7 428.679 2704.79 429.251 2707.43 429.857 cv
2710.84 430.679 2713.59 431.501 2715.67 432.322 cv
2717.74 433.145 2719.53 434.398 2721.02 436.085 cv
2722.51 437.772 2723.26 440.043 2723.26 442.897 cv
2723.26 445.277 2722.61 447.45 2721.31 449.418 cv
2720.01 451.387 2718.04 452.944 2715.41 454.089 cv
2712.77 455.236 2709.52 455.809 2705.67 455.809 cv
2702.26 455.809 2698.96 455.279 2695.78 454.219 cv
cp
f
2737.4 450.618 mo
2734.03 447.158 2732.34 442.184 2732.34 435.696 cv
2732.34 409.874 li
2738.83 409.874 li
2738.83 435.437 li
2738.83 445.168 2743.09 450.034 2751.61 450.034 cv
2755.76 450.034 2758.94 448.834 2761.15 446.434 cv
2763.35 444.033 2764.46 440.367 2764.46 435.437 cv
2764.46 409.874 li
2770.75 409.874 li
2770.75 435.696 li
2770.75 442.228 2769.06 447.212 2765.69 450.651 cv
2762.31 454.089 2757.6 455.809 2751.54 455.809 cv
2745.49 455.809 2740.77 454.079 2737.4 450.618 cv
cp
f
2826.15 455.29 mo
2826.09 422.201 li
2809.68 449.775 li
2806.69 449.775 li
2790.28 422.396 li
2790.28 455.29 li
2784.05 455.29 li
2784.05 409.874 li
2789.37 409.874 li
2808.31 441.794 li
2827 409.874 li
2832.32 409.874 li
2832.38 455.29 li
2826.15 455.29 li
cp
f
1857.77 1061.69 mo
1955.29 1061.69 li
1932.94 1081.46 li
1880.11 1081.46 li
1857.77 1061.69 li
cp
1913.01 1171.24 mo
1916.45 1168.21 li
1914.68 1166.65 li
1892.51 1147.04 li
1882.59 1155.84 li
1896.58 1168.2 li
1875.12 1187.17 li
1833.22 1187.17 li
1858.19 1165.1 li
1875.63 1149.68 li
1885.55 1140.9 li
1885.56 1140.9 li
1897.82 1130.06 li
1914.68 1115.15 li
1916.45 1113.58 li
1913.01 1110.56 li
1905.39 1103.81 li
1885.5 1103.81 li
1896.58 1113.6 li
1875.63 1132.12 li
1833.22 1094.63 li
1875.12 1094.63 li
1895 1094.63 li
1937.89 1094.63 li
1990.04 1048.53 li
1842.87 1048.53 li
1822.99 1048.53 li
1837.88 1061.69 li
1860.24 1081.46 li
1798.44 1081.46 li
1865.68 1140.9 li
1798.44 1200.34 li
1860.24 1200.34 li
1880.11 1200.34 li
1932.95 1200.34 li
1955.32 1220.11 li
1857.77 1220.11 li
1869.7 1209.54 li
1849.82 1209.54 li
1837.88 1220.11 li
1822.99 1233.27 li
1842.87 1233.27 li
1990.04 1233.27 li
1937.9 1187.17 li
1895 1187.17 li
1913.01 1171.24 li
cp
f
1666.19 1269.3 mo
1676.7 1269.3 li
1676.7 1306.15 li
1699.47 1306.15 li
1699.47 1314.71 li
1666.19 1314.71 li
1666.19 1269.3 li
cp
f
1733.86 1304.69 mo
1736.02 1303.46 1737.72 1301.74 1738.95 1299.53 cv
1740.19 1297.33 1740.8 1294.82 1740.8 1292.01 cv
1740.8 1289.2 1740.19 1286.69 1738.95 1284.48 cv
1737.72 1282.28 1736.02 1280.56 1733.86 1279.32 cv
1731.7 1278.09 1729.27 1277.47 1726.59 1277.47 cv
1723.91 1277.47 1721.49 1278.09 1719.33 1279.32 cv
1717.16 1280.56 1715.47 1282.28 1714.23 1284.48 cv
1713 1286.69 1712.38 1289.2 1712.38 1292.01 cv
1712.38 1294.82 1713 1297.33 1714.23 1299.53 cv
1715.47 1301.74 1717.16 1303.46 1719.33 1304.69 cv
1721.49 1305.92 1723.91 1306.54 1726.59 1306.54 cv
1729.27 1306.54 1731.7 1305.92 1733.86 1304.69 cv
cp
1713.84 1312.44 mo
1710.06 1310.41 1707.1 1307.61 1704.96 1304.04 cv
1702.81 1300.47 1701.74 1296.46 1701.74 1292.01 cv
1701.74 1287.55 1702.81 1283.54 1704.96 1279.97 cv
1707.1 1276.4 1710.06 1273.6 1713.84 1271.57 cv
1717.63 1269.54 1721.88 1268.52 1726.59 1268.52 cv
1731.31 1268.52 1735.55 1269.54 1739.31 1271.57 cv
1743.07 1273.6 1746.04 1276.4 1748.2 1279.97 cv
1750.36 1283.54 1751.44 1287.55 1751.44 1292.01 cv
1751.44 1296.46 1750.36 1300.47 1748.2 1304.04 cv
1746.04 1307.61 1743.07 1310.41 1739.31 1312.44 cv
1735.55 1314.48 1731.31 1315.49 1726.59 1315.49 cv
1721.88 1315.49 1717.63 1314.48 1713.84 1312.44 cv
cp
f
1785.63 1279.91 mo
1783.99 1278.54 1781.59 1277.86 1778.43 1277.86 cv
1769.87 1277.86 li
1769.87 1293.69 li
1778.43 1293.69 li
1781.59 1293.69 1783.99 1293 1785.63 1291.62 cv
1787.28 1290.23 1788.1 1288.29 1788.1 1285.78 cv
1788.1 1283.23 1787.28 1281.27 1785.63 1279.91 cv
cp
1788.29 1314.71 mo
1779.53 1302.06 li
1779.02 1302.06 li
1769.87 1302.06 li
1769.87 1314.71 li
1759.36 1314.71 li
1759.36 1269.3 li
1779.02 1269.3 li
1783.04 1269.3 1786.53 1269.97 1789.49 1271.31 cv
1792.46 1272.65 1794.74 1274.55 1796.34 1277.02 cv
1797.94 1279.49 1798.74 1282.41 1798.74 1285.78 cv
1798.74 1289.15 1797.93 1292.06 1796.31 1294.5 cv
1794.68 1296.95 1792.38 1298.82 1789.4 1300.12 cv
1799.58 1314.71 li
1788.29 1314.71 li
cp
f
1842.21 1306.28 mo
1842.21 1314.71 li
1807.04 1314.71 li
1807.04 1269.3 li
1841.36 1269.3 li
1841.36 1277.73 li
1817.49 1277.73 li
1817.49 1287.6 li
1838.57 1287.6 li
1838.57 1295.77 li
1817.49 1295.77 li
1817.49 1306.28 li
1842.21 1306.28 li
cp
f
1891.9 1314.71 mo
1891.84 1287.47 li
1878.47 1309.91 li
1873.74 1309.91 li
1860.44 1288.05 li
1860.44 1314.71 li
1850.58 1314.71 li
1850.58 1269.3 li
1859.27 1269.3 li
1876.27 1297.52 li
1893.01 1269.3 li
1901.64 1269.3 li
1901.77 1314.71 li
1891.9 1314.71 li
cp
f
1913.96 1269.3 mo
1920.45 1269.3 li
1920.45 1314.71 li
1913.96 1314.71 li
1913.96 1269.3 li
cp
f
1961 1292.69 mo
1963.16 1290.94 1964.24 1288.42 1964.24 1285.13 cv
1964.24 1281.84 1963.16 1279.32 1961 1277.57 cv
1958.84 1275.82 1955.7 1274.94 1951.59 1274.94 cv
1940.56 1274.94 li
1940.56 1295.32 li
1951.59 1295.32 li
1955.7 1295.32 1958.84 1294.44 1961 1292.69 cv
cp
1965.67 1273.52 mo
1969.04 1276.33 1970.73 1280.2 1970.73 1285.13 cv
1970.73 1290.06 1969.04 1293.93 1965.67 1296.74 cv
1962.3 1299.56 1957.67 1300.96 1951.79 1300.96 cv
1940.56 1300.96 li
1940.56 1314.71 li
1934.08 1314.71 li
1934.08 1269.3 li
1951.79 1269.3 li
1957.67 1269.3 1962.3 1270.71 1965.67 1273.52 cv
cp
f
1984.26 1313.64 mo
1981.08 1312.58 1978.58 1311.21 1976.76 1309.52 cv
1979.17 1304.46 li
1980.89 1306.02 1983.11 1307.29 1985.82 1308.26 cv
1988.52 1309.23 1991.3 1309.72 1994.15 1309.72 cv
1997.92 1309.72 2000.73 1309.08 2002.59 1307.81 cv
2004.45 1306.53 2005.38 1304.83 2005.38 1302.71 cv
2005.38 1301.16 2004.87 1299.89 2003.85 1298.92 cv
2002.83 1297.94 2001.58 1297.2 2000.09 1296.68 cv
1998.6 1296.16 1996.49 1295.58 1993.76 1294.93 cv
1990.35 1294.11 1987.59 1293.28 1985.49 1292.46 cv
1983.39 1291.64 1981.6 1290.38 1980.11 1288.67 cv
1978.61 1286.96 1977.87 1284.65 1977.87 1281.76 cv
1977.87 1279.33 1978.51 1277.15 1979.78 1275.2 cv
1981.06 1273.26 1982.99 1271.7 1985.59 1270.53 cv
1988.18 1269.36 1991.4 1268.78 1995.26 1268.78 cv
1997.94 1268.78 2000.58 1269.13 2003.17 1269.82 cv
2005.77 1270.51 2007.99 1271.5 2009.85 1272.8 cv
2007.71 1277.99 li
2005.81 1276.78 2003.78 1275.86 2001.61 1275.24 cv
1999.45 1274.61 1997.33 1274.29 1995.26 1274.29 cv
1991.58 1274.29 1988.82 1274.97 1986.98 1276.31 cv
1985.14 1277.65 1984.23 1279.38 1984.23 1281.5 cv
1984.23 1283.05 1984.74 1284.32 1985.78 1285.29 cv
1986.82 1286.27 1988.11 1287.02 1989.64 1287.56 cv
1991.18 1288.1 1993.27 1288.68 1995.9 1289.28 cv
1999.32 1290.1 2002.07 1290.93 2004.14 1291.75 cv
2006.22 1292.57 2008 1293.82 2009.5 1295.51 cv
2010.99 1297.2 2011.73 1299.47 2011.73 1302.32 cv
2011.73 1304.7 2011.09 1306.88 2009.79 1308.84 cv
2008.49 1310.81 2006.52 1312.37 2003.88 1313.51 cv
2001.25 1314.66 1998 1315.23 1994.15 1315.23 cv
1990.73 1315.23 1987.44 1314.71 1984.26 1313.64 cv
cp
f
2025.88 1310.04 mo
2022.5 1306.58 2020.82 1301.61 2020.82 1295.12 cv
2020.82 1269.3 li
2027.3 1269.3 li
2027.3 1294.86 li
2027.3 1304.59 2031.56 1309.46 2040.09 1309.46 cv
2044.24 1309.46 2047.42 1308.26 2049.62 1305.86 cv
2051.83 1303.46 2052.93 1299.79 2052.93 1294.86 cv
2052.93 1269.3 li
2059.23 1269.3 li
2059.23 1295.12 li
2059.23 1301.65 2057.54 1306.64 2054.17 1310.08 cv
2050.79 1313.51 2046.08 1315.23 2040.02 1315.23 cv
2033.96 1315.23 2029.25 1313.5 2025.88 1310.04 cv
cp
f
2114.63 1314.71 mo
2114.57 1281.63 li
2098.15 1309.2 li
2095.17 1309.2 li
2078.75 1281.82 li
2078.75 1314.71 li
2072.53 1314.71 li
2072.53 1269.3 li
2077.85 1269.3 li
2096.79 1301.22 li
2115.48 1269.3 li
2120.79 1269.3 li
2120.86 1314.71 li
2114.63 1314.71 li
cp
f
2573.92 1085.06 mo
2638.94 1085.06 li
2646.91 1076.57 li
2664.45 1058.48 li
2554.27 1058.48 li
2573.92 1085.06 li
cp
2542.08 1180.36 mo
2567.28 1180.36 li
2597.64 1139.29 li
2567.28 1098.22 li
2542.08 1098.22 li
2572.45 1139.29 li
2542.08 1180.36 li
cp
2554.27 1220.11 mo
2664.45 1220.11 li
2646.99 1202.09 li
2638.94 1193.53 li
2573.92 1193.53 li
2554.27 1220.11 li
cp
2695.55 1233.27 mo
2528.16 1233.27 li
2557.55 1193.53 li
2515.97 1193.53 li
2556.07 1139.29 li
2515.97 1085.06 li
2557.55 1085.06 li
2528.16 1045.31 li
2695.55 1045.31 li
2656.44 1085.65 li
2644.64 1098.22 li
2583.66 1098.22 li
2614.02 1139.29 li
2583.66 1180.36 li
2644.64 1180.36 li
2656.51 1193 li
2695.55 1233.27 li
cp
f
2377.71 1269.3 mo
2388.22 1269.3 li
2388.22 1306.15 li
2411 1306.15 li
2411 1314.71 li
2377.71 1314.71 li
2377.71 1269.3 li
cp
f
2445.38 1304.69 mo
2447.54 1303.46 2449.24 1301.74 2450.47 1299.53 cv
2451.71 1297.33 2452.32 1294.82 2452.32 1292.01 cv
2452.32 1289.2 2451.71 1286.69 2450.47 1284.48 cv
2449.24 1282.28 2447.54 1280.56 2445.38 1279.32 cv
2443.22 1278.09 2440.8 1277.47 2438.12 1277.47 cv
2435.43 1277.47 2433.01 1278.09 2430.85 1279.32 cv
2428.69 1280.56 2426.99 1282.28 2425.76 1284.48 cv
2424.52 1286.69 2423.91 1289.2 2423.91 1292.01 cv
2423.91 1294.82 2424.52 1297.33 2425.76 1299.53 cv
2426.99 1301.74 2428.69 1303.46 2430.85 1304.69 cv
2433.01 1305.92 2435.43 1306.54 2438.12 1306.54 cv
2440.8 1306.54 2443.22 1305.92 2445.38 1304.69 cv
cp
2425.37 1312.44 mo
2421.58 1310.41 2418.62 1307.61 2416.48 1304.04 cv
2414.34 1300.47 2413.27 1296.46 2413.27 1292.01 cv
2413.27 1287.55 2414.34 1283.54 2416.48 1279.97 cv
2418.62 1276.4 2421.58 1273.6 2425.37 1271.57 cv
2429.15 1269.54 2433.4 1268.52 2438.12 1268.52 cv
2442.83 1268.52 2447.07 1269.54 2450.83 1271.57 cv
2454.59 1273.6 2457.56 1276.4 2459.72 1279.97 cv
2461.88 1283.54 2462.96 1287.55 2462.96 1292.01 cv
2462.96 1296.46 2461.88 1300.47 2459.72 1304.04 cv
2457.56 1307.61 2454.59 1310.41 2450.83 1312.44 cv
2447.07 1314.48 2442.83 1315.49 2438.12 1315.49 cv
2433.4 1315.49 2429.15 1314.48 2425.37 1312.44 cv
cp
f
2497.16 1279.91 mo
2495.51 1278.54 2493.11 1277.86 2489.95 1277.86 cv
2481.39 1277.86 li
2481.39 1293.69 li
2489.95 1293.69 li
2493.11 1293.69 2495.51 1293 2497.16 1291.62 cv
2498.8 1290.23 2499.62 1288.29 2499.62 1285.78 cv
2499.62 1283.23 2498.8 1281.27 2497.16 1279.91 cv
cp
2499.82 1314.71 mo
2491.06 1302.06 li
2490.54 1302.06 li
2481.39 1302.06 li
2481.39 1314.71 li
2470.88 1314.71 li
2470.88 1269.3 li
2490.54 1269.3 li
2494.56 1269.3 2498.05 1269.97 2501.02 1271.31 cv
2503.98 1272.65 2506.26 1274.55 2507.86 1277.02 cv
2509.46 1279.49 2510.26 1282.41 2510.26 1285.78 cv
2510.26 1289.15 2509.45 1292.06 2507.83 1294.5 cv
2506.21 1296.95 2503.9 1298.82 2500.92 1300.12 cv
2511.1 1314.71 li
2499.82 1314.71 li
cp
f
2553.73 1306.28 mo
2553.73 1314.71 li
2518.56 1314.71 li
2518.56 1269.3 li
2552.89 1269.3 li
2552.89 1277.73 li
2529.01 1277.73 li
2529.01 1287.6 li
2550.1 1287.6 li
2550.1 1295.77 li
2529.01 1295.77 li
2529.01 1306.28 li
2553.73 1306.28 li
cp
f
2603.43 1314.71 mo
2603.36 1287.47 li
2590 1309.91 li
2585.26 1309.91 li
2571.96 1288.05 li
2571.96 1314.71 li
2562.1 1314.71 li
2562.1 1269.3 li
2570.79 1269.3 li
2587.79 1297.52 li
2604.53 1269.3 li
2613.16 1269.3 li
2613.29 1314.71 li
2603.43 1314.71 li
cp
f
2625.49 1269.3 mo
2631.97 1269.3 li
2631.97 1314.71 li
2625.49 1314.71 li
2625.49 1269.3 li
cp
f
2672.52 1292.69 mo
2674.68 1290.94 2675.77 1288.42 2675.77 1285.13 cv
2675.77 1281.84 2674.68 1279.32 2672.52 1277.57 cv
2670.36 1275.82 2667.22 1274.94 2663.12 1274.94 cv
2652.09 1274.94 li
2652.09 1295.32 li
2663.12 1295.32 li
2667.22 1295.32 2670.36 1294.44 2672.52 1292.69 cv
cp
2677.19 1273.52 mo
2680.57 1276.33 2682.25 1280.2 2682.25 1285.13 cv
2682.25 1290.06 2680.57 1293.93 2677.19 1296.74 cv
2673.82 1299.56 2669.19 1300.96 2663.31 1300.96 cv
2652.09 1300.96 li
2652.09 1314.71 li
2645.6 1314.71 li
2645.6 1269.3 li
2663.31 1269.3 li
2669.19 1269.3 2673.82 1270.71 2677.19 1273.52 cv
cp
f
2695.78 1313.64 mo
2692.6 1312.58 2690.1 1311.21 2688.29 1309.52 cv
2690.69 1304.46 li
2692.42 1306.02 2694.63 1307.29 2697.34 1308.26 cv
2700.04 1309.23 2702.82 1309.72 2705.67 1309.72 cv
2709.44 1309.72 2712.25 1309.08 2714.11 1307.81 cv
2715.97 1306.53 2716.9 1304.83 2716.9 1302.71 cv
2716.9 1301.16 2716.39 1299.89 2715.37 1298.92 cv
2714.36 1297.94 2713.1 1297.2 2711.61 1296.68 cv
2710.12 1296.16 2708.01 1295.58 2705.29 1294.93 cv
2701.87 1294.11 2699.11 1293.28 2697.01 1292.46 cv
2694.92 1291.64 2693.12 1290.38 2691.63 1288.67 cv
2690.14 1286.96 2689.39 1284.65 2689.39 1281.76 cv
2689.39 1279.33 2690.03 1277.15 2691.3 1275.2 cv
2692.58 1273.26 2694.52 1271.7 2697.11 1270.53 cv
2699.71 1269.36 2702.93 1268.78 2706.78 1268.78 cv
2709.46 1268.78 2712.1 1269.13 2714.69 1269.82 cv
2717.29 1270.51 2719.52 1271.5 2721.38 1272.8 cv
2719.23 1277.99 li
2717.33 1276.78 2715.3 1275.86 2713.14 1275.24 cv
2710.97 1274.61 2708.85 1274.29 2706.78 1274.29 cv
2703.1 1274.29 2700.34 1274.97 2698.51 1276.31 cv
2696.67 1277.65 2695.75 1279.38 2695.75 1281.5 cv
2695.75 1283.05 2696.27 1284.32 2697.3 1285.29 cv
2698.34 1286.27 2699.63 1287.02 2701.17 1287.56 cv
2702.7 1288.1 2704.79 1288.68 2707.43 1289.28 cv
2710.84 1290.1 2713.59 1290.93 2715.67 1291.75 cv
2717.74 1292.57 2719.53 1293.82 2721.02 1295.51 cv
2722.51 1297.2 2723.26 1299.47 2723.26 1302.32 cv
2723.26 1304.7 2722.61 1306.88 2721.31 1308.84 cv
2720.01 1310.81 2718.04 1312.37 2715.41 1313.51 cv
2712.77 1314.66 2709.52 1315.23 2705.67 1315.23 cv
2702.26 1315.23 2698.96 1314.71 2695.78 1313.64 cv
cp
f
2737.4 1310.04 mo
2734.03 1306.58 2732.34 1301.61 2732.34 1295.12 cv
2732.34 1269.3 li
2738.83 1269.3 li
2738.83 1294.86 li
2738.83 1304.59 2743.09 1309.46 2751.61 1309.46 cv
2755.76 1309.46 2758.94 1308.26 2761.15 1305.86 cv
2763.35 1303.46 2764.46 1299.79 2764.46 1294.86 cv
2764.46 1269.3 li
2770.75 1269.3 li
2770.75 1295.12 li
2770.75 1301.65 2769.06 1306.64 2765.69 1310.08 cv
2762.31 1313.51 2757.6 1315.23 2751.54 1315.23 cv
2745.49 1315.23 2740.77 1313.5 2737.4 1310.04 cv
cp
f
2826.15 1314.71 mo
2826.09 1281.63 li
2809.68 1309.2 li
2806.69 1309.2 li
2790.28 1281.82 li
2790.28 1314.71 li
2784.05 1314.71 li
2784.05 1269.3 li
2789.37 1269.3 li
2808.31 1301.22 li
2827 1269.3 li
2832.32 1269.3 li
2832.38 1314.71 li
2826.15 1314.71 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.1.0
%%For: (WKSU037) ()
%%Title: (21050106ai.eps)
%%CreationDate: 3/14/2022 10:02 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBa_E@(I0JGB`O70'kKeqSPHPBV"tI$I_KP":\_XpAGjB_Aa2hX0PKo^n(pn#sKLNgY6=6tTJ$G87(ldH+n7Q"S+[_qcBS
%b`;_B?Q@r$q"EIoDh!7]p](55pBt'_[/3:`gs/Xb>FF9u?i@rNr3t:mH1f)J02Cnm'>A^;p[ZAn?G6=,lhBjS^A?fDj1@8=hZ*)g
%h=2"/hX:C:`UDoP(VAS<HLp:T^[2ML?G-3nEm4Ndj#?_9hn6OMp\qc@+*Qmd@d!Xu&,q>+j=!"hIV400k-)O`Y2?tin3QJ2cHY\S
%k-#9T-)HsqBE.Un=207`_h[t>5.l@=p4*&]?eta)dSp2>eb:`h"$,$fGOi\aT?2l#e#RtDn`-)LHHk::/c#(WcZ_@fJ):.hHh@6O
%UQSm'Yt`gA03<HiCVOi`ht"1uhse88c+BY#q=Upe\;&TgUhLX>I-g5#GB!ZUr/<Rk&cDN-hgPOe`J7Ok`^6VJEQ<Q`hqM5o%HuEL
%Qi!9nDRRXZ>^IL7X*sZilW=,[bM@Ypp#=_-n*LSPhgbFgli0c;e3%/3`+cLfIe2Th=7?1JmHY9<=G_H+L];;MIJ`;h4PXt/q_p2'
%6AK46^\3Z%J+<O4Y<L#qI.ubnN;bJIdc%OIqsh;5H1?YkQtsu"nuM4d^&@hPs.-XqMg:cSSZ?Yb9m8ehgmmE-:3l#\kB1;>4!03D
%f1q:2i#M.N)=Q\=1')mtrq5_e^\t!)?:H^TS""p#rq3bDeBEACoH-9;>oEWKg]-Yajl&FOGkJN$^[p>&s)sdje(rp\(7.5"rV$$S
%41p=jnE3*7pKO']Dr1HL5$e0GB6&kO^UIiaa#AMB:(DOI(+9+XX2!-0au@(ao:p^.=7>&Fq#+R7rKh_8J+^/H\*s=leaC2eHMQOU
%H[2sTmXFiTs%E@dq<hm#J@iRGs5KlF6iQN2\U3lCqk&B!K^tZ%?g[Ja3L50's$#Ri=e-`bQ4ms#q<^t]hRr`733dr$0k^FWRhp!M
%]\i73I_rjFrKDX"6H3_"-,00>_`p?MS2+6]QXSiUpmo\*+8E_BdA&=JH1V%&melHfGmcR6p>C.Dqen,O]_pBrH2Z&R4Q^t1(N80C
%rr)^1huE$.Qb104++O(;h;>topSM<`b3+0Ua3XMmNdUVrEpNc%0<a8jUtP_?a4DD>/_>:Bh=o8e]ANVRMso',I.Oh>0Q+XOMrUs'
%8/nq\1Ph^P@ikFGruP8-7pW`iI/"fJ._gDROh#XpogesAf):*V<HPJ%]R'JB&,l.skAjm"*pn=(IK/9<It%.Soafq3[la6[qSi=B
%Y@#"hp"M_/nDVn?%-':@.7R&$MdJTJ,CJ;fhMtt=X7n9]I4\XdQQj#[%$2(U*TbUKOJB!c]p6cGmh\,Hmge6(rRF,\rRH!+IAq\8
%D_BS1rRYC:r%U35pe..IKATQX`<Ui/Vcph6.d[/oS&>,93lu=s]65+VCd#nCSR^8HZ*Q6B,mMOY/06e^o^b";4O)i?-f%@AQ5bZV
%^5lp;%D@\;Bpl5CdbU:HJ+r6cG4!VH.^e*UGMiEd7MbUcTo[6.q-W725OHLrM2aM![`Fc1AN#rj;jf,i?J7^!EB6ZQ9=pha^]*Nu
%k&o"8D;X*A\"g?0Dsc^og\k[-/a_l-jBoZ:1L#qVmpiutIDT@bDn,O^55ZD^]&fI-6(0mkb=,4)_l96u.A"Du968/Nj7.@RQ=E+5
%UHdNU:5?_q0<_JtdNKV.rdK@P+80iLp@I.__]<NpWEo63a8)Jp2p\F@aS"_Up7u@_,!%bGDB)0,WrD4,+#tBUqJPf"$Ca!Yk:GYH
%(8YHPAi;<eSbmQm4^7<UoTlVUhP.DcXo3K[DO0n:^QZ,*MU0l7osF&-f7UFYhFd?AS=]$?dLQ7)h`>g^9QDI5B+K%%,kk/\J,B$q
%+6ShMb.UJb-RY<L#Vp<b$9=>I_`f'W0q@<emq'qZkiJ*4YM1?[Ddi+qMI@V$H!b)Clt'(bA/+JCmbeV^9U.">-6MM]0,*OtUO7Q]
%Npc+lZV7HF9JXHLEA(8X..?-o,UY`8H,<]2@[*0h;O5d<VWUf'l1oES/'H$_i$AMO,tVE>Q<.)`'NfgoH8^86:$25abj9\EbP,"?
%O]L/B&&#9eg##!2^\a_dU#C(j2kg2lQbl7RZgl_P>.rV3br.bl/<TV_qXdin**^%II*0KWaST4`aZ67=F--(SZceOPFAA`U9S]uN
%23jD)8hgKP76\7=a_B$U8If_^CFh3\']lt^aAhgfALETAB:6V,REBlEdRC$V&t_A/AG7kD-]npP=Th5t%/Y34ma0^.dnZBUhR*/s
%o95M\a1o<u:##Yh.Blujs.m(tEH;>k+A0%fW7b':#sl0u5#1;RD(Fol8ib']L+8dC%F.oDhT]!S(cBW`:0JDmOV:;U!(<WBUZrXM
%m6,fn>gVMZ%M:(OC\nCu.gFW9o.J=4&6R*r52-t0rMA3EfRTGpVO:4#lJu]snImI>$Z"p(%t$8Ca$"7t\?1Ge'dXLIjE6Ee,`4.5
%6PNZRdW1L^j(/6[=\(uIPfRH>@bjeA-!4_-*b7j67&j#$'e`01QGb+KV!Q:0S4!]ZeVPIV2:g!HVkt$dPYoBu/E5P--BU#q;$aB@
%p7`\8fF(R+`@OX!m3e#PkB[cqiR%!XjNC]OIk1i8;O&bE\S`ramR#Emgs76$k.DEIm:]?1E\Xh0W[NiNW^EQeeOU7*194t2D1^iH
%fd0h`G[)gXLhsKY`.AZO!ipEd_*s\q(@/E?]nqK-/oWH&R9DQ[>'SE1U<P@!E#H$ek[A5b=g]r+Y\IUs_pH?m?JAD]5!)V3T5")"
%T(Zc(khD.B((4=]0tHI@^lY(#(h,[b[D?#)7BAtJ)bEG7jU@7f``[>8&Hn4IL+e39N#LKKS=X1o?IX9B:_cCP@BdKn>$WN0>'jFT
%R9!=\2<E,IfqEX:#JNQRJ,8To]uf$"pu_(s@%6T'E2^-?P>#j3+u(OZ]GPp>U=IS!Z-&D@[7[K/[h^\cdX@bRp+?7"J`#eNOr:?B
%fOf,qa#]D=Q`J>BS^0?l`AZ_Wk.J-jX`I]YGEo@5r0/[0[`Yhs]"onM0db@<erkY!;=9eJ]<G40jsb+`e\PS"[TKWUC6_Y^1G6,:
%frl6:D)1tAg;TAMUU:2mh;:gZafIp)j=\S"bXlgR4%a*uNK>9PM2ks5W^$GaF^`68Mh0ca/d=Bi;u5Nj9eR4R5Lo`*U(KeU//NfQ
%8b=X4i17c0^!-N?m0m)V*_KGD6rB\VBr)C0jQO0qUn;UhB2^Vc@5[)SC.8qk[/7!OR[V<p-4WuhB2]P*;]Y-Ib2b4]*"K8.:,7%^
%A\!%<Sllh,OsQr2`).<)]du>A&aDe!o--qb/dfi;oCNmX1Fuj"VWRqZYW)U@aQ]ciKR+6e]SL6-6nqbkhd,f"F1f2sf#]KA4["R!
%'7'T_)#A)?DJ<3FTL.lV.=!%YVCVMOBj9&oT5(*ETD2+)G,0D3kl,SdhJi(;kN;G\DcaVW&a#fV&+jPsB#Tjd$'=E;6I!@<`M&lX
%ZtNneh%4=g'?;`gTd-"lLo)KLHK'%G-Z3]")<"4/&8fYSQ2J\h]<Ep3N]>C7JF*?;Tu]#2l)f;9#_eS\4`(7&"@X$Kd4@@mp.T=P
%J0#No4dk_=XhC(1EIq1<n&J@"-[BKBfr8htN6P&0)>X;'G?eGEequ>b1"!LXl<QC8qK!RD\F4IX1H"g<2X'JUoK[IF\$d4!#.SCK
%>\O/SHVFC?\dQbiM-,c+o9ql#YP!/[*BKS^<2(`McbWl28p^p5-L@d(LNB?Sjim,)Vp[`Uq)m)W'*hL6!M%M'lRpR"KejW\pMi7;
%qfVrX'tT"&*`dDALo'Zk+WuhnJi!=L4;1/[kF<!/hF-S(:iKI\mfQ)B"J%h7igt,57/tgOP\DoTo,nK`5i2O;jqm,aW4Ha:;i4OZ
%igVs>CB6&NVe[RG&eo&#i^1Y#B##'UUtRem1r3o<ad$JiC^C0hU0PU;So1DiHcm]0r,\5o:kJI6pdu/\^=in3V2jo5RgYbq&&2ij
%I.fRlboR-$gB1l"%hJp:,6!2YnBr]KWDCeC%9-&Nl=ci"JXOu'&$Z1%6LiEa5\P7Qo'Rop`fGbd='^<KY!3G!+^>FE$B+-AKB[Pm
%G&KFT&Ee[@5MfcFr!AKJ-X&&pnP=*mf,K.jmXF&4YTHj?f.ab1MTW-;C:N%7Q0W$K1Cpq6_.Xac@B_Tsi&SUraP@s]DRM;+e/X!d
%lSE0M'2A!u;\GGD`<'@FWeX4I6fuG/`9KhC<qXr+LLO?;h04'M!I)?HE8hVD=b%GPl[t**2,E^2<7J``rC",BXmQqD\HHpg$bb<Y
%%FC5M$+/+oT;0h05L</,_g%?BmU6Wdhhg[/.hhpJ<_>g2b+`!;[4DZ^Ri1d7R]19Dg?$Z7lo:KNEGe7dd^k2fD8FuCF7:+^jC9OW
%Fb=1l7sR7Y6os2.k#&ep_Cc8id8]SSH8F/aSK>DbhEWiMaT=U[)"7DT;+*>6jZjBUFs@3l;[jU%A["p^!D%YoC!\]:"rPKV)`;N_
%]RbX?-d#c?aAF``%37<KeCY'CpK@tH\^Opuf#@,e4'CV9l0HqcD]?uH!Vq4OUPsK:\$kF`/GNC\MknNHXL*R/To^-OZWhrl+SE[G
%Y?4_!4-(:8M.(>T*Ssl*aRJ#/OI/8H#/V$/p#]K@e5OYepYfDG4TP1,Z84Fm8-Gn^K'qGG[a;sR's5#a;*Ek`cXp(oLJ=dn!O8^<
%f!=l).+SiTC%+dZ3'@EB(4_N]h>s!;d9\m?dpX(LiP^94Mld<@/nP?\DA8j]pa)>"<XaRo+H36M"(KR37,%of>=c4,FdL09fo"@?
%@!s03+O>@bI=*<oYVCjC_9rJ9klTbp&$c-\k.ek2k5jo4BSREUc*TJ?k"WlZLjCm6B8L`;-qB28Zj;F+:i]Q?9lXIX5bP9R^gqQ=
%B_eCBg1V!Dd06CePZKi$iMF'j)ZMcOl@G=X7QgC!BL(o;B$\;6%%P9fB_I811;g"[XHH!u1a[5#'N;o)Z&%fqBDV-*+Wei.3AVge
%i\UAG43lXsfeW\Kln6E0r8@Z$M1`@Ei$%u8UmS-eT!OK<H5ot(FDHDK'?'CA2=@_qPO%tQ\1]A]rA(1_2;l(Qhm&1FkF`D?';1'2
%>CaD@fMfgJ<5he@&!<4+E#Z$U.oO?1BQrkW-?M7XZA']1lC`'Z40@&,&MUa2_andM0kn#J=0(i#$]%/H=bb($Gg_U&3qkF+@)td,
%9Fo^;>_='&G7j9CSJUr5.jGWgbq8;A$"qZ_E:OYtT`mGZ;qDe0O:*oCUF7=-?.hF#,gW?(e&0<dD3Z[r=Tiqachl'LGi+.dcC;pJ
%ZT'bf>:?-T%/(`&=78"\M[<X+[L?.L:&Bs-1pOF'Fu'<h#hk9"h.aYs\kaU[WJdTIkk.slc`K=#0f(0cc-1/f@o&rei96SEm`=>U
%,"aJmJFcBt>f?ae5\*%O*1[,j\J,'[0sCq8`UMLeK.[YpN*RQ2"T@<='K/\I*"r=b;b'8eBY-2ZTaoQTl6"p4Hr:%r[=#L/Rp#=/
%1u?r^hk=\W0dj$^1"T;EY2D#bF)C4Zherq3k4,SWTV#K5OAIsh3ji@/26k][CJ%C_]ol(]fr$OfZoV(QO;fYFcm3:ABICb'Til[N
%%j_ZJrD[r1W%;F,\Aig^Q"tTKiQtZSU*"m/Es]I6A%*8J>F:u4k#M#Rhu2j7oj;U\B]BuNU\NXT559$IBdUuo+N0D((:-f\\q=S'
%?bomj^b#/*/0fu_V*\>MjW*7<%+\do30)!MW`am_[,_??(:GcJmppV#4@DrU+I3h.2o>?/(k]O5j@_\$'cCp]>a)Pd.XASJgrloI
%"ibg$`k$b!?4R+d-+jKcG6tI9I8B*6kum.$j.".M':$LOS6"USL,eReJ=0)cD"<'ARJ_aYSuuJNmRiNZVVu)^s.iH:V6<\d+]Jp>
%dt2L4c$-NeZ)_D0;mTX/f&"cWK;D3s*Qun#cMCG6eI<puf$et.;t"/ohcmtB'(f->@(n>peV.ek,E2W.-KZBWVs;hjeeJ'F:>"=c
%d&2eF]P*'pgKu3?%k5IbP^0unfHtJ6<37;&A?DQ?mADPsb*[(S8:<3g2&gr#9o#>+IO!>?C7b<i246%+cMUM,]_CQHcB]^,IF0RE
%]!*"aF,4(X</G$m3mXH1@mC_An<7&>[o.=?I'0?jVA(n7GEVViq`N,lF1%sdT)B@.9iH=>b<FAm>AC=B\BJEU,45hE-m%9]3BmXp
%f;Z<QFPq5>h>'@E4)`ZPGlrUHTOS&%9i"A&SXq<HQH;-6GKt&G1:"?WU7@n:oW13(o=.]!L_@ZM.7A6f7#;Cm@d#`FBQnC^EBdRd
%o0r8OAe%h%aJ^DrNlG<LLg3KDF-$2<%<@Tm2b&]`p3,eON7S+R"(W0<Acu\RYfoNcMVNXTBPcnkkg0OL'Vf5i0RI6S12uDN>??6T
%D)f">9/2!2SU(,>WtpJVL6dTqL;m1V3FfHpUA[tQERPl]H=U6AAe!3+:ik>(kVVLJBO_$]rGu;Q6'nuI=4+Yf3P/V5Fkuo(r:)<@
%6ig\(_;CD&mR0N7G_`?ln?W5,];14cPJb`FrUi_;$8c,0V>Z_)1>'#nhWbO\*cZZOiM$eIZtC<\>#Kj/CkDu-[Fcge.85%U8^^G(
%oS?D@SlJ#;C+X,]R&Mre7'gH=SQAsS@g#'"c3V4KjZ$VjEpRb^Qk&F?WAI77m('%4?C'05`o9#]LJgpJ3ER!YIS?fQZs6#@BN8uR
%0uHN4"K7WAh<SmY.-QE1ns$Ht&m7Xn&ZkV9lA8WVhPZ\a'oa>"A>VKb<6[T=a]F&u<KhK4>mSs?Wg:;H`D$)tj.FS".1_mujW^J#
%p@-0b$Tg"EfZ`tQG)&gLAo;U?H"LY7bJ7``2,cT'S1FmB]%e5hR>61V4gVOkk;0HKLMSQceN.&LCMCf>+"`Do;$SoeE1Fj$T]:kQ
%Th#lC^LS6Gq-%\*=%2*c8uW!XWe%_]q;f]?O.`d*&6G-\h7:+_UZK'hdkKoqN`PF:gR^E/4[Vl^O=Aqc]%dsQ0-0Yo%.ep!d/.4F
%]3)V!D7Fe*"`3b8=qS,&LV\Kl=PbVtkm7g;%V!92^0`!6GrnY!Ik7]0(:;D.2]Ai;V00N8@HB#5H=n+^1Qu^NiQ[Z0gthC@!q-c/
%>dC@f8F\SqHY'%#_rF5i5-F:4X4H.]]%[b_^k08;KdB7DD/I=C2!=.->/15s!MXP"!j+=0[[f3aK"s-SQ6_$X9VPtfMUGS?nXPAt
%ZQWb)SRpndQ;u,5>,@9eAlr2b'h\QLcEM=0eXAP#Gi#5LBEH(;X.WN^"p9^une?lK5at!OaVbi>HqJHiUXZg-Y(_<toi#:-n"#rR
%Lbi`.JGI!ZKk4Oc2)q^;UVUn,mHSC5ZFm4P-@QJ7+gc!g?3gd\VZ>4;HCA&`=&1f6j^!_MAe\=DE&X5+Y5iLggt^&DYGPTRp,S_f
%m!1ROr?@67X4q$P08mCn`q6RqGbO\`qr`:%E,]enaq+SW;gmji>FNtRH48i,;%,IuQW9q$>)UJ:htPj-NeUSMML[#lB$h6Yj&#'i
%(<7%9fT.NAM$?R.;V(ar$fL"`l\\]J/o3'8!IDj<Fqn&T%URPWcIWF%HL9FGm&cNQ:'Aq`<eaY%gCLCsX6)'B^]pLA\7oCHm8f^3
%h^gH97bkT.'b/W0.HGB38_#</R\A0(D9&535$OgWCW'%0[PCb)ChQZ!=Qd*$C?q0U[^9(^]`]Wd=4(hbBk5?ZfA6DG\G;I$rl1r+
%F@RjjrfK4qc$oG$;P@3!=(htF!,qPuh5^:ENK@@H2>`N8)N"*l>mW3@j#duppSe^0([%6]p6)j/ZsVs]h0M60n6DluE5PWlrYD?j
%MPf57`oKYI],,e>+!gu6XqS6O84o/CYu@Wa.S?M[4Kj0R/+^WQ0mJ0of`-WR4I_@XQm3k]E.g>%bNH#/($]'!cH<qDL<pt6?XICi
%b-]0V=oh][!]EGA@49Dfl#g?4Rq3Z:Dmg9p"Te<[Br6;[f:aqg."</Fe36gkD$/'8)#[R=G?aMNj(X=8%D'r76a^X]39Zu/D.Ko%
%0o[b'GF7rVjdt&#M/Cf<`:i$45.3kg.nj=d@FF@;^@6<RqP]dZHQEK(N"81$>OuU)VP&.k;dmuao[L6RJtAN/XMLGJ4!7"7A0Can
%E.--_^,lP6:MYVTc?QeDg0&<//[C-`;"Smpq]Q$D7oF;S!Wgm^$Eh]a$.rEb6bso(NmAm>l6SVi+Q9o)iOV@mogB_$*6@nS]f?$'
%r`/<_=Xg[F-.Pji0"b0Kp"ZA%HEM<IX?)7cbM!^Lm?l=*9?nRTILQ8-'2R0H.*R]P74g5h)t5r^8%M:,obiNLQ\'XqEbA[fA!JMq
%NH[tQ?",T7ojM!e+)W8Ys4,!2IM5I`6K<rn_-2V^bJaCGD:>e*T$Q$S@We.\Zj>3i9O#]?5mCUd,2QZtL8tKs>Hk^97QiGBPrP47
%EGYPVD"l-SRLBo%9X^;pR)KW?Bf+ElDHkf9&L:K@19It>]cju7l>)HooVuW98r(t/goffI,;&6>SnP[+-ak@E8tFaO*_;e^NDkmS
%O/,P6:>[=oQV=B$]Gs./l%q<V)ILf0]CrSU-2VAN._VBu[VB)D4f6BfQM.na]5FEG?S-NkoB^e'`@BPm9Q0O_&h`CuYL>,TM&/PM
%`J#pR9JLdoCm5+^eQ\N?\fsY7'klqNjE2d@*%1(+7gqQs_j&i@@d]?A2S)FBqq?NV`U)ieC3MLmOi\<F3b<R>9+af+P][)%a*LEC
%l+lK13"M@Z>Z@nK=(S[RfQiDo?;O]^GHS#P\s64GJPAJ#*KEL-_F2N-/ah*oBb"EtH/^6Ve$lEnCXnbSn#q*\Sbq"Qba+ssckT/1
%*o9&jG#c@(Et#BP>pn[s)Q`CFo[5mLDYS:HU#,d^E=bW<C3SV`NfN+bN&m$fU1f7sAR(`pMQnl?V5!>)'Ru?%*lS^uX5&[Z\[[f2
%!4UAcL[rlmlu&Yin[Q)prh@&I"cnBi=PC*mLTKqp0)NeQq,EPj<N+W7KG@l8q)Pl/>RIZ@'JY--J[Rn'r2p?+P;-ter9n^jfR;H5
%8o[%bU4)9@.VNjqGJ$Z+hKQa0`3Yr5IZ=i=X#XAG]7*)4eq4"\O4AegYn'7$4Yi1>iL<$tR=<X5D2l9oUV+u)^1\u0]qXML(`(Ir
%ZAb@F4iB%X5[.`8rhqLHD!1/Lb?hhbP"aJpC0iu`TnPiUjbl=m<#to0'>pK>3)=;66H"3Sg@co+mZKcu/C.lT4IjoDOjeHH]6jj0
%1[?(m6Wg[MSVGA;aJtJYA3fajpUq\4*.(F^?e>gl9nT%?-9bU_GbdfP2t^rg&Igs,F?_$uT)83cgX;.@bkdUm>BF3#F,P3WHB$YF
%aY9\BL+=tBkWlH=XaW$!3fpHQfE77^916JuUL"#$f@k6+dquR&d.FuJ^i7S7C8bD$Q2O==Zq4i_6)W;+OK.]9cIg24EWdFML*&m?
%9Ad2;C0pNWZ/Q-#r's#3#JZbpoD*H(j'-5VNM5>=WdLeZY@5W+n`?pujbu.+qG!d]RXX]d^7!R(1jog,@a7[sMjVS_P[b+PV;*hB
%5,RP9l'+=q3[E&=T5)MB3Wa]e\RWMY+*@@Ya/Jmu3TGU:"M-dqkN`;@75C$7A[L+EK\,JDVJ;TX9qU,4"W_g"Z-SHlA2>ajfWdRu
%Sn^I`;#'hucuAn[:M+N34q8@E]^bj$DT"CT)1/FL4taCn`',i`Kifh8Q7X7`?!6&iTN_epbbg_T*0%G5=J86h&s(/?TT>B>h%f/s
%,Xt'RYMMPbI-5*ALp"Lc>cL.Ap91ne[.Re.V;X@KElMeaB)CCprFu2<+[R4(()?<=ZG#7I?&XsD:#r`<rTJLN.(QVoPU]J<AF;%P
%s&Dqo.;b?$p!GZKR\AO?[*L\b`D6a)O#Pdm/?Y1kHk)#!U0Bj5`:[=56(dM?[sHHqRs(4!H_I"48DoW8hb+D.(;<EMXl_aH+HL(X
%98LY%cg;'\PNP^:#dLo`Mhl;Md-!K'@uno1A%e)P`<[I&bG75V[Sl`LMq@W*n(UE4cZ?rmcm!Lre0ZRcY'N!g_/sWhA%LsdNmj(o
%]WsVjEgfeRW5&?%rV(5:rT3HKmpEa+r@;R/:!Y;4MdX0;/r&q'@WI%7eV_dlX[NeT06bI-7MAK@*>Va"/)`VW#iI_Z-S%)WaBc9c
%XK[p"/2;[?*+0r5)MY#a)&8!Df?l.)r]1lFa%3c%=#:nV_sLh7*6<6PdK@oo6t`>#8D_k5Jo%JI>5>sUU$VKT\oCaL1ILCM2E'o$
%G`/MG>6O"\CbIk/*%2>"!bCRH0nV58d"XoXDWIa)E;BNbC1$_oKIN#8iW'Z3'o:tONC9t!q!Z:#iJ5`?>6Rnp=.C!@@:q=Md9%pm
%S%U)QAS9%ijtQIUln`p$%]&=hDJ?]hfledTRujDWGN'[58*3/TbD./5&8LjQpZ26OHJem>T(+%;9IC.<qd*G9g$#:^cGUj@/\7k"
%fFs[ok*&4hOWkX!(P3LP4gKhpP]1)>r6V563\N;*n4T2eBCk`OAuJSGr&a`BNobZ0lT^<d0Zu&"!Y0%4,1&pLFqt6GbA8iQ,lg)e
%/G1-HKoj)Q`"ZT(^dTXTEsr([_Z0@('*.[>(Y],G:*?jK-f"0Xl(<gqJ-8,sVD=B@qAqsb)L=3fjGSj_o4TS[e5@fa8>hZA;3o[I
%4$^W,f1g+JrFHfAqe3]-9_T.<3K4XI+UGjr#-D6:LhF,Q/T\4+dV2R2<jXIVif4T'ghYY@h3L-hRW=CKHtnl9NH\^:fPB:]algB>
%W=BkUYl;[]=S9*j:.Hh&5-ME1Qu.p(41WqeJTc*Q<HFJ_C=R?An"KF"6^RZ[)&n.gB6`0k.h%ZOAP%E[Wn11!;3Pkk4.E.up)to6
%5LLhkrK<`8BZrlf2K;[A88fHd`Ej>-MBK"eJZ5SbbIFupgsk$@B<-DrS&T%17+Ki-EQ:Q"WXL/K,'Cn+^JGmt16T"*a^MLo,<J*\
%JZ$djdcR.F4qVZ?Z[JM[h04>F2@%tf*9Z:d,8FjcESel4PW:bL7[oHe7f#:na#VgbjZ"o1Ap-uBdl+]2B[m/_bs%0uq$(4SA,0fZ
%mW!,u.#Le#m2hJD/>gE7Gi,qo7'NefeC;i[j#t*<Hj+D_+h2<2i3&K!LAJ[kgbg$if1`tq21\Oc;6-Pgm#sgbr@pF\*OV)6V.(rl
%'U_g6gSQ;/'AILc414-`UZP36i:E!/6jMWlhS+F.h5bI<^MgoUN%3V5X8R)8\.+dM$]f#45H%n#&qMN0loj`h@%>iHDC`(7]Q@LV
%j;6r$6:I(D=J5nl$W26^S[!-=YP7K`ZDM#?9p[rJMC$^$DmiidrPbWT:$"hXFh)GXYoh-2D2So?7c0]h>m-^U\mXW=W=-Ao`SMg6
%p7:E5NHok?Q+^PTJ+"u0A]R$%<p`?gY=sJi!oWC``OF!Sj18*HhJ2:ebI<rq7p]umo,@Gn+5?'jRdoT)A,C;d>Mg9FRhg0C?)f`U
%@AOO7SE.8nYbr;#.:#I^eJ\$'@8O+V(j6E"A2T%fVh&\Bn(Ji04e+\)Y-*!X@B,0iDPgUl4g7f&27%,OJ)XoBMQekSkR&0c7\dFH
%a^h8N1WF#_`YL!\RUiPN_)U2=JVJ@7m52tkB!b_9Gj9.!*Z;/Zs0]60JJL-q?F6MT#b%!jf(,S?=dkkcHt',e2\oLYCO>[k+8sZ&
%e"?$jcf9s+P:.ABU8.,&i<F)Z5^@r%7iNacSIaM;Xjr_-g+A"ZbC/8p1sf*)VoLc<#+HQV>G<sB1.i9m7qc*6DtgYBmqe2EAMoi`
%PUu"[jE9-2=h(0eSZ7?GUeH"27&&b-"'E0`eE"iMN7gglQ,HN]C*e#"D9udW5ZcZ/ne`_K32q#3%?a?/GU^<IDRX32a/.X*[4c1j
%;k<I9"b0h,Ft]Qg-+L]hS=`t^_Ui-4du$c,7_*e"$)bBHAaZP!Bm=AOH1T7CEG2R+9J%X^bbFW@m+Y!gX$):P;n_o0K\b++RLSR_
%U>:Ih8T[aICZbV%\oUrMBE=3k3>@"JFLuYfg+nX,jleb30H*Y;U1e?s$Bsb98ti[6j(/%1H'VuSC[\V:YXY4tG[C$N\1ut@i)u&2
%e*$h7rKjX/48]p_c07h^?Z/SJj_FCZ[,#)69Hu@U@p41p1TIiqCk!L=*7B@4/E&mGc:h8nPJ$`AMZICJTYUm/4Wr.jC0++]DDeNr
%5TR\e,FOTJ2aV1g/H@m6G67,1W)J8m'4YS\E[o"QXV0!Rbop`Z1!o&MHY<"Dp+-%Miso8952dlA3udYTjUU7.`eo^Ymgjkq&%[J)
%/J"?8Y4nTY4"5:/M/F'?4nhk7[^6ssdR6ecWKtsRRW`%feYBe!@_GDB6X,mMDL[CG8J3G`CFM=!RYot)ASa!dF=!"/G'h_fTA9J7
%1$oaLFjW+XWmB&k*6u&j&:T`i?R3c1M=O*04S=Y?,g$p[njT:#OXSP"`XTcR2#P\-s#p<JjsXbCU.'>GUINC)F:$\Dh.9a4o4jK`
%m4VO='qXT9LsL_=(YQ\9\\8G'nYWpH1HB=j]:6]DE^QkD[EmP]=j@V-g3Ju,kLD<Ace:+SoRl#joR$^a,G3nGGHpUFf$XBOdF5Rj
%fMBgo4Y7Tn=_<(uAK$Wt)01qMf,q1YE54)+F*Z_#^A@_=;W\rK-W.u_G6+9k;nGK=9roMEP`j3sY"m.&31hP!A<1gZSkCmjIj&5]
%E_N]Y1?SSco3O>ia:t7dL4XK,p\.qUD"m_SkC)47H\M^`_Y")l0'TjcKH$s^B-8_GAEM/U%#[3%Z(gW^FC`gZ,Ij5^XO,eQ8<$;F
%=$^+Y]$,M;S'3+)[:\jJKQ3E-@g1S[(MFo3n25)Jg:03S)U^P7mT-:BpcB1cD0n-Fg!3(l=)4QLB?n"5rT1c>ZW0XM\Z'_ZS&>&H
%QK<I"mGd%/)V2>i_igj"=$(6#GL<^eZ[+L%D`bF1?!qHQ-Q4A5'HET2jt&^9hrK`blT2Hh/pt'4X.$=93TIN>Rg`i:/@210;fKS-
%n`Zj<\sk$Z]]a]Gqf9\P4`V:u)L$9R(1oU3n6A=SM$Z22m)O]6$_g.T5F!B=&WaAiS!(Im*?O2+S;,9Y6f6X<gidf)JYm!k)9ocW
%pJ".^NcheG3gg858>9scX=Q^DdRe+mNjF]LOMfhik'IIm[4o/[!V'uKSGOAi^1TUleAKZc"C0YU1W/@t4cteKYkhg;aM1NPr*5E6
%p-To#Ym#tT(4Y5Z5HPWtD'3VQNlPgM#r\$m/iQKW0"XK25GM'.cmN,c5rn@cj)sh_.skRIS,N"tm8/;7.H/9VgNFCPbFK?6SaITS
%lGoBanIa[TPkO9g`m$]CcNc,jfC2\qkBVWF4A3\[E^S+BD`RfVP%2W%B5TqWIiYil+-YH/6-(ckpQ+Z\CM:fqb^65e2.1-LQ,:&m
%U=aO&=D8-m2+T0=88/M\>sLt*[hgH,%4#3]OW("N(-3@!UOaHS)H_(h*81BX@j;i_32#D'L=*I-HG^dXEX.!)?/lU>F9b%6V<cB.
%/=s-F3M19nA08pgO]9nN",%nq9bH\2/6LQ`\Eu7_aS-Wi\,!?bHE#\V9UF,kUK2`Kd-kgqRX\kmdFV`2<#prd6"A_JX#t.)7nl/r
%!5<AuXKalKocdC3H)2-h.8en:W"u8uB_cc*QDo?3Q.6Er=FN/.IC+UkKB:!NPAeDu&k[S-\$j=]hrRS.iNgq%l[&[j_t6(Xq6oYe
%[d<t$m/PZ1J?*4W>]t`M*L(IoD;&U&R;h[`QBTMSD`7?P7Z%)rf(Z(hY^QK#j1`"VlgDS9B7.Y,5,J3<T5c/k)MQqO(Ig,WZ%\<Y
%flqktH2ZG4?m>KVgOL`6H)F>M6mr<#o,/Eog:l4_DV*[sHJ!Rnge[q)pQ7ZmqoE!$d^%-JZIP6:(p`p*)TKMM<A8?e)%MRFmUQ?h
%.%mso+jM\iQJ?IRTj'ck>'`hG(\k(1nlB<nZjjK59TS)3n]L9W<cI_NjC<L0CP?)`HM@g6r37S]r9/>GCo;-61LB]:XaN4iVmK5+
%V(qZd]!tG8(_te7DOXs--2C6+<jK[H"4t]D/('*t4i7j'$?7$RP+FmY#g2$QBpJZ<mW(VGY>u#PLXN816:%+-IT&ur(0,n#66pA#
%WE>KeX:$R_1"X"PU(69"#?lp-GialoRDhT4="gOlXfQ!LMlB*+V[`h-HP)261!\u66,"M.Fb<d#H>()D%B&PTD/HK:CBQD3E#WrD
%P'E-\6Y+b,D=8-XJSGrZ%,Q9F"^kON'#+S%d'T<O1%.3s&:FM7KL;tPMcceEm[[Ho-Pdc>LX1$L%6qMq]j*V8HPT!,-seHPcTq%C
%;#\rnPN$63ZF_cbfdTRsic;M,^TSF_%n/<q`f2^eC#u)NMmbCdjc%eboLgG-j2SVIhq^ul)\$mFCtY*AA16[/%0snd=_X1a=m!/$
%#0FQGAYVgT04^!3DNX@a(fa'^^r@Ba;`D*r1U!6=Fm]I`Q>&o"T+:I"&Nm2X]l0d^+n]LfWqYo1/Qg&4SQ/AI-9WqkQ\M0h67[+A
%:s(?$4cR'!g6NNZ/[o!uo6-bE)`oA6N?mY<K_$rGO2->ZP:'GNn)^aD2mnB"1!:g8]hG_Z$;/r:2*TtE7MjJGmrWWMY*a,"0i[Qm
%RTi*M?.e[*gA,g9n9"VT,D,;9,1rsPR`6YL$Y\5$UO+q%7`.tq$On?t'Y-kZ8X3^U/aT;C,hsrMPugmS?UbgcZFFB<@HPC]=Zi%Q
%cdKIl`D=nPpX(@&I`OD8A+;0@$FE9TFrVnTp-b+/'Wq#'Qr_iRNF"7LB3L`9VHFk>""VDk9B+`DKOuO/"gYV^VVBEpGb0\&p5G\I
%f@r0Rcq<*VhE&0Jp6;(e\ni<ln+3D>(tKjs:M[uUg7rp>DHMurBR7[iGa-J%<h[:j4=[/T)j>#tN-ZaDWF\E`JaY1j<E&<G!XFl<
%,0g3'nRQf:+f1n\RGD!u\i8A4XVW+/R(C6fQ^MrPZ@GBP*mK"&,YE/j_&sZ$[g7Y-&S[2t0bM6`9%;4H#Dc.+j@q?UB\U>6!AoTD
%Kb>As<n)lWllFpVk$h,U:U230q<,p=s3Emh+3DQCjPO!VUTt$s9JSZ*(-lbjZ&0K#M)&2.m.SrN"^9;*2J/1B%IPk26Kn-$JYmC[
%)8.,8jR<7)S`W<[`n`U8"'nH[r*md(#9*'dOla*m3610?CJMtV>%t->i-&iK1<t`#1\/gs1=,dA5<&=7hR%!n;kQYp3OH$=h3,XM
%>[L)$J[<Y2s,+6eoZ''j)dN-T(GEGVC?/g9CerskksR+]Q[cL`/AEH-\C&NaIE&-s*.5_VZ$PK.<b-F8SR1d]Yhn&AfH0GGY?&U0
%CNB01mBh<.<=UVX:4q-lQ>X(dMt1oga_Q5u?J/u>p.m9X/um)iWlojkLLF97AT-,M[c)p?+D)ARfnP@7rp++qWWf;dT1_C/?A,p'
%foW?oo?$*QQ[\d2gWeGBaYh0/pA"?;,'97m+);DJ*aQ2nBZLi*cFAO]39l3mKdU[CDX6\T2Oc3C9u4N[8!Qhta/"iY.Lh6FSW1co
%nJ9-34Rg9/(KNX:g9*%2TP;B&VdSSSJp*+_C^Fe:/SuqM%ul*_*YRD>'XWXeqR35o"n."?d=rAVm?7+B*n-MQHYVe]S((e>rgdmZ
%kp6KmXcg_(&hEO%Yg%cb\opaRDHf.r])=tQDYSBqE82]DY7lT43]Yj@JfdSn^.]!MR1an0(Att&`!mgcGe9+Sr5?T2p@Yb4\W;B\
%]abQj_h+5k^ldC@1?>otpTB2=D?Sh9JBi.JA'Auk)/XqeQYaod[Ul@>1CgMjm$@BZbF-kNIlZNr"rQ+FmBj#6#:h#fUrI*P)I.%g
%OT7R]*j),kLOO+ZE&UM$r;!HN@pOXN5-GhRqhttsg]S#blbu=KdgB`)71^s=3^NKDdb64G<g`B.#i?/UIU0ZrEntop;a-V^:("\1
%0)dhUnKiU']>KO@bb_a,>?]I:I^r(b*"jq%:,\-*jS:]Bojd3cT*(#.U;3CJ#">5dfF\G?=]qh["sHcZj3Y5m=4WSjW;6;fF'+Eg
%(`hCsKp9>(b%t:LbG-m(k0g9J[T-V*Fo508E:9u^i6o;q0jE1];KEl&D7VYR8]eNk5gORNVoB"R!o9#3LZ>=u'-5i+[^XkF35ipP
%;dHTWBI/^R715u8)rlrk@D1,mV\mmhTDNoCk8qrrhuXlia6&,,%)1eKj3\*4e0>:Xqs%F)D0l't[u'6K=6esc)lIS_:>MLkq\5MM
%ZtHp9XIa4g3h>F"\X2eBV^Zk%+7Bd]"Ej4k^89_!$_\r<7G"1C-*n:!,]Y]@*aK%O8^MMd..r:I*Ls:`9L%bu:L0+SosBdJ7-7o[
%Od<tP\(PRbJG!DLT[OJFBnXN<$+QF<g!%RWLqI:I2Y5;>_/962UMls:S2]S;1\FphEQ]ukRrO\;-s3o-SVNYi,ni:AS7!VuBXu1"
%EfSJHBRt':"IJc-irtn;E8icKKh>CP*)9J6aDo"u"YDcs7)F4!Gua>h1M$V4R;'c_Ltq-+&ik%JR=ssd*lrAH#T*Irb'^btBsi;M
%7$5Y&O@g6:VT3dC8E*W`aB0:b.LR,;Y8[/=C5!e4"@V,Bf3e3fO/:LHFUN'>c"\]YBS@;*L]Ro0g<Na8M1=B*\"`/UClbW<hrj:'
%X3/:FG[NtKFg%hl1t6\7>YTc"fZNFcY-LMs7SIAZ</@H"rDga63gLETmK0fa4,20AKPXd+S+>a69+gBcVH"t^P"2e&U=eO'grc8)
%Ft5]`AckQ[D"3'7m#5aB:+u#.*m5)]dl]U_ElRKqf=0JOHZ/X*B09MjM@Q+4kIbVO]&=t'bep4-dR-+A8mPl0/RD!7D1H',I<"[W
%9.Qp+\$<We9hN;aWStAV?s(6:0be&u3rIj:ms?_j]s1sXUC]EWXkMl`L.ui5Ekj&8%6)t!dKK<t$GLkI<QhSWiqnu(-?WB:KU&lH
%m^Bq<G$eBWQ<N]gCsOjr5+co+GoS"J1\W>i76-)1O.gkiG).'M\1r;ajMcXQD'o(CZS]uU79W8SpJU,[>h`J/k+9jTf^NAuE-Kri
%DWUkFp.=m/7&%q[BtR#J?>=-2rm<]Xfkja`lb"o85O7g:g3W"`WL%#WNP:aA-oVLpgpQ-]jY&4BdY^56[6.!R/B_<$;s(![]X5!<
%dk%N2e@6#4!0Sce"<\('$o-R-W8+hWR-E([MJ?*jMm=8Ne^n/6%0X%$_R>q31tq`bC0.XihK5tB2dq:)rcCf_np[uBh6d]5']<4S
%FD0DN[*&3Q/^Cj,:>=--frV&f3F`fr[)#r`@84=\<_]g'rYj%)RiUhjdHr9M,NC>3K0R*u"kMD.Sd1n%/crG]#sTnsCNG5QB0'tN
%d*\i]=6G;LdMPAU_FS/Z8S6@Xn>p9NESQCg0RX_sBA%Ru1i>d5qWJl&SRgb\=E^2R2^2Am2E,Hi6tg^793p]2331UdC@R,r.fO"C
%&D_f1c)bK"%<JVq$-UM*4;F,=e-Fb)TnR0nKjLO.;X8'lT8(^a@s)8hn-poabM*%OfbJ5.\"dkR1e>5M8cj-RbSFc$R'o_n>[QUh
%/s\XK/-"L-q/I/C)pQp\A6n'0Yo\Yli"cO8l5i<DSm*tW2_]sh>LN"L5OJStCaLgKiZ9Kf!eu^s=17#bYRQm?HH1Ind^QDr7$T/j
%$V_Z`CB(!?7!E^qJ7'\2D;tWh#T(U+<OT/MrL+4$A6Q[nI^*f7d+4,a/`)A]!$&PkS*QOs.G#9$VGt<qZo@t"BCi_i9^*n/at.[9
%:+9qQ6<9C.,si^V$g-!-RNbQ]<9f#2*cSnaZ-?-\Y*(e;@UcNHV:-"R@-D*#j/Ecbqd/(rXg6F'fN#_+%2[k(4QX`3Yj:D\k9X't
%T=jLO=SZE1,sQD$bE3T.UuO8tH9(D=.2)R#]3\CA#D*H2@;Y7pg.-`'Q1.,G$6-0fK$B.Mc@l`*c,>9JRLM:o9]eJp)a7[o?oDtZ
%fk6cbQjkeuSomLVM<e)Q`3[\pH\:??*8fcN*lg3"^<?%`!Xr8hkd\@IG<3CeeLDZuCO`Z77G[HVa7h[`E]_"onK![/g"s&;.#hZ0
%^$G3*?g#D='pL!lK]nHif#RO!]_V*RO)KO'"a>@ob&>bk^c2^>Kp9WG0[9hl5Z6`rb_b@p5)_:,R1j@6cqq%rTkp#r_!P_)'Y*mQ
%SQoi!``<#a:Hc)PR%("JIQ8_U!\t/opJ;8*H*@#:T6B"RSbhYp74DKOp%m]$5jq@tD'Z:-7[eVd+]o,%b-]fo?Ph!kVJEEF*7(rO
%pN(EDY8E77UFZgkB!RulC5;!`rLV>&^t&1mSRtX0##[!;`F>bd07pc$9t#sAF*;Kn?nRJ:@PRGg]oAlFflD<2R/5,"c@!C=f_;#\
%Q7oo6i]6Mb:0^VAIqh`)57c_/B="X4O-2fs8QOB]i`khf\\$u&Q9/@>nS59F8V1%9rXtC.#T6k.g7UC-n;XO<D7mLRrLGl`,A"O.
%YJ7AX4D,nM^<c=EfD"Q6XkfhLo487;!fPF*XAfmXe7gn0&1)d>:o-]YOXjMNb"k#,-(p)`a0l_(f04S^/B_*`=oJOqeq/)j9\C]E
%3h<#lPK_7R?ei#*iQ2?dXWaSSDH]tYJuGXL).fKJ*cdLK8'rB6UPY\K7+,6iD#l.N[V,>\a)43WbXFW)d)<4gpAd82J/f(%jEPQ-
%_uMnNoUY"`g>d)'j$)$eK&_G2[(YBeC<uPoE7Y*4VEqY;!,f4"\a9JYaPp37%KX`7b)_)H_`BGQ9uId&P5AF!kKLM>kur9-R,>X"
%E<#d8Ti>_/,p0DXncjn,(ilr5C>0E0d<CQFmN])%<lL,BnRjGB]aAV[BA#8jg7H4ZeU/=/VA1A%AQSZQS.jKf_$6mDMZ8Yl@Y(Vg
%`o\1MI2fPR(GfM+F^2%m=B@Vl)=d5WnaV$KYKRBB'=MQAc+qB,%=Ti.[/m$Qc32=B^'oEpRiuXXfee60(].Fk^=Lp0LAm5>:u;%g
%(XQa"7d$&5SCb)Oc?S&6]W7a<X#lq[K.Ke@IPW"S-H@4-nW+]nCp`uKZg#]>8aL&8jt<O`_6bs6jNKb[,:TEYTX&Uqd<edH`su#l
%0A:2:oU*n>>`Ju\gb<.JTU`asP[=F5NrYDOk/<THnRYICR1g+UM18l_nk\_G?f.\0]2c"YHQ;T6nTjac4HNUii/%X^`_OhS\HfQp
%a,N_O3X%m^?T/==gd-pOPt>@:HaWbnebAl<i\F[*ZOXGi\PG6X8s\>s*<%s"^.ccJSAX*H6aS(99<Lq!;,oo^,80i"0/BD2q;nnI
%l5@n@M$ra$r9NYZYPrQdGk9qVs2IZ8rVZm%qgsBI_8*cm?sbUl0,W=X%."?+p&tQqinJpu42/pq06?-rSG7\e4Vn;L4l?1n]=5P(
%s8),<f5H0=MdMFGqY81a?iAgTr+ss1If89DLKEs%MALd;nb4^9q;"+lnEnhuoC4Gkhm8M4^'eW^]+F:6Q2._TPIjHg/?-/>^&I1:
%rsf#,;?(V/*<5d=rVQVWhuB&8rgO>6mVd=LoKT80[pSa*hf)5MG-,rMh08(s\DZdn<o*`"rap;9)r9hD]Z!,8AcMbIl1N41YM[$A
%nbs'2?g@>1s5ib<h4*6Hp4$o]oZd3df,rk_s5rh1jo:WTr9!HT^NoLsDdL-TnFPICie[UBs7D*H:I",I:AX%dC-.U!l7ari8QH=g
%1OP#(gGm<q2<abpRbdUs0D$OUE=?p!S#;d"DP$<+.`I-Vc?EZLQ#7^.54)n"h2,p9jX&J>R>B;MmbD(?.o%Ymh+KnOP*(WUh-lW(
%O``-dStbkuO^\=Yk$%1Lg9boEh;p]<h%>F:gJ)^'3P?ts''5&I:=c_;So?'<iM@pXPrVk/RIA'#nTq,>KKC:;mVB<G+lRVh,4<;n
%+4p<@LhXKu8\Z&0Aur3$mq-Q8G3C@G]W7_#.@u#6D7.kT\TW<Fl&<Tl?--3%Pp\4/!-]a2Es*I@hgoNT=7FHSg2[*EMGW#lE0i],
%0Z]?03M?O-]Sp:49-S3!iCcd[#R`h>kS6+2YK9.-o!+_A\WEXTDECP)!AAZDNg&d.H"OV5KWiK<h-joOTY.<L\p(p<@J2H5;7jM$
%$M$?jYGhZ=TnGM!AH66BkrTQZ4h!A'RU(2&q=\)""dd"-__idO7o:Kld-Sc&\1,S>E5mdP?5[3t_fq<S&\Q+/;HS7Xgn(k"Sh\B-
%6FXicEX`G`a5W>T0P0mp48@@['7<#$gkc<?g9$.QS!l$&fd#qc4aF?^LZCfaeB*r=AV0>$pUH]6]bA6JGf,!mh_EG:0OqiOERH@I
%4`a#skTjJ"B/,-9*mdBia?sPYd>2pt93+nHm&;VZHRN:U$&*:ELdQ*U*_kG2gn."7mDQ9@';mEj[X7PBCs:ojP<38lbCZ"c7>I)J
%RZJncck1$]&67SY4NOQskc586F-%^2EA;t+;49[YNI&Y:Q70)fNfs-?*S4Aa0Wq].&gja9;_@oG(0JL<F56.2)&jH6=k;-H%)h&/
%\n(b>S`r*cJ-2`.E,rA(A-)b]a%XkeO:,$a%$Wl3(QkG%/A2$mUtad`rIL;k/#C+S#Wa.$`/lKr6paonj-9"E0hp_?i)"]m@Y*</
%,(lDL;<OT6R0K&,:5$\B&4He%DU$;e8!t-;KUEHFHGl2e=NF"K(Hn%^P'3Y=H#T_;G300Q.Lnk(bDaN)"!imfV!]csdkHdcDbC:5
%?FC,90mZ7A;IF."do]pZArYGIPboM2W"1B6.6-])<B`oKS2`tLI^Aa(9[N6-0A"T=IC81u7DOF4D>"-c<S6?IOJXg2r_acpP=SA<
%I/,)7Hnl9I?H-Fi*Ep9r^n)_o>Fu<<Du)nJ%^@tSMg34)N4W=Gf&YL/>,Y?<j<Pi#TeMepU9Ce/.=+f1PX=K/:F:jS3l#O."Ng%-
%3C7U^VViJfN?)nHSgVS;PZNfbM;/(;(4(jO_KKHF.02l[6aOE\KO^N'[p3L]f\D]-.,Wm<<=@XcHr2^;A8/u&`&kn=&gi+He?&'"
%cs8?qA:_qjc?b<b(R:TUX'HDh$9ds-D-"jOLd<WE80UlL`Ygh3i&23`0q.Hr+n]g=K[JqdbKDLo%Lopf)$(Ul0q[PG$$oG)qTF&\
%b]5^RQ>>Qu98I.1.js@?6l_W]U)>.\KV0>7Y?5Wli.X8j4j0@':P$q[O%O!JOicBZ%b)1?5fT77S?S3EmIL%>LN=R/BTjk\Oj\V;
%E[M/lQj+XZjE8U]i0-r6Y%8h*1Bqd>MmT+=-8,:N9Sk/<U:)B\@X[0FZ&<&XQt4K>&gtLgLQ"mFb`T)&0Oh[#KW0(($i:53e&+@!
%EqAKDLphSk0GXKVi%F(o<I1<DRmDW<Q?S9@b0;<8-CN/"Yp;IDJOtVl/lpZcVl<B;RALQ8o:^LD7r=$tP`$iZ9T12%i<^<Y]W1GC
%<TKu0dG+U8eW@.)>S<;(Bl0;VP4RW!LeO8-pSuiDd\UTJWh\u\_bPMeQ7"BF'X6:F;+,VcFqI5A"sDk^?tJ?.&FC/rPqQb71Eo*t
%a;s4+aL&'3;Ik`H\ss8nMR8K@!3XQEd)*2O6.]\)2`_*`.'j?.l!X[>^15P?9aFC9RXAZ?j=nng%*Yqkjmba=_u?$'H"%NYacF\C
%8MDpHXU>u3UJKSG1E8k[aHIYos(s["I#iL7Wm#<WU37fJRqU?*a82c`0c,t3o'U(&p_F2>^-)E@mj1G!].`<**j9as5+&;<'LDL<
%h4dLsXmRZV]3I^0\Z?hFU_7ZI8G:hl5tu)W3#LZG3n<ZA;rr)qOP1tB97%@^?il/$`u0#JTd(7YBt_e*7MDKgWL+,E.N?4f_H6-`
%,m98Ta#Aa<-?E@MI1b`goC9QV79,IO!D6=%RCueOVIC%Wr,V.s_5N)Fe5i[;Q,S`dAa$(o93C>MoS>ma>U*^@PU<Hi'T"j\3`R<'
%d8Q]20jjTsi@i;!UkeYi^M$L3MGY259%K]K@Pqe];fhGPD2^9flO`%E`8DpV;6psX0k,Eb-`%J2b'3I8,fqg\R*55%WcWGqcmjB7
%9T,7%>Ao3d%q:'7R:"Ym,*b;LZ))*)HujSoSbPdgZ]eB*?oHtC,/Bq32#bctf7V.M3t/P5/UY3GQoY)5o@9G':]^?ZWmf!@hR,_=
%DP/bV8lPYN45(t.+f5o61<efEm8.=+/8ebeF(2W4L,-@i7A5lsW3/&:k_>VFZV3+,(Lb_5eO<tN&&!T$LT'q>:i0?*dQ;`';<ES$
%#:UJVR2qMnJ7n7SS*(+P;!IjTH,77j!)nBmZ(q1(@el6H$0<mSoe[:$F1@V<e7daTp:^+pH/QHm!\f)s$Z+WKQOZ7;rKlDjGlRX-
%mrpuX*;2$mrqP;fhL0X"05lu28`:"Mi^s;E##Fl#<.G"5=GK1SW(`Mup!4<c]O*B7+["l"6s!>Ff5Bc.-RFeB:5oOq"sZ?B0$9*r
%1^EM:4mf0^RT,JG8!s_qLZ5L&cb\J"KcqdlV(<@.EMdf=?q7kG_Fc)XqA!<fGV2]JXC*4'8UK%7q><VVTDmePcaH0*W2W]mg/Y$r
%BGEFpQL.k`mUS!ahEd8);SNS,`ck/Ma$^%8H2r8C:9H2i<MhOiV*]/i#l^\o7GAQtFWql8K%pn<)F\SDKn**1[`c%.eHadTV4((d
%5WIaU)*/u_ir?lOaRE%MK0>T;,L$Q#!o%5V@9nTN&.:Qn'7;``M/MQS<@Y%bk0<Sfanh.I9"YlV2)B6Ih1cb8D<AXYaA?rf(De<u
%@o'oF4CJ;IfR&-7q!K3/)buXM&/@$=H88%,![*#Kii56c#l2uW(jUFS7@q!Z_;l3l7+Fl2>^b,Q;$OL9DBi:CTIh%nS?TNa`?k%C
%<@21:V[/]H.u2&?:WY\);iE";=(:(H&hs%A]V'YH-D6$#GWNh91:Do1hB85YRcKhiRCpT+",(2[NYc'(_JXp]5f;$fs/`1mh-"BS
%(p>^[n>n,o8D%\L<h`oBP1_9I10rtc/d@8jNLATYF9QtQ"opeq!sSAuBL,/4IF'.i_,ogi;W&Q#dI.YUHKYrB8lWRX!/RrMd)DOd
%@`dQZ4Gj(dY%:uR/\29f8;B<`p*%pdX-u$K(r^ZYC6fUF=WinL=a@7J7!*TXJeOj3?Ar(k'R&]&74MB`n8$!jr2D-9)=(HoZ`Mbp
%?_jAoJ15iH9[WD"76H7=ga!oAYZ]b!l'B_XGRb5p8?<@Uk,tXU\NRSs#YF[8Nj(kqU^jON@TD7u%B^Qq%=56(K!4S.^eSAZln)?%
%"k0_;:02^21'"VI\2#KC@$5aeIb-kdi7S.eL8r'`i38,mVqS@P(Mc@];"fe,KJBVD''p`S/@qB;%XP.fb[tb/BG<Vl4X:`hApHHZ
%?A^/E1f(0D!kS8h329\GQqrgMB#@R[#-t7?'uE-YT!`[-0nd#n4)&%paOA@VSiUu_HHg9XhIuZ&NRir+7c&Kd&LE$3?@V*)B%O9/
%&E=eE?&TZ*I<6%K@ul6^OIe4%KfsF9#"4;R.Fng_9+*Jq$d,\/`=`lW5m4jGaYMO:6.eO$U'G0S1;bY*\<AVQcr4\s_]^u[2ODa7
%=;e2:!)2ni7I<!9Z#F;*-Tk7(4g`XXLn#LFPKRD>edCS;XrsUO]QFf^`-H@3@RR\`_@@,SbbaG%s(RP(U`N!KL%1*hJVE,AQ+>rL
%P]&<tY`7V!#2$Z7m1O?ZHm]MglKgQfd[K],!>?66(qP79flbe71pm,88Tu;q"?D6C(=86W.&'(30Y2:'PPT7hjk)]A#U'@9dh=6p
%2]Tfm,,@Y1M$_K%'cg*e#b*h(:)(D#g1$uOon\,uoGHb[9!Z'ehAd&^o8Mj$&)[u6E?]/ZDm/r,XD##pm6GUY_Sb,m`tnIQ2`aj[
%Lc(LOj7/f+&KfPhRKuL\S,a$q/Qo`;^(@AWKLO>E8%kAM,(;ANDje(lRu07%11'08R>MuoHneGB_Q5,b/".&j;q-jO`9?F$W<cIq
%+BIfgYo+;'j)>#CQ7[NN65.tJX#PNX)@MgP9euDS7Wa5B$>BpQ?[F!!%'^[dj_O>OBT@lVl?CF^A4=RV#.l9M(PJ$JCDXtG+c[i6
%dT,.0HNI=_ZRd,D<&cV7k@G_J/2-B[6jnXhOC1B,E,K7l0L`k4\@mJO+[$O!0#Q@rC607,YUO\Fh!IF29a^m]alY+*RLCgi"&Y:Q
%qE\+Ek5_1/DU199/g1='SceLQQmf1KWOO1$#,&7FX3@q<iAgsq"m?JP2ZeW.eHYs]6UT(/\IY'"EZGb3D>$>`'u\!$bbXO(>\OPL
%dGVjr7!oV70)&p5%)!R"Jgc58$7R4d2A:^C^`pT=a/mRM,+l<D]jcE"QbWiqJcZ\r66YWgZZ@TJgmci&@h0djJ2dl?\/u'"A8[c`
%UcuaT4Q?cn0UN`^51r;c-mIQbgukB=i<`V<:+QXiTj^7/8-BbG!255Nf]$ug99dKh5g'_d-cr]IaHO/,SL-!i&N._-@oG$9MmGnB
%7#Y!4Lo'5O]G+4-2a%<,00)Lq7/]N&&N_-\I)RoBBJ?69,JY$U636HU]E[#U4H+Y<ancdP%uCZW((c%ZAW%&'HMVUm5I,HC,.fB>
%RBI/="70S?Q_O<K'7boD9L9]jaQ5Nm,/ms]*/XfBUQ-7#NWMd*4r3#lXIVn39mR/`)2sX^3trH7#:CkGM]<+^3^ieoBUt6@i#2k+
%YSbag!$QT!FA,][=,R-f_82!Ef*'5Ip1J?;SJDMT6R&7$cB%`U/4&M3Dbs,lBiZK```c\JZ_T>+7*6[<5V-7;(1Q'>R0o@>?l\$'
%KMIdoQcU!Yl[;CpnIY)aCEWn[=Bu>OK:Rgr6K4+3^R%$9<Ps'Bgp5.]7!,8YBHUDp%T@)'YGi$:N%iFCIPG*H\3CdooE5/c*R9L`
%[5)bc-6S*^DfKBMg1q6T1Z0WK6t"UegZV^TPX:V2.&?'I;T)*L&)&lZQ%kWBUOg[V+NP]]+].+*CP7Z:"%9?%#f+LM%Z^UjX.KkF
%_=>o<3UB)6q<sc#/QU\$;'>:u9VmR?.[G,D&\0$e>$VWG'p;a*#tb=&a<"`)U0(u-A31K6%,-:bi31a_5:f`l_-GheTl8b6E5PKR
%lU13*!qh#S#(*S5qL)U2lgkYQ6SQr$S8A][Kh3Ud@TLo6kr*!NSktj5P&2UZ4A4&^//2#Z.3`<_O@=d-Wsn39c*doigAm6Rlk@H]
%c+SZ/,]caU>-X3#@5Q`W!b[<QLmk1VLB$>u]EXarndZjE!^@"RQ&$6-0V1V-^/UJm!@CfTaI%Mm=Ka_mYt5Hl*BeLVZC]4W4H#O<
%))6j17gqj<0iOnS&Q0fJLp#^_J6secDm7aTlXnE9kh/@$'Vf;e"iEO6d:CrsXO^PC',r=LH-#Eh]b3.eSjn6!#/b\/b`kFP,`Ql6
%BIi0XAXk+BQZ+%H$nL[TAqXTUcS3V?K2Hl=%]W5b%TmOJPp?`0^Sa(Z2#^2hid8&Pd4<eF4HR&^N9akN7InS\1JS1='ok\+6t"Zp
%EJ.k7WXauC7,pQI2AP(Ec&&36k9du4n1Xn(d]c(E$o-@a=bAgk]X/uu"cf=s#,F=(Or&qb<BE$'fcu;SWCatrScZ_<.Lnfqcm+Fa
%15Q&QfO0hZBP?:8/aS>"kT#rs0L]R^JXb/<L/T#sFs@\Y2%PLEo`0ae:7Z'heS*W)6sbApbd`LL$;geDS&bh'L',p5Z;6(bd"l\<
%IgLL:;'lm9ai"r,<gWpsdP-J)Dj-Q=`K.$qQoKa.Ma_$@7u8(hjk[a4`i2Su?8lq]i/GH?P;bsYA>7T]J'To]2<-;H7jb)KBL2@q
%$Q4dV@e9kRdICaL(n.nRPek;&PL,t8?I\"A4Jm":]K*5-B2*M:<X\=[:@K7!8!\D7?ar^2'2bKA9Gl=I6sN"$caf$]1ugZRGaUP2
%dH2GOBojg3]?VB'=cf>FVm%<uFNC#)2]<5^eW^_<]ZJVN2M!-:@mT0"!i0/7+cE&+6pGD><2.JHUP;MaJ`"h,C(]YO^'Kf)%L%5F
%VS=g62[AV<9o*6IY!Z7rqI;0KF;&Q0'?kUMW1&M=Le%-,QQ[QZ1sq4f8n8(TP'kKFAFVWDg\>OA8pX=Ce?GaMTjHA3KU?.F:GHX(
%:OL<>-"TMbd*')<+DNeI3C.JC!QkhKXK%UH2fojRVrg/hm$S[?@g07+FRZ\ja:CBC=$*jFeD\7aS><,EJVaIt9gOnk1;Da5Et6&H
%m!^?(+ouD46'u$gi'B6u%lAkR%Zi7('dhCG0:Q$1UV-Xn-sY6l`poQreX]FY%&JQ2T+HprhhlhMfJ:QGNp(eI((>ZFj@Dj5kJSW5
%C)-4]F[De+iPD8o0f3ttG`;@!!5mfj(&AQD$d]hKl]@P")NI4h.,lC"D9kbn8Yn_TC)l3s\N56m1/4YS;ATX+,%[dS%$$\ckTO%/
%JR78eim8tO!6O[0iW)8WqPf($Zh>fe$16XZAY8-$@>$8$(d:E<1ZFZ3aT93_:(lh2;goq@K%K&gjq87^.nP(uDMWfS8ZAp[@[^CT
%18kGJhXs9&O2N7kF?E\sh8hi*9Z9^reO'%;A3'iU.0jD#3L/&78tjh=qRrW(G^TSXjDLB;1he!?mZm2jHDk\mk%Bhn]#0ISW)-Vl
%F)it6@;7(ISoD+'K&2@/$X&9"M$,=<G[@Ct2[IGt$N(W%=\s=VRl;!9@?EB$d5IJ14XWlYra!-hVnio&R3@3%;4;VI?_?tb1cNja
%EO]luWqJ'O/IBG2k03`OMIc>j=[GpO8];l#ea3PlafI$Y:^%f_,,V1L%B*)2Ie@5%i(XPOHfPXW99"b+1/fJJ=rrg@M6oP/V"iZg
%7&4om9mVYd>-n-i&Ve2taD!!".Z7)8-.DB"dl5\uopV'J)qdqW^Ska$F<lB@`no[4*]rXU`!#m2cjkTQ$3`:"Q2l+,eF%3`.YT8S
%#&FPKdWU83^c[[b.[#KG4.6\!;3;qCR[A9^aZs&1%MH>Wgo0J.%/0QFX:UQX&7iT6(]ku?9pRQP9VC9##Yrj&OV.]tKVPHU+#494
%hmAk$+K:4O,QUr@)32Od+(E3Z2@(-:)A8Hc$WY9@PJ"4M!c1K8@]Lo?Le+P8i57l/\.2(GGkssKAIKJm"9GZABpL;i5`_HVEJ)o8
%Smf4/g'0;Ro>#.=)0X)_9>Xo1,L'rX5\9']6bsFWP:;BEf:5Y_<Zl>GGAWf7Ru,2dSM4gB6,HtOp(d3rm6TZ=C@EJ@*HVGT/`j+W
%btOEhL/mBj\B,,ST8[G?KG/YgJT+(:#`OJm(A-r`[gBqXnH^(.]M2W32$'j+/HbQu&O8k&#;,/D6X^9pC/aE?a&Vej:?tRt^h58*
%/Dns/pNS<uGp)YhJWGW.,rK4qZ6*L#GVrutr3;(=2qiG:%jG_3M@(_*q@Qf6/2L;2,"2-eDa:K=AkSN`28f6c?&rrFCc8_JRmF[J
%#s@$<&W'*(`0ie5YZ%`=:P'%"Cp5mn)]0$1%a<E9`<jR"WI*j-Qj?4mN6=#6^46iL$_$"i,8&D@?dBHCId?]W%.Qk*nL:80#*L+B
%1tIBQ*_aH>g0!Y#MWHuEBWbh_24Ze%)?@WOh`NL2^:"Stb/BMf]dM?jC?d#iQ%kERTrb[O.k4j`b=b>Gl/*e4>$@WJ22fre:rKq)
%+C7.f#Xtfi@^@A.64;Ms[p7h6-[kt[I0`==N3dB,OX:qqJk$k9o7R6"A.T;RJqJc5U(t1p6e+`A`P5*$-G_Og+KLq@a\Y>q?CF/$
%M8T\\6DEI6i/=\nJq6[>L.%5iHghaFm-lDd'IZ:]N4Uir(+?_+Ye-oQ7=^pYhgB(TQe7i<p4e=Da9lS.=t90i135rqf#[Z-.+<?j
%2L0iFkj_NfWH.g#[M]NN7NtFC'ZDqs15R\8,9H':!#'V"O$%r]%b\LD`hrLSBo!,FUIQ(Gnh2`>OEZVS1h:K]EiJDJW'hdW5[+M=
%R&1?Q)tM[^..,AQTd_>&[*4C/WQBZGYUK.b3qRgLfZg1_oSG:O0`,j6@:fj6en![q[G,2n)nNj\_j_hA_@-^cGrSsBl9UJU;U+`$
%[M@R.O/fnGnh9fj1a/q8'd>;E7]lkJFJ:[<+SZlI]A`9GLr2Mk:X?IY-Lc\8R>JAs9QS&4lfc,"EQg6,f4:Pn11lF'pq2lBYsT&g
%./#n<TEgb)ls\n:*L\fUl[o@+cm)F0ZT&dQJ<L#fnjr[1;no?f*?p)E8uk)\?pnjZ<5J][Z)!du6$:7l#WMAeaRZ&ME!g\@5li!!
%*>VPH1k>sO%c.V7VE!t!-hoUQi><7UcEsquA5gqf6Hg=]!$Xh4c1@GF*W1Ztkd;45H2q3n9R3lj'@UFlqS>Vn0_/,^!%'hP>aQke
%^8G!m="L3Sr6:'g,/q.4;p\5Ie2&SRWF7eA_.V2:1RY(Y6QCH?ZXu^>U>>%X%!r/18U[m46Q>Qo-l,]QeDguR<+ITm;tS^p&PB"(
%W\"ef?:p(N798"`k:=C:a#/)pM"bHtS*X:DYbSUqfH"C2#3=J?'ui+u*/>T4X8?F=Ncq@6h4+a-[1I=1m0HmdJ@cA"Z807n0!>e>
%.fknqW1QBp-m!oD)lDE7?3dIV9-u&b>-\dPPLj]sCQBf]!3e.c.[[Jm*Y,@pabi#.#_m)V(C@Q)?ukA)jj-tLJC5I^bDZbR[0/]G
%kndL?`,mrrf#TiiJl:+XI,8>_nOUBo\=#*d$(p"@LjgU'&M!5Eo7/f_U<&uI`$$mM&AUYB*5h$N?PZB]JZbp:_juE27jg)s\\o^4
%C-^8_/.hR"\n#,SlG5$Lj\TMH0hRB@Op^[ojJ>SpX@Y-k?+MT+-d\]JpWD0C*'<rqE1XZ8N*`Boj^<pUE#%=60kZW1>Gt^LJtA-@
%(YrEHTmUE`\5r\>YgV.'20;&?!B_OCHj0ch(qX@9O-:VI/JJCo%f@=PXZ$JZbaK]0n>9=HL+N$)"7J+d*g1oB/48&"[/:qd:FTHs
%5!Wgg0L/S]`%$8A-Qu"'%`MC:Dl[.K"IbDbR?@*&ihH!SV)idP[8Afj6Y7e\&(H2eVC]"roO_hleN31<c<"$B#oX0F_OQCRg(tor
%nJ%F9)?ES\5(<0,c*/9:IKarCo/WOV'?lPRZ\E96k=8$N-4l8/7,lV3Rf<k03u#01)n?GL>%Bqe9G!Bo&sFO"1TSK86N\9*4VNQ_
%=P0\KKEpFP&>.Dp?Q^p?#Yg305sq.('7^4gAJEA@OBYF6LR^DZn7biVTVXP#g2bT"6IBgjaAFu71&">g4>l8hTa#B=i's,f\3JH5
%h5!;N#F:do4@>?.B$%>d@Wo'n`Y(QAVU`HQZJjp;pr/;u8OjngUCPWdOYM;4l[*S.QK:pE,(-Y\q/T'_-]q6jGiLq\.;LtVlE`!8
%9bKjrWQ"Xq[/nGeln98VW%&'F[gB@l]GHOSj>"<8;D#-YbV]c;b\4a]<[Y6*$*QTB<R[t!20r)NE[[9pJf%G%(JI@o!h,i00<9]I
%(7'Z=APco/n"KG@qECQ5KKrN.U2[>LbemL)C'YB%.@Q(B_.:dt$(unf%lNIS.]ZJZ)%"M4'L9<p<[++=.AdmK$n=3_XZcpjaEUdX
%flN6I2/>AjF:?XI/BoYKq']Q11PR#46dnn`)-R#sP9ruP&$\J0THMe>p;Lj6*QiVXki'f(/F]aCm.ODL25H1KqV;th!_c.MSR>7G
%cpd&oTIIc@V.9oDT4i*V'GqHM!U!3`Dki2Q.B4p&@al0F#O;qhHjDk7e6mc8M4X,C,Juqp8EboHHK]UKa2_cV<2BiiE*p,B!,Y,-
%kLlj8$ZjJm%;H^U\/3*1'AZ/Z8o+'M8&F0B4A6Zt71[K]HG$_]`#daoSn/+\bA:4lpdR6m9J!COi4bL"1EgE5a@nD`<f*=nXa0,E
%`Y50e"Kg9dR`_=Vd0`\N4_iSX`J_N9j<h-HUllq-Jds=qFD,e-'$`YRhl8VN,/WO^0Q70V2(+nC_,[7hkg9NKn,Y'@3ilD[JAX&C
%=Fq*OT3*'g>Mf#V,k*Nf,U4ife*5>&Q;Cr68dC;!?K?<I9F3-la#bFU$t2FI)N0'm<$[,NU+QhYrjo#``Wk!)Cg-\J8Df%bAQBmX
%fqce1JZ$$``rRn/[<plpCHNQu&.O#G1H]D_/`;'qh!aZZ69UEC$kJ+;SkAGX;*II([nlkuKDH//o]^##H*Sq_9n3,Z2h1_ap"ODF
%n%Sh>2t-a"]M3nKrnWXmgI\Rjns`_<^O#G/e[OGW7CH:$]:]%LpQ,=V^Kr(-qQr"?e>uTqKWH6oGM5.-B8k%T@C^`9fOA[0.Ru`V
%LqT$=/g)`PhP.[-)2>NB4"Z^/8^+L`UDT\i>W(6R"UfmO;/(b_8uDh%%d"171m)iF06L;JUT)jo+Pi$V,af9Fj"g+mm-gS=9;nmn
%^>^t;NpndGAeFLO7cCj6$^g]'jJG1g9O[b3V?/N-75?.l^jAQiEg3t5Sf;8Ynm:uW+uJS\nT)6J"V2)9p@Yq=>=d25SEB3a0PT%0
%RJ?Vp84c6?RG2^M91mkVeCA.h4\QZB8AEXDKf^b.!#L@:J,s8R4:BkTFgJ?9Of-a9\cK/ej,=N6-:3(mj$E)@=WTQB.(!Ac*"(J0
%P!OE:gJ,n6Tm)Kf&fRmpe.`J*R=c+dk/<\+R!2_DS,g*nTUct:aD:H#+@AGtYoJZ2Tnh$AEi=Kp"[*dYP+Es\6D+ki%.dO+ZclS&
%5'iTq&$RQ=\;;bAhk2KM>oJe*aU$ZuLrb2%0kPmb<cLA\L,h"[)@Q0qUS:%Feme%fD'E#&+H$In'0>EW:bP?>K[Gi+=nIg7`6\Z.
%F4A8ec_WnVB)<M">Da_s'C;a#))2LcT-DQ]Y7Gs]?8jPg7Y+D\_K[^f.qJf2G_<,Q)1WF7"f,EX#"l:0&4/aIUon%]:1#m#71W,/
%W\m&d"nbU"LY68cl"]:r-P$t/]'G."^[s)C?k<ZAL(/LX8k^7K`%DW3@nrXp,?lZ_ci\D\Uk'u+8777U:7cTb/=Z,t>u\NZ;N8L&
%$.Gne<^TOKNnm]n$(0qr]-A\%[eq<`+DTJOld8's+$2tWHkG<hc<6_IV0P_[9PP/$'##5>'[3`@\V^t=H/:u-q2@nU]^/3oaCm?,
%&jD8?f1\cpEI'K"-m'Dg<'1kD*hs1+7Z?`P+\[n2,"91'/\37E"eVi1JJ`\GkUQ'/l$^fAr>\.`(p0c_kd*(23X"Z'Lk1&4eYFa)
%7f3;"8hqCgkC2^DD3.&?C3!JZ%D&L>"eiF-la^US*YdJu;T&n@.C!N[`mXsdBM[2_D*#>nd=gn')6%d-"C4p9cB/cs3mULh$sG`c
%'=1"XPIGF1FOYpO`HeQfd?OjdLl's/6COA]N:*,.Jm9<I<ml"2p52NfPR+%>jVCB4!aq^?MmYN1ASFKE3XNP`Ad!d!a'h4sQKCbk
%^<A0uao>mNIXF)KFRR$&Y$&->OUTN+I$cU0W0kQaU.8OS<ps^!45b%XgBe7);[iLPHrM2IFEA?C:h1`dNXj+m"C*srjTYoHQB3<#
%%<4<_7lW509J.NcgE7OjP6$NaeL;3Qi#1h$,;D'[<^;@?1@aV%'t>cFMO28C-s?&<gdO`Z5QRj;a>2@o5sr_pHmDV-HmK`+'?sVW
%86q!MIZO`_8Sbb*Y))QS6ucXP`N5mga@oC'QVsJ8On4]<Sc(r)-NYA"Y9u*?=?;rn`k)kOOdT4YlaI>1!H^F"FL%'5a3-XP=@hd)
%j>C_\4jn:9-cQ53,pJ[7Kr>hL-jc#A%'*rO3csLid`Tum"q3*kO;\_[&il%%*(Ip^Uc-;X]SM&Z0LDX\Pmmdj<dHa3\m/QY9WFlX
%N=&DkQ8Q9Lfn'&MqR/.&JVXrJLHh?ZU&_))"./Lr8os3..'/@-BMn."ni"@P.B?<56uN\m!_<K^[Q`P9CE%oHZsWau;6E]Z'Wr6t
%$59#GZoB42)3Cc:8/NBOS7UX#$;jG8D5EDa#WTKEg9C`J"A+6+rA_"gK\T_I!fP;8QUR,HZtt\^Z%M$F$q=WdRYQJs4Rb0n*_'/8
%&7[M2P#)ZkRu7e_<"V^I:(+$a\NrZ4j@O&MTpnH\b,_QfY8fY5dcJcUI"b%W;<!QT6PO+!0!Q76#/gi9/n>T,'S2sN#o$10KH/6=
%&JM=^G3>*Z!6dY]V1D3IB)knmPfUmSY/H"Ws#dP#8rk6t0%^+,ZZQ?l!0@;a/KUB0E]o'c%@5d\[1NmJUtYp56&c@eE`%981K/lL
%N*oHh_u_O&Q_e#p#&fleSX9Q;N0I^Q\d8(qWY&4!6-(<:W5;6GXI3$=(k>HqOtp'('G?En*#6So1XfXah'96HnQ+*;_Xs53h`AT%
%F>*q$3@FsO6Thp%RPE+P[0$QJ3$trcE)t'"`5"K,#*<+r\iGRW!Xt<g=,AU+R?\!a$YhOY[,F-CjPic_q0#X,f77`mlPEYU'"#p]
%G+*-;:&(JNf"Oi5TNObf$aFZV<QU^Z2eb5]8?t$2V*_B'i1ZF$N;]"2]&kE'UHtK1$q&7^KO4rE4D:<7R76$6K;u</$ij-KR-[gL
%OA%=41(Vi3alHK_q8Y1OcRt5fj9pg10]TCA^M?:nZ^A)N<)s(^887</jGoLFBuem^?mTSd4TI8X*FNHYE(EgBcf8VX\<:W$O5oK"
%<`LonUiufGXnV<[6f&f>f7KFH07XP.;tO;H52l*ojWClSmcg]E&;\=-S!@ecfp5IoK4$B\qEuj%ENcCM/7aL&=YKlum&REcR\5TX
%k&n#\J^UPEh]N3KAfAUDM.pt6T3JG.#B:iDkQ,6qMl^S92'@&F9E6par<AgUINS``bZG!*+FBK"3[9NG/WRXt@)\=D'f]lt/C/OK
%$4:$)Cq%QY-(i3+D8kP];8`BTR@$p.1,CTmH`$a;>)p$fd(mm^_X"/]3Y:t`W7bunfkeP8QIstP=4#3D,M(!qf2[bAj+KiPJoQ&O
%G0O&,@>B.u0hC3AP^BsOR:mDVEf*TUn7cut$V2N\PHojI?5kgX-`9+QC,d0ZTc-c1'pQWR*R+?,*5cS^1#-kOC-]jcVe?bX+t[#j
%&-0L$p2h"l-S)N62`q5h(]iD!&jU5fj(r+^US12>[j^*RR]`gNRntemT%QgVNR/"jZF76LA-1)>/9k;J&N-PBokIKj1O-3'Q$/)h
%=T,8\AnB)IUKF$)?QgO2haSS_#C7jKCX+8:DtBb>2%u+^>a76=\J'DCo\QgGB]YaLUgbRHS`Z5b^mqUPb+f/dT[4Y:GC7d_3>bAX
%$rX/qlHFtGB%7!?/<I#i4?2Fd``U0Rfn.-gOGE*_+X+F"*tIpOL7?,g_W'<jA`@#oAOn;rg`_a3at9#@mWiKsi&*!U5X-VZ7<;_\
%6X8")'/1\Wm7msc!sR$(MV8Bog;"N;8qg8M1o;<tH3@DlYT=QZ+[/e-,TTffbJ=d$FGO/?8S]#Z%0\1XR7INUoINYFA[.B7(tGdF
%NH$L+\\;ehR0A\=?\TqdN8:et+F,j2aA32>U(R]j;e+u="8sLVR;%?B>dH%Xk3?W&!.dVDBEmSqn5Cj2@Q-:UaFqUL.\'<[UuStZ
%LP_G%&U`7[9j3tgA;0Ys=?Ub"=W`6krgt*880V_hZQ,;LXXoD5<enaV0h%Bs(-`]LnEM4FRor6!4_0$B^rb"aAB`:>K"6EVZpQ02
%e&:5nmR`NHS0BEJ%fI=N'k_+:l+EcbO&H*"P%gp9@_G(,9u)9H"n/&8C$t["W4%Ri^gu]*aY.n:TS3>NZ`&\jiH=DE7)Vs5rJJl+
%Js_P23;]j$SB;'lr[CD$'hKW(N)V7u3)IG+.80(!)d:F!GuH.e\Y3P#"P,k!d-R/#\!15OQt!qjXRsuC[7V?o&Kb0_X9Z]Lid8II
%,gUTISs=7)lF<5S!o'/!*CnPMIb@D;iZu#8$YO1S(G)3#-7F2Ef-PdZeS.O"/aQM5>\FF3B375ek2]"q:Hl:'P;%S9MX$\m0c3no
%&W"n3I.^5j[L=]EqGd#RCT[qr.4b:QQ7)U[^8Uk3;`/eAGq@2;Fd!Hnd>V`I_m,ORiR7Ak:i%uo.d#I;Uqd!B1_k_BnleRlB"$;P
%FEW9p*1j[0XbQnS-iA\;j4loM#5^K%!jKm$e$Gr:`-OT'"Cat`BjDg=a81oBn.XtUX@U]g)3od`*=M=bf<FWRS4Wo=`9\XLXUKE?
%$1G+SZ<+tf#!pG;Tr!m`_uSmG(.b_NJ=f(/nt\FU1sltX$T/$<;YiNlPCmLF+`);)aBAk-f@\:63sHNq8f!BF36jTfbd(>$K:a^*
%fC'iodP6]g*2t*'kEOecGeoW/[BdZ&`lhgt-:MN`r)16I#`3G[D,r@+jGq/&`_Mrg8VC%d&SeWa@!sOP;2s7LC@j**l$X?_]KaiK
%J;I!OQANi8Y*sY?Jtb.*pNfDZ7"Q:Af]rX'!g$+c<<XR('b4f(/\/f7hpDGf$[Ht/+GHr]aT4[B$oXIoRj9FB,Fh=UM#a93mK3/+
%'0=6fPZ:R4CD5p]9\fh5QEQ`kZOAPlc'r#tP41/@MA!r1bcbP.,'#^0Xoq/(*"u0ci`0Z47"o$-@h!DSJls</\j6OYHmYE6F@bah
%RH!"h!X<!.U;HfOq?n46:f:8g?7p'?XIq*_A\h\_*!">;_MkF9mP+m$/2M!r,#tX+[8^6UX@!l*&S^tk3*9)edk$XrB\"$DX:.<=
%8[j8?N9(>b,oMWW_&&Yk0gt_sc.X$=F%a`s?5S5*@$F`50qg9Z:0.')\TnFSF]l88j0A[j1^Hbs-BeGPoTQ!uYfrLE4hIFg,UC!>
%'LstQ0o0@L7Zf\B@]X*Y2EaXW>r9/C<5#Ctd;uB])F,^?ndra2YVd;*r`t_:PsPqAn]])]ML%'b]o#NV#hQG$(Rs4%L<TReD[Vt\
%<b&5Q&s.9s<]*7@$_4:[QQRRj>Up5oC![%#/m@[T[%=Mgq17)=&DM#Dm0q3)<ZjGuJZT;Zi/a2K";.ReA]/Z[*kuL=?L0r=-SUWb
%pN5@h-;Fe8BeH\gi:cB6NXX,PfX:@!Q)LZ3h?oU8=>+q*@op4)VJjna9i51U^3I'V]c'hW'[>Up/lg`HO(@e#V@2(mD=s[n+p4HF
%qk.;ZRJp1-9Sd7Xb,d#16aBFL)P]:i/!X;X.$">5oQhbsB7VgqSf=;H2Ib]A-dIfhNZ0lr^mub1BPc[9BqdoBaM_jK_6i27LL)T3
%>U[Gs")RR`8fZ@_)I9gYOqa_)&;_WM:D_6r,EAl:,'Q%\4Q=gV+?jY0_\I3^(ZKBR9l$[@LO0qaDSmFMDl1p:j*%b?LlaJ6klsNh
%=01A*GX>u$1`ZE0#[XYo_^djt>WZLV/?NNH:p'5P<4JYQ`c-091Rs:k(_33jAS<U.n78L;N@m=o90-s,iH-'U9=lAU7q1Lh3Ch:)
%B+cbj+%@!j/Wldb0SL2(@b%(_Kem!Mam>!7S8#CID0WpSXH=OTBYm&K$;KD\_HDj>2B:\DRs;Jt,ojHcgnAE+'(37]%Lka7#mX`Z
%o1;#:367m4.UTN8K=c\>.ZG\nEg5*[.unSYWmNT>W=QPG*F;6G#fl@\Pj'DW3&62\qDpdLbQ@,U]<HoDO:DM;71KgZK5O!8#-T;-
%cCGlD4NoNtR)*Rh5^6oG#JDB*j%^#CnKC!kMAI7B'MojtBYhNkANN0e[,@V1MCtf\(7a-rq(hGkKDpaooU6SdqnaL;h0Hj45+p"Z
%0DNmMnq(YdDg^DE=hqE<bo"4+R2kP*7Ug=I>`eiiIuX)?_(Emh9@&J6>e=.dB\_N.(Z!9S%8Lpr\DV.?E-,mkE?b]98HP%j3]T0&
%]WeBQRN.h_1i%+N3B.>Q\.dAL**d]d.sW9CVkRS,EFT5$Tbb*3>-W_/Nb!H\@gD2rC/!B#m,5+,R@q#5#:EY.M[C@_3(]gRR6Y6e
%7uqQbZXO.ElDi(i7Lm]R^-:Q]kItc6=C-!""4upsis^:OlLQDQ=He@nM2[q$1idPIEcN7u7LkHO&#76^EcB&C3O`s[UI3N.)E0XT
%IU2P94!bu5'kt3>2`UGoEk/B`_273&h4o%D'E;Qo^N"l>Yfg(A^2S]l-%MMg;hI/Lao[FPaMEGcOY1HE%M!WVYG./3UIQj6)`]m(
%Zn?er%dpi&(Vp#>%Z[J"/!&9Bi!9sp&RshZUlT&RbfIUX/TsJjmR`jO@]'G),ZP6lAoQ0'EEfg$%3<KfBkIX*QCGs>]OD'M<C%mE
%?Xj;LqM9\?>^Hn&=fB0EHh%P%pi<Z0%B`bYmQ=C"lg5;=2JVaC&K27k53gMbEZ("r*A#pa>ilbW3!Yfi:c2j(`WA`ld?qblfGWM"
%(u1rW&_2]R]s9r8Kbtfn.Z9kK`8CXF'EW3ki'?6Xp=+o7nX[Of6s%=bSlKmO0>ueaFCu<IFCK2%a=:3b8.:N$CK0=`$r68@ZBu)<
%)`K^9aV?Tk]LlbrDTq&&;=^X)%.6[$:t(.:SCDPt=<P]o::=SoSZJ3pl0ONhWA0$@:WWu#pi>SU)4V0TPC+<*316Xc$WLU?-gr$X
%:fbfuGQYO&P;.\GCN26ni.W&=gP[PlOYMJMmO=7`_@-oD)rk'CRDGRgPSpe^KB&4Xc)r(T_9oA^k/IhT09VmVR),JoPYZF0#)AM6
%6K\MR\kO8.0/t9_oA*KtX@cTa>iu:R$VYjj4g&_J^#B2C!tl9])_X0-Zqg3-00!&p'mFK,i+*SIV(TF=%Y3e[LN["n_Q?KJ<q%l4
%NOg;;LW>G1XMtPV\?r'e.D_F:#QEKXT=oGcY2$Om7)(fMs++N<U:[1Y7Qpj[5.Sgsg\7"NKk8S40l]QHYuhXZ/5jAp8QPlfagK^F
%"E6mI6)dK>*9or<FGj;;!A]du^";+fXZ=^NT,!NkK]'N[\O5H\c_K,gk&fOO?6M6cE%"pYf=8V;:$l7`JS.65E#joES9PWeFH$PG
%'+&r\9-/&j;4(s"Btt_q.Bmg:BYZY#jP)U3E+U%fLoJgQZg^4BolD$j1^CTfPm3b4$dtk,)K<&Sk%R*`5#@Cp1_t%t(_fZB,iCLd
%N)=\+!DhBVY"AbeC-]LrJDYD#5?aM>A(A'[)][c]_'K@o)8F;;72L)]ksa+4@+<2j&V4&\hGt"-A#&5<Sc&bP2kD-liQCns[m6[3
%CE\lbG5LC'XPJrD-a4c<?K,!MpFP(`-h)U1pJ-uVF8g(p*RmA2rbq?Q_W.Tui%Wh<46QP!/9.03^Su.odZI0%m8u[q`XVc_#(7bl
%D=l`$1edYskeC87K0&<ErASTX1ed8nBWrtH3Vt`=;aEiTq7k>8?"<nX<EEkMrf-Y`Q"B(W-<I4<!i1D0M^!"Q_>hbP*l%fAs-pI#
%'5ol+^KJEP%'J\0K6Rd:a@cKWZ6$LjQ2[92P3\J$hkY`IF*)!nV?P6*LH55jWANjA<;(57(:bemp2:#K4Y*u'm,(dJB"D,Vs!HVS
%%>4o^2cF>8iCa)DMh/lP-3"1)UDlo8@NtiLW]!T99)_PF2Q!i^no%DH17Y]os(2sSE5P*C:#Sm6-WT_U[#!:\62k``@Qe@;&+h4B
%;oucp9?4:0/BGU%<!UXfaM/%AMd:a+rlplKk.XjdDsfA)H8b>4R"b)Q(ZaIU3#!mHgu".i["'nJgtt@_QlFPb^\OlNUM\fDYT-2G
%ZR#S5\VU;W,QDpXqdqTS-3$FB#qd%Lhi:s[gokKC?>!HGNVaZ=AtT>9mVb:Q]VUnjRq<*;mje(@,JC,3T`.DFQ-iL/^Ic#YlDt0^
%2m\W[?!$<0VD`GF<U+M2FQP>PeDIFN.95YO^&oss9)VJ.?^oH5qO=lQ`.3jD)^EA<EFo,m'ZfRg#4je<./?CYrl,4ee5A0\D[]V\
%=.O$>=a\6p<8)9']d$7$V>YS3H,rY4Dmj[6Y-d)&Tb^V(rFQEtobY!mFHa?@57&C9%Z6+/$efM;3anEGIWN")MH&GNEa>-Sf2r2q
%%.p*%dBOln]9.:Nml.G,S$_'0RX4Ni>1+n,5q*pWBtqd6am$:-r?g>F.69!H2]P&];H2@g9Sksbo!Lsabpas1@jCtb!h7,JkJZ6b
%8G=q*Dc\r!)YLSLCie='r^O59^FJn8U\j[=/+kjZ!"kYQ\A.Rbas3n@hrpI2Or)p2oR%iW0B<%$bJ87"\\IZEQFJa6rl,M*_5hU+
%F*kj$B\_JPA@o@frJbChs-<CaJ=rBf^NhSV#+SK-hjE]1,&"pP9G1hrnUgP*M'7><&UtH*UE2cKrasS`[d;1op_s65EM-:jDhb3T
%iA;q]-5&+rkM)B=E@Z+t)Y5n_846/gbhoco71h0;DjGb`A#n\J.aU$"qhZcD%E9/[ahO8-8++&_rXCqV</_4UD[(hb]Mlqe!MN*F
%YEFC177;S4no$?@(T`dLit8.*5:?IX\49K4P(,:"O@EM%s5l[_D(NcC0e7Bm=7U9W@aaO"no"_9aT&Ogs2G`b?VVpI`cn/I?R,S_
%DH`$120MV&D4`3DDknq0k\N*HDrlWQJ6S+b1P_#NFCkJqX?iuASUHfp.#!rjq_p+a(rO;km2-5oOBCI+PId\X]3tXSZk^Ksrlo7D
%mahj?Ds#OAL=@t,6b&2c>@mj.Zn![^FCP:4=9K"HP+fr^hVkE<IsYi'mumVgK/RZS.f2.UmX](4$heMsCqU5:`;\$/isUeDRie8/
%_1MV)Oh3?/rD@))7WQ!#c&DT?7&&eimZ/:`2s[nMVmS(Uc=D%W$heL>IJIbCC@'hK1R>aDAcHB0R!sJ/rf,&VYnn8U2bV:A:0%,)
%nJ57amrSJH]IkeH9)jm-Y'TdFrAQ(75#%mR<XWl>9)m.?eM='&#3Ki7%7^AWTepfMM>g_Ad4hhT,Oq9R#`\d%/`rqTft[%t,hl2L
%^R:'7$?'GS`\hiP(?FAoAC"f(YN4SgBV-[?Do=?:*#@>ek`cLJb5I<eXT3Mhrrt?`^;5F"S$Wtgmje2nU#.3Ke(DDiJHZWcp2>8B
%PpY9TKm"a#ZCq5`Zg#JdrgU/5<S&)d2d0<P\>9/e=]$Jg</O27NYi]93#YoJ[ibZ`:^Dhb,lhTP@=2#]n6;La6_MJ\V>t7t,X'HW
%"h8'R*U?R]!aGh"krb^@a*nk!;.a!=il&&l*Z;b]:+3A9@fU-c\]iA["ZR9=?dn40!R<6X_2;WV%6u2,$Y2O(cI6G`BT>+,Ng+$c
%AWd,mG#(@#T^FcC33/3UE\&WSBhHepWYFBYqUFnK']A&RT`W>f!Z^6;K(DG4cKH`hA1@bm;nbiWTE%KgK[_LU37\\"[Mf</eih.8
%QPAAfeITJl']<e9`q+c`SBh2&gaKu.$mpQa$?2+\J.cif!DWk3V=ffLSDeh1nr3\jSp?reg:NK@_MoqBDIieq1r(BfaoDo*5U4!N
%!(ShJ3uS2\ghM[t<sEV62/.etk7$9^B#\Xs!%5-$.J5\'38VrC6anh$4"AtI1bjO@4i@iB?iUFL2air@)$;j%8E@#u!(Zr-**A4#
%)rZMkB)LO[7d5X:qJSbW`geCLD^;-aGbD?lO/@B7,l\&_Qp[CR^X:D^@A<`*";m7FZXEdPre1o",Q;;[s559]n'UbjQF,PEl")^&
%Da5L%mMDt^Nl;F[:TWGe.Gr'$eo+(#E7.,"=hhd[a*a[Tq@,4c21A3Hn"*J-:Rp;jf:iLL.DH`TJN9rBr.]Dir``n17e&\,8LraY
%36je2]&`aC_:8(s7/*5Y.+Z?TpcGQA>EXEPC%!CKD[K])A]L1PO^5rK[KY'&+%/BLLqYTCYqgr+7,Mf-%8A/F7Z1s%/($:[&?T.L
%I:MtCg8Yd6_po`>1uBGQ+Q_^:jh')72Nhtmi&U.7Q/`g4A)&4%`lUYNV%S.dVDR-8^6(?4%NG&sA?ehg`9rVo:8jUtm,#\E6jGbc
%pLZ3[7#]rk%D[K4]/No,M(I>nOeb*mE?b.3f,*5P_<jBH_0(ak)hlE_Kl>2l88B!9l^ZTH7roXs>&ONnOR#b8]cjiM@#$Bp]gjk"
%)Q,OIDm4U>V)L_65,8@W2j?!^0%1*>Z$=B"<r'D5lXZm=c0;kQ2'q:2V=PI=9=E\;SN!"jM+6Zf(,G;83cF0#@9P5X][=rj5U5nj
%bNQ(H?W\3q6c^90-hKlR7$mhikD]oc#3^Z`)a+SiW\uVN"trg;:q=6('"($fc.I-BH6WV._!;+K[ukq<p?0`6AFh/AO$H!@o-Wh]
%pO6TC-HM6_e0USC@MKn5R2VVTiGhfu/EsfeI^,!2d<XcF/'_aoke(n5du.P\H/ld"I%'93fn(G]8`u(FDRYVO)_ET\DhQth>t1!^
%bR(rh,9mYj&phI.@%=qCHG]ko5^c5f9f$M)@3Y=J1f"J17d,gIin[6omg;?>5&\=4n:rKc2u*mZc>=,=ZVgj2;If?r23a%fI:DiG
%Bbo,bkflkE^7P\EBnBokpmqc)!JHXT^(GZI2_:bR,4p&a=i(B:2sCd5B\^\?"mU`4W=jO+%ffA4,kQ91Kl;Y$6:X'$7d-si@bMss
%Aj0,MNt\3G>\LC`<'kMV'3NYo+S97o,u8X>(gSmY2EGc*.,p!i6>n(,gdEWc2n`(OgF`cFd9H/G=$COm^r3.-cPrI=Ck)\]2c3tO
%1</L:L*9a3YqV#JJ^u->2j89D#13.X@H-U'Sb%-Un0\c\I,9Aj9\2O9^8'1Y2fA,1Zauca;!%:\g)1@7"edmQ7hLb_6>uXd"OJ'\
%[obVkTRJ*W#*L3*O%SVQ\7V08]nq0;>B<,Lf"qD,CP:OI$H30dK\gr0L&dNmh>mEj,]8:l(]r.qR1jnAGsEdR&UM'h]?hD.24R%f
%@.XZsjI'+R)81mTqij#V]nt8A+)HnmBOPkY0mWr3V]WT_oHq/idXfR)NL#6WV(m9P39LV$bo+2tK]7TQ.(p?pi2oK59m<5YImN<n
%iY;fs<(_(^H_m'3.D6UbUCjoloOdHWaE$D7k)L9MbW4kYk.V[1U\*]'kc52QlZ=@qM'\uWZ],8W=&*\8IKmY-WAdbpSI6C4hSf,X
%NLdk.]]D-5oL8q&]`k5kQRqa:/#>22]a#mh)Q!1F(]PYCj$sp%@1uUg_Lg4*Bo)fs)l5JDoXKK&V)Lti40r?C8oNf3L2is[V@uVY
%Q:gBNhc+o%$VG>>?**q*PhlaGq_V/rdmY=VFu-&gVEocJSOVkgKRW_e`p%o`WuldiImIXbAVIr/`HiG".,H\0W@XU#=]'T9YophZ
%%SJ=-,C'hKS1mTFg"'+5LU]+04OhrF9a"o^/5]>c0^'-brhg$(>Bq%1,=%Nq%YcD>bp@C4Jl[s>h#S*]`81T*)D/-+brdMmG0%hg
%J4*E@e\G#&XPkk%_@Tn^>]\\o\h9*UPQaXq4fTopSkO<-dYfqHoKg,XZ@Jm9V>t-m]c)3\ZUfLMl]eedr/FCY&8K#C3*6b'Z]jkk
%"K"?Re14K?Ogd<=U<k$&+t'r\[$^j?BX)#m1Qqsg@%ms8>_1'"%3Y6!Z3URVGt?#EM3)@4W0'pfl5c/G(Di5[PVq`$Q.TR1*)4)+
%`U(\>+B9gP?[T$XPXs^=V+6H0@\M=5EHn37*C)XN8NYWT=Q)cf"MUoQC1'MPma35@"QUA[?ti"=)(d%s?KFYj4&daFe89a^V-2pZ
%@##k`$C9*MRAjlA^6,Ch_M^l&RWWCFG[E%6>,+OZ3G=9"R1?IDU+oIQ5R7I.U!Y:UBSZo=O!&p,jAoh%l\_ps3!_4U1Gl5Ifi&f6
%<j^PQ!d$WC;b%NqOp_9F8-+Cp8CBa2N-^J1!a6IQG*_PWOlJJ9e;B("B\X9'DL(ssILg8n^7kT-cU)G+Z(I_Ei;ARd"_`&^BK<;m
%#)q6V@1(4/EcU],45,Zc%#jiVEA2oC3-,QS=q=:V6n<HTAB1m45%k_nc+rCTr%2Ljj?d>Hj2\!Hc-l%&'o?!hWTIm0H6>F!2@0nF
%W(KSgld^&8nM4T?&^.0U[(lo:"8VZn.Mu>g.Nn0ujVD5Q5e0iZ?4rO5J<,DU,AT>;8MRS1N^GJU/Y8!d!\<Ht]CVq0;!A:KJQ=K4
%l;lI]PE$pY;`X4WnB*dgKOBI8^df`3Z'u1J9g:J8MB<gBJbqIm\_,<*e/mta,i_lpW?(BU9LgK&<YC0'1;0G/N4^Kqb=T0hMh7+)
%!U7.GqN9iA5]'bro53uME4p"i5\X(jJZ'>p'Tf>),aAJS;B!S/:8rO_ktjVM_'4AJ54h"[\\SG^`8H<"mFG%nAc.3Ak^[-"21AOg
%A"_?9nP_RkmQd!VY?C5``#HjVF<"'(p47$Jl<c6%LW7M2=a+7>YW6tZ)+MG+*`S)01GbsP.E#!<"^3mL@jMa2gB!rZUhTXnZG:'K
%o:n;I6fA]?B9*hj'!d3jfW\l+RYHdIQSKq0Vu08ZW@Ta@Cj*A?h?;EaiR+%c<&!p=*8a#@2l@+"5Xl+e^<+fH>&P^Y)!K2KhnTi/
%]Ret(FFpfAGUcTV>3uctMD9mS(P6@Ta>e"c^`)E/ArL"VTM2p#97tYi7lI]N#W&nV&m%nlAf^MSPDRG4r&DL#nZ67uVEfPbdZ;!X
%5@k+$Y"Jj#[I2gJGd(?1=;s7uA]E$DF3"T=E(ECf1,<3V%24LFle,Z1S^PfOMPp'YOSgDh,mCZ4f,ujn"?a;.X'gb,C;YaX.,M1O
%8TBHMKFO'=M[TcrKV<1o1rarsAreJ^c;Tt:i#)jf>*u&fT^a(%km1n$-RCWWGgMjMb67EK5e=?DI%BQWE'-,pVt6:n+Wi*jKQ/#+
%Go\J"J/$b0U7t<AkU,S`]h&3u^^6jeq!-pZ_7/srXmPcmnt85s!Ybp1E<?!4JIb"`61iF'IrqC^F.H-`d?JPSoi0q'JUdk;)6o$N
%.l.14ao!a/1TTtuk1od.LQ3W+*t>,8nI3(8J:&[`Uk(!7eY3MS$H3&H6OoIQOHd_?(8C+KKd''jf[At0E$8R!s1qg'DT/>;mR+.1
%DJ5mq/^,pRb/.OIcnH6Sm1(Y)\q$H9C'F20Uf.6qd+m[6%V0=ke3a*^C6R#-iAT[Y7osu3q5%Ilcu*q&BuGtA;+'9rH&^1k0Z^nH
%+HXCV\B63/ks^BRA3@5`q-:<fJR8)@'in<QM-fe;3O(l<P,aj`1fSWE,6rd!PhG<UJu"gqk>"XaTrHHQR2FVGUoN4n+m1mUXuZ]G
%RJfgYhd!X,b(Sd8a/"fW,uup"e?QL7"YLPC5mpQB6O,\_;-AK5Kg:[$.+9g#,Voi`;''Oao[`NTjIG1@(V"Ss2A:XNJubkr;QS6c
%7c$Kn!3Qj=Glj'd,X=:aWis\.abSS*;)>X+MQ,`![n#PVRn#:bfS=)r_/-i'?T#ib#VN`t;M.I$JjVErh\t&UYB%;%.9?ob@q5[L
%a)dG%X]""0GGR<W@DI1Wo%;$Mn!36qQEHAVZBLMN"XJjNTq$'YC4/u%g4552=NP;M\5R56C10Z!/T;POaA5DEB]cU\`\F8\CGs%[
%U3![q@1=e&!3g0ToRkfdH%JmV*'9OJ%oglkF07,`R6+D30*n>JNsFhg*bYQ;%@a1rBDp4pCu?IaVW5ee*aa..aQZ*^`@3S;VG:V1
%"H-dqD*hb?a7gUQFFd&+b)p-?e]f.A9"'R"B!U8=]C6t6)$Lf5@=E]BmTV?tA/Z9>!22VE]*$8..*(JY3ma'[Q:p'"8JR?2]0J/u
%,m+O018tFqp%-'3l2)U,+7X,2JSQ\gW#RWhAG^gSci949o466>bOO+\d;b%!][8!=b.MYb26.LX4s^OW,:_aNCj&.31uHFJ!IYHt
%d'QbKUQ/DAFY;VlHqd#[i7g!\$6%,5aI6LA"@RiK<0,TRg'oEe"f[kDPfp!7-GI<<Sb[EX@>9hs,hPXl0AEI_f4]nV'#cBXKGhU.
%c:kkXXN_k3:g8J;[NZ2=_j*P*-#ffHWr$5J1+Pi?`;W+HW2Wn+QQqQ--f9Q!^%ak"Fk+mnd*GsE#J!;]#?.hO>\-JE[U7N=mntMZ
%(<I&A+J'C<L+";k9EdDJO:0@q"pL0u#p5NX"!2.^/Oa;Cc$+<nkV/DKdtP#-N99Lq#J:'q2_pD$?:+!AZs#.?F#HJ<Jmf9hmga8i
%S3:">=h3rS$UQ)`"*Y&2371?^(^[A_!/da#S:q_D05+aj:#"u*E_2sHprKZr8\PZ*J]tX.Z[:oP5];'kl=3n%nd+q]l2dp5/E]M?
%`3a5FkYAc;0Z%Mc!.F3"4U`PC(_CXZM7]ECB'e8TdOXTK\Q+/)BV@a"F`9^mPK':`Ou)=#%S0CYKsYp:m=7O5a9l%"WI<]r;9]n.
%OT?rPVVd,Z/lTJs$W7ni610hr=f)X:G:%$H7659Wj$bO7ZpYVV5ZPPs3f3PWF"9hkRe75ZXVAj6b[JQE@kW?q'"RS&i&rf55i(+4
%2Ac`=Fl7j21i1ZM;o-+9I04'h39$]n.tPhs7u6:-`q1"fMc9ns=UP5M$+4Ao@>n5U1M`Bl!N6n5*K6\*"q9MY&3FNb5tiW,dTXj1
%l6T(e?'nbL@6ZW(WI^,3G.UqA]pa&cMt*L;7rE;PZn!_\Y\EJM<8%T9aogRO1_A;,$gWbNf\UV5)mtap7!dJ#mo%%7<9bKN.b[d!
%ab5p@lP&=$!7X;)!$U6ibe>;N&>#If#>C[,/<h'8Sd2$Lg<FomA>%ls8'C&XN$"M.0rs^c$^H_L)%tFIjbi,HTG"\%s7s69Xo1[E
%eV19Z!aPi8:oYRir@jd^.hHaD_7Kp;F*A!3l8Y6"H)tm"di+^Y1>Ud%N!3.dAmlr9-7pB/_0Hq"L[EgM0eX&V&)_$!<9L&L?WoYH
%fcX<;DIU:NfVIG<@U3JY,c5$;qA25)V&Ds"\*_GJ!a(]"!SplAr&P-.IK5NUlQ3&>OM#iZgoo)\7&C\o6L%f&mfh_0kice303\#p
%;"p2n)j57H20<DtZc/]+fP::QBTenI9b:#B+bd9?'$mXNmgSeV7LQ`_BR:sUPMejTeE!2Q=[4cnqHC1li0Fr.`C,INSWIY[S/<h0
%I$JHSDJN"HRM=8q/LGm4`\DlW*;I6c^'QN:,i%<h^]pA1aWX8FHk=Z>=qZgRM+:RJ37F7:>'@7:VdQd&CdlYQ80KS<8peXG_b);5
%/RPZ(!*3"ndah?k0@k0tL'4PMbm8DGad(4EVpmm>47[HLD.fmN718iZ!&mSsa/9Mo>5:3ceAW[9O@3jFm1B#&r`KqT8tlhQb&*`;
%Y7j9LFRHG$m0TVp0M_u,im]T8P6dH38IT`]-)=S8-jST3'n-g(=B]M@$d68JQl5".#mi>/-dFHrM?K+;in2[k3=&0.V1Y1-p2dMF
%=%Q2p.KG/V!7LJDA!,"Y:lH,k7F!@i#aA3nF^e7W(>T%1$+n_j)(thYk-8Z1G!h5npN"g:_GC:f(*ohS[phodiP%_&_d;]QPa.%Y
%Ss6fu6D>&X6"GE0es`BUWM8TF:sJSkAugLbPX#5aetuAf;*pQ#%[f=O%"amgiCM\cK3Gc8]r5R:RDQYZBEAJ\S-o,k.(0[KK01n=
%SZ(=@dt[20dm1d!cjA\+;@*X&i3$OQ39NDfEX'^IMo`.kjZe?//?"S&)pVogS7i4:_iOtXWOH9%i0RtZE\PoRCu7PSCj;YNoa\1$
%Kf#K^KL8274b;d8Zk+s"(@p'MpQNF9P[6D-E-@%Q0T7(?<r1DWU$,<T6d<Bam5>m5-Bd\VQYTW5XGOum38S<]NMBY_fQ)o=4(US;
%d/)_$EWjBs*!K"H&gU,oe0IRT9)m%j@lC`Yg^5?F6"^6ic6nN(ZE>&l]4tQ#4glV31m8T/K*V"3(_%.n!.,oMLE@c6P=`'7l)BL_
%T[)iOJ[A6D0I3EX0`Pjc&9'd/R+$l4+7rMD`+"H$<uL/l0Jn`Nbj>LV2Gt6^Kk(YJlS)+daT4(hd\ot:I7D*O=mCrbYoLSZPW'3T
%Tq.soFk=!<O^X9O,0'AU_`K-%RgmLj]aY60"Fp>_.OR2BMP]L/IGdgW\>eA<m=@=+Y_%ePhp5J6PVH7IhJ14[f4`Vu/i#:07?L_@
%TfWk>5Y(e"/FI=_>52j&)0cSlmo,-CZ0''.+\Ob;H3RRbkH(k,X/@%g:j82K.3XB)QuN5s<SnYEM0K9@?%=%pK#<^%;[3M(8jOdV
%F(&8V1n#:X;q4:($]2er"7r!,FF=c'kb)jjH8O3[c:OYIS\^+8ne;`mcSIr+8[4OK(mSj98N;cK7;<'Z+$;JI:6?AdV8`ieD:NA2
%&p]%@htbL>U6L+Qa`/VQ^qD%KZim0-dR%T*a6:4G0IOu$LJdM4g!1bdP!JNR,"\UZ?12>]#</$7NfQ$PBtZ*ZV./_JM3')'kYMrY
%k*].WH8193S>-DX\ONS/_k*-QE2J'3L!2=[F:P<g%kaZkNb0aF_66\fa.'A8Z)L`X8(ER\VaO.SFP<d`hZEsJAS'eiD)-[))'sog
%]3,pQP=)?2Ll`c4)rZ#rdqkOe_SD4CkQ'M*H'aZ3kbd&$@Hp8aq8c3[*HfLA,?]/RZjW!)[#fQs`skeg88XMe#>j]#q-@NV:HO8<
%9#+U:/B?sb?c2%Q>71V&.r?7JMGdcF2c.$b(*'=K(aK)6qaEC8==tY^GE#JfH?!%B7#cfP"Pt]@T)_lh_Zf2>O<q$P[!.7D(umt0
%a4OioUSXZ+-7-_R'0/j%8T56/OiQI>;-J5S(Ql$*-]SHt[/*7Lo:Y/u+YL^R;9-HR'tZ?%oGhub'TthAj,]mC84e:sg^K8SaUOX"
%;o(j(o9>K_Ge:5U#s0X2"[/OB/6\tmhI9nVei;,UOAhB/q[(T53B0B+"\u-dnUf$-)M])'4JksW5!fYO6hhW7kB[9qGor=06&-2"
%KE;a7<'G:9du[XkhZVUY(-eddd<(mjY".7X+.G.o8:N\?9TlK?du+$a)urekMp!<W6tXR!bR-I"S`S*=H_C2iOj#\8&82,ckX$,=
%ibf><-Mm"m^-U_0^3V?P2J=F?6N.oUfg9l0fa'+6'hsk6i20hs@-4luKn@]H!XpE9UfsMuJ.XaO>+':7ClrPK$6IXDpYpb!j4Lht
%dWZJB"_1b/nnM$2JfKWpj4!Xk^`g32U%.^eX;mV0PEj'"R9Y7R(eVT7E)6$J0i6Vp<HKDeM[gFO!-eoaj_T[JCnBLZUX?r2m^2gS
%[-8a6!:LrY4/b?Z#k@PnWJOM&%L5S>n@&B1BVT'bZ"Ial710m'euaVr$"sg)cN$7oYKF-R5Hoj(%@0Sm.8<!S4;?a7C:!ZW0nfXn
%^c(gjm<jN0)Nu@1VubLBqZ0[o1`UX`+P.dVfiIAD?D)C=%UE&u.ank-B1**?7R<Fo5(Kcm.9c)&ZmnlaM]YGM5u8O3c<tms;;/.I
%MF@TuCcT:ij;RWBa,QX<,YW9"rK2"d9T<%bLkL>k4H\]:<;H_41UKEgoB5bg*dOYs+o*\#`DYgd.[YuPmiYVS>t=$(VL"na.PV]+
%=F6FcNoQt(I]8-IcXW>V8t?T3n?R.SkopT80HL,9"@Ft*&JMLqHR2L.8ggL$'2I\SXepshk83_0qNM6f6Bk`;(l51='lQ(C0D,%/
%Ps]_75k?8qa!7s[P9hT+;4lh3!2M#H#!S;1*_2Tp'rnpP1/o*gCZZe$Dku]55nMee0nuDiCrp?6p4NF-CT5B(Qqu"(-W7DR;@VRP
%MO5@<cOfcKZ*>`&$^d/tCOC/]<C3Q6;d$EqoYaWK5lRGNlC5a@_-A:hE-;E)SUsb3;C:[$L2TgP,je<LE2&!MQ+$pLRB.p/^pL)'
%+pheH=W?j)?Sl:%W/?`]bM`GcNLJYH5t0;h]D?OgF"IB]+JM6)OQ[5nDBfR;B<)&Ad"X@X1ab9$XNC%lcpDo?5_Q@XU4=JR"%lSM
%b&rL^lo5!5'!4ZSj'64'29Za1U7ubP.#t/VRY71;.qD@<^9m494XQ:9B`J.p-kF`uQP12C3,KL/W!/*98\3,RbL0He-q[kfAkiu"
%9*hbR[L>AYZ,%\8>9Wg-6#*(L:b(]]+-Ug[BX+1"3doO>8JG?"3c0CYj#SN9J`$O4EFQ67W!&[D;T08)LniBg)(WK&.".?PT9U!.
%;dH"CFt0e!$PEQZ+K>V%WYP^b.Q^bT`nue]Pn?Mj!a<eR"o(.!C$_A47tF8F*CG`_%C((j0_BKjK-=rLUDRKb8fT0(DsE=h64(q>
%@$K2M&p0X@eg=Q&SP2\YIlp^IH53M,bWmcgk<uJ&>'hU6LV.6Oa2l%=H^4i-$#pq,WubjNe,Xi0iaJ=,U6-#JXSN"(g9rF\#`1+-
%oIIK@K;4,B)ZH\ZHQ3aMe<^+@SB%s\AYf>dZDJY^,3nocN(IGCACGd#nT1mc@o!=2n&geT\?b&B6]2<OE5I@/;os8#iK?Op"ta.M
%XWqMq2BdX,^lTX4nq:jR5r!mmR#,bHBWB)a.R85aj-c-\bpA--EdiAhO)9Fk7+DgJ,p:)4N_,Z:aEF;'jJ:jg]jqc#L:sF'8+6Nn
%!ALV7809GJ7)54l'b]:1N(fbPL>"@<1iW\=p02.um@Je%62e#5:J\/jO/g5@RE5]1kD?Yfh?23k5o%B1(<+Qm_ZcqP1O)bPg4^Y1
%WL6:=,Np\?jX_(S?_Wc%OpJCIG'NA(Ru$ZsX&mM[K,B6.K]fl\oV/m+fRb)[<,.3EU"^-&9U&mRmY]0,`U3c[m<63B.Oc`T&Z5ao
%%!5+>1SIr&-Oa+0q0TCh8Ua!+;6mnq4b?ZW<1SkT@)sV2a%=qX9e8>>"!Z&9X,q'6"^7_h%FXN4'&.Dl7`7(SA6e*s@SeZ"U,%W"
%_Q!4=C3qXDS=6*qY:q0n@sOd2]$@*"S=hK`3M^P<&smh=\h'Aka6G+/m42+.0`Ft03m3"71"EQ4M2GKMn^:/h#]'^^"_'pbe'g&V
%_)I5ipeW/T-;)WdW7eLJ'OsbTPYQ&jU66c`8h[kh#5HS4VB+KM=s6'1W-0P#c5u2H>.eitN^<#aBp/468-/(!+mgrJA!>/qfs7A`
%Y$"H_X&Oo2$Js2sP!%fU"fEiQ&#T*%5t>X102=3ea*<nK;1L-qX:3%G"3u>%bUB4uT->j2rP.]Y&Dr`3!uR\*W@H*d,$->TY`p-)
%\-=4Z`[iRtf#!B$;r-`+a$AM7e7h7u)fX<>bF4OG,s@fSV=$_hg^lo0.[kj__PUiVN1"dc<f'V7`$Y,0Ak>bul?&nL7/YY:(_T%d
%`B_VrZ9(R]6",f+N,VCS,I+5Kor'.,KjX1LK?We!3j*->-P?0(,NZQBjcO8W1O)Ee8!YfTNb6rt&g&H@[D?ferC._>1(KLGQ<LGe
%<]1_%.La+P5UHM]W,$2V]qnq[1)=G8:a`Q-Z'<LdX$n'09YB\'6ReHcnD1Vt1/2K["YWUZC<.Xf8'WtW6.X@J7-('[c(`(7P`Cfq
%'#CQi54BJpA2IbRXGg_,(=HAR?p%A[b=d=r@Kh=\c6X!SL`G.j7@Rt!l$o]A"D%2k)`^?Q;<(e;2i%H$$j>3l#-kTm*T*(OAPR"a
%au"L\Sg5(ZR_it/X[EQ+,"G]sJ?EmD,Uk)0`.AmV8MH"8K,0_ggqBp$1^o@P+)t9@APl5:2hDR/AiRmc!7Mkd/4.LTkt@2Tp4Tpf
%A4@%7WUb!;de,n]gGO]l2H,5`%V!cI1Vf_XhHW"n;ZXM(AL7n@1+,K9_$iXkDN^\>M)][,XSW9++i*m\E0-Oh4u@QGZIf:Kc-hGc
%Jb\2<]otVrH.OeTX0SHS31[]Ak=9kI'&=nV]53a@Cj+586A1aR#UQ[9Vur*<14tQ`]D(;e6n=05_!O6b-GK'$)X$Qs1Ps60r&>p(
%E%i>t*VC/r8&pbAAA\Uj*bcc?fcm=!]EHg<7b,bj@:M>f+I3FR9[^^9(#r2/2Db!U1Le0C;]E/?lqjGe;^tbOj9G8/UceaT*i`Y1
%"4q?'a"\"pb+ol+`']ir@1OO9&-d<N6PnhDg:0"@VI64XI7:Mfd!>0I'Cl5c?V?S+;*I,N^+ILqJ^CZT4H\(%lBf[;M^06`e18QG
%7qst4(19XOd=h@ZOmgu#e;GW4$jN43&4:)4TQ;ST7uIO`]L^ZIH@R$0BMZW)i.WE]Apku60p7,!;E7/VI*:e"9mrmGh+<J2jR#,c
%:,JoLhD6:ihb#(ZYZm;k\oj6\'q74]0<*?DBOm[+T"Dp;m8t2N>nm+/<\N*#&@j**%:94I,mdeD.bAi]B2t4Um#j8\\(2rN3qcjm
%OF4i;1#i'%aPA"`_*I[;=F_U4#36*Ngl*sgYX^T-3!!6rGgHO;Kd1lViKa/4d2PcbL_M4;\e;oo1]WYCcN+#\D:WB"!<AQ+m@\mm
%7;^1p/_I<2?-#ApeiZI(De=6&*E%NC9=lsn1%.g7:R6#rhR4SB_\6M\5A[5XMN+,0o!,>1]TZe8SL*okluM;HR@NH3kX=R,?t.lh
%F&]@U;hEO+B^&CC.KVc=5mG;a^^A^)e#cC..Lb@_%P4#&:^qtepdH34AK7OWhANO7ZJaZB6VWK*+K@Dt(p@ZAPOW5h#t;YciQNUm
%BpuS.R8V#rq^=!WWa;&E0O(SdaG+G+KBkgNX&d`MoDm<N<C0^(X%?R50Tg.[U;j:`pSWkc$\A/Sqjha5LpXJNrTp6MdpNajAiEg[
%!Q.2L7F+ZZ;>dI.KdXKhH4Nnqd43(+cQ=CS>r/2-9]Ad2-][757LNqa/cD%ge1F*->N<"tZbrQSg;"jtD&7dO5$F()>!/V?7A!T%
%qBK,Tkn!+@JmP80&dL?*4f4q`;Q63BI`Uj;jbjZg-+.I2Z>C47Q#:"2&)f6-\hFXj@"&4ba?[W>VG:V1""DLQ8c_=&I1++f:b2mU
%OF^RVbsRt4:p<\Q1WU(pq`ZBUaas-cofY:3<eP+p)FZKmKt/e?n3AZ0"#ALe`Q8d\I*n0fK='\';]qhUrM!^(lPMY<[laHFa)lMT
%oC*?<MGV3eJueF=*rjHJ6<G5L%J4mr%XLU_l$>W[*@i:Bmn`?"^klK0U?"eF;CsR8SCro8>Tn*);mek'*I4b!p?(YbJ;K*YG[pN'
%+Vfq>ag^OH7j]R?OMc[E-q.#`G\_$IZ/3_YF,H1A<@$i<$^ZVqhBI%tj]H#`"_*Rh!6Jo?#am+8dTZ2mWEIK@BGHpYWulsqLU]o0
%1!V&-?9_NiC9KQa&S.pE5tP+]En/R-C;\9%B*kT,`ORN,`PGLtZm@1n5NootX?b2fEpN6h;@aD0U'_Jf\6;3Y2Bf?U+=2bc$2d,[
%V9\"en#@8B`&VJkS$31<hC-@ak^jS=Q41)B12)R\;iQ_c%!U]tW'SMAjJ]Je+tPrL+/N*n(>5rp&R#maVd+MG=q[VT)ePcVmckpo
%,h!'"?:$<*mgtFN&"YXI&eNfbgj!X($IAM(,Z8<?-VF^1CRG6\/s/'09JUNQnJ"]k>t2tV'H`MBCeUk90WPN",3TWC=9sbVSiniB
%8V63qlC"EkQemW`OdFJ@ktT_A9]ltY'Cepu&PBkhr/h1M@"hi"UT-p'!QMi+!eFcLbKg84ooWp!G$d0'?a>&iSo_XFpo'FDak1'N
%#HScr4n(_)J-IGOqU*q&*(sAnN/pI?2uJBdi&+2H)tU-56XpU9!lc(`r1$=8Zp>ge!OHeP#2iJSI#U+ca&m+SVXN`.7?-D2X=0tg
%4gfs2174M#'d,4%NA&?+^MMRm9M:Ei:+a$lkZ^T,Fs48T0OOWc0P75K0I&)[1NT)]HMH"bZ,([IA4Q;M__I&YbdqPo,7Y_kJ#$7&
%V%YGr@[V.1SVkh!*Sq,N1\LOofn'`cjSZ)0)&,)2OY1=]eZi!703U.,/V"^\/H1I2[Eq5]g/HgBI!5kLP@[R4K-;)6;%t$LUq_kF
%hdYD8!Y$]7G06gtc7Z+fnVk8CJ_g]?GH1ONX>7'Q.#[+i/\Po27o6^h7602WZ;g3lbc@geI)b!0_HFQ*eei(8@YL^G]*(.;3$k+s
%r<S`&HjSk_PN^:LA"-q3]YQ%(`QAPmH'Q(d<iVkuSnn1/e6%dc8P+&"VD&OY$@=,^\WsJ\#<RWiM&!#\_`.\mF]:oLk\ldLQNeS#
%pOQ&0$F+8a6Vu<oWo0;tVL"k+CRp/(UCJ%M]bHWZ@""^m!TA4ah$!;*+[Mi"2K6g&RM*[WRF75LR2%i]^FbTYLuo30fQ;.$KAi]C
%ImXc!>@LkCJio$H)G+KQNrWfe*`Uo[JSqp'i"_,",q;c]O_2TIINI\A"dg%ei*V*MHK)]WG8IBq;r&6-)l_JDI2UBr>?E5)<;%/5
%m0/rb#UPo53W0d3>sYI-VZLl%Pq]*Tq/W]uYqcn\RQ?O)J3c>0B[L!YgQ5fgWB#jsN^`i03:Mpk&G/T5[IJ;9TF8;#K$Bo%@$J[u
%osU&<*gUFs[TUjVKKCJu'==Nu7]D#?Kq+@3)A.Pj]IX;AV2RD(BW"\V%-KRP))J7R^%P.3'a[r,*11e&MM33G[3j)T^kV#+Lp.Q4
%>\b+;CK&5ci2o,X@)ZZFJN,&61S6s5K/F#%YO!soeZMgV.M#,f7Y;ehj>DToJ38?@Aq?Sc&c,n1KYsaS8)b.h(5tfcVm82I/.)f@
%Q.1(q_1g[O8/bEFoqkN`DLk\18dpb+/?ki]D7WJqQ@T`A"G4KiEuPsk9StOq<;&p1lt$n''jCo-K;TIL<34>ZZ&VpS-c/_85'd6E
%1CcLe>"B%_+^"tq6g+e*G:N<j,:KO[%.P\O3$9TRLJ?)E;!oAWAP$i8;H>d<aF\q5(h:jA+GZO3Y>0AfKUP0lJ<jC9._,aOf2/\;
%75B8+%$VX6>E7FJl.],kD8IVij#19jF6lod@FKT<("O09G[[Qa22,$"Anf+q)&^dD(M4593Ag.H"r`TnlRI<3RBq=)=<#B[c)g8+
%<t=FGb1.?u5]R07Lt>NcOM]`(Lft!7Pm=9V$@X^EhZ+2W'Fk4Tpo*DK1blh*0\4XH&<dgX4d&q[T92)b#X9/b#Y&_t=Z':@U6M=V
%Oe_^i."`BSm8f/KW_Xd2dWG2g#b*X>e!]JVE#-jP!YJ'_&YE&#8E;.Eef-WacP3R>$=#;7+;hu83rK9N6onX7WCiPZr<e9)1Yd"^
%ABcGknY1I:b.eR0l'$A94-i5<P6pifD]&,(Zg%ZE8dZQRc#J\:@Paa]'iG'OrnRVY*eHV*FCh%GOF'"PfE9u0Mq_cp]Fnj+d_I?e
%eq,(`ns8%$[TH!F!pD=XJn@ReL%A;jT=g@XCG5B;6QZO@c(_k<F+^Y.L04mk2ti`Mi[[m/TKNB/JVjj.4Z7Z`iQ$%A$hFE%3!b*Z
%CD=;4Rqgpcm,CQ:@)WK$ge!IA"<C>pBA'bS"\F^MFYFspMZ0>\P27j0"\Qae"r=hJ:'bcnQ*!CT@>ZH521S=1hUFeb4Cg@M>!,Gd
%"t`5hF=4A)JN<5L5[dT!(tC-)7EpbZl@kIp_3QKe:8Ct%W]<f.NK.sj=WoBiL^!NYcoE8hj>;aKaKZStI)uD3^I[%FE^2rC`M#hB
%k`q'!`d['<oNmhFXgc:&";-R5S-*DWggGM`[>c2.5nIQhqk3PC8#tH<+%&Pa#`QmBf1B[b6osoUog2jJeF>n;Z:\Od%6Lu"O8qk'
%,(,hsE`B"$Js]*lPhSRj>oFQNV6YSP>s*F^PXd(L.A5OKVmm&6OmfdNaul)t?pmeO+b_$l\X_XECJ]OPN++P;"-8ghrl#kM*XF3R
%L1i:@(HalDFoi[h1.e\n[b=2^"h2C*W*'h"0]S9P\&kh,ULPI:c%gU11FP[\oR^mn'];?W^su*^Z3t8^jiPT]+RI-V0*p0+V*^&E
%HCq8bBP.`/N.t*C3XOU[a'kpm)25S:!n>jV!sRB$9Ids"M3KCM>Y4*pOR='`],IHXB;uP?#l&A#/tndLO!hGi/t;^";SNtSYHZUj
%F-6[4WE"*;Z*EHgjdHX6+BjDqH_qN^8fP_l@271qnkjZckWtlE)Ru:V:E"X<OOV.'APJ%AEi%)A#o#0_h'q69Oj?;X&9#[S:-%[(
%dtAg'#eE`RA8OuJd:1!r8=ROG"U8^[MP>@(Et<*/8^.[@,Au8tAD`ee#W'+1qs%^ZZu`G;HAO>h[#VC;`Bg5WbiQa)RFM@(X2/!_
%.dCDs8!D99qj4WdOV?(qTV'M&At$8s0C&=GDar(_H6mA.)'!Q_!/r/@^_TNg)VmRAOSgNMLZhZE^51a9<LAcBU639,Y7*dOPTpbT
%7Ll\rWO3L8\oDDBdED^bMTUhLTgO+N+Iu;o^.I05RB"NY\<aa/<=hn$PQ^L"ZO'+:8,[R(4r.E^(R8-.3/"T9c^;V3bc[bX6_1>c
%=%p7In9K90i:eX5LZP%PlK1'sHYk.gab'Lj9,T;_7M<rbZ'[:@_.(B]eQ4#g+.C;#`.C_+*18u?lSTQh6#p&,nqaAZE7c!m/IWO.
%WfI<:SZaeA6iC0o^]i8uQU)+'U./TnOiEQa)$V^KM>)s&pB3#IK?91,ImWmE0F3:<ZFt.H!X'9`ciR^G.\T6rBh?sTM3]RY+uTn$
%^aqGYVdRW0Gl3tuea&a1+j\.s!e6gF]ti(m)@7@B\l<VM>dW:f'M+V$W4+*D/Qt3Xmnb[6fbu8s)KE-.<^SA)pJJ`X^tK6^IM$Rj
%Q[%PeKt9UeN[PrA2M4s7@;AH=@*hdXXhG;6/=oR:+V3T)(5HfE261/",Zg6BLH2M-;*2U45Z<fi7Z'rU-lN=$h*RLso_7b(A=>e\
%N[2k3eu^_k-s)>0#Ro,b8>_(kMJNKq0ucE26ZLJM@7C8d,*cT8aV<D6XG@*@@mENu@c5Ap<TRk:S%7U1(7;Q7FK/-3Pll"n@n!O(
%a/458P'JIl.u@2Z,b0t7?qEDQFCsc`AZ_'!aDN",_X<dQY(F$JUY%.hP\(X-RY+/_S#g!o_GFC$jOq)moT_:.ic7[o)7q4$;;mag
%d(qu-:N"TJVhirK[85fo<LLaL%KSoMCu?8R;>MeH$OD;AGt1,[6A=n;f"rY46.-c'F?1r0m?N?#p'\JG[KZQbR7IPVfVfg.Wc8(q
%V]=],141'"^+XT^14oS"$fU5=9>Cmo!TWfTIQ=l$<buNnFRu5GmcTfXFJ>3H0i?AAe;?`3VF3:m[W]'1J@n?NZseV+N/XF3aNV<]
%NUIPY8GmTuC-s4eK\u2l^J8%8A<Q;e((r)&aFiY,4"I[+0bXMIK2M[e,euf\4tk'A)Xd[6:\]&t\A2W:[SR;l8G8$eWl7OHhT!it
%b*:QoW*No$.0:0E#3i"Y6cJ5e`,.44@"\$o/LJ/P@#J&B5`TH7;u(rjU^%JmQpa"aF.68NE]tpNJCOiS0t6FcQi`[)Ug!P@Ub9hA
%:E_#H<s0:W'<rj74RF/%A@F+2VQkZ/!=B,UFMj0tngqV9V9$%1YX(Z)?9H7C!FsqErcY/V)29Y=-9.CFo[1Md9i"_h4bTqAe;Jc'
%du$\.9=L+Lkd2"O0*.'RcoP_h>SC103X[nkF<'ea"$K[eX?jhTA?(7A3)O=]^D'YE,752ABmJ+,72iRR?S<RRLZ"79?(+9g&\4K&
%ZhC8VWqm0Ao$/)DaM/'=PcD!IgMmuS5?hcrK^/q/@j@lqP1f^l\n!#$@&Ene<.AmkNA(fkA8'=-7==Mti12D8ajpd?SRS*!?)<hj
%b700CDnq'<#2ek6LEG%W>FW*i\'tFZ!OUq('A((>_m)\\#qRJI#.9>uZ=@8hOm<a_bHN<=>Y>7"Qd!C;C15P-?jIXd?HW/*dM0jP
%:JNt+BJJWb!C@]F12Du)B1`tjT`XBq`=MIP`4]SNgN&r!P%?O%R&#Os"*G2EJ@>T3!=:Q7b+T\ZDmqL:QW:Q@[)YSsJio@S=$1pg
%YaHYJ3oQ0%@iDs<C(OtG3X'+Bk&*599FhAGd`WsbP##[98n+"2U(c/,`4nue?4(XC][B+N7($S$"i81t=AA(Lru@8!7q0Q.K[C;W
%MA2mL7`lq+&\I:i8e#>?3jDU+EkpO`JK$*711&4dAs&+k@,ee!L)uNBN<_!RL9ZN&5_d0VqU<8[]G,-#U6X!S1+a^?/=hbeD#i.6
%Bc.5%a#8r&?d_$dC1ab*pr(h/lq_6AdRcnZ'X0@g2Q>YsAhnCuFZH4-[og>g(7;aN6"'dV;=QFcd[-t-1NRW$L%?,uTddb_/]'.D
%#4Q+f[^[46A8Y2>3Y?`JRY>9=P>hd-O*hDiThLV(pL67h&=N'/ctpMooZSaok$*kC)q(annC-I0NCI-l18ZPIjAC<(;%K%rK?.Yh
%^4R9#:V&E6,*a)okgPA?[b="-fTOYb8W)3do;)?h\u!aa;oKg6Z)5OWj-?oDWFjn*\:%Yd_.kbr'-3a/EdMP.'mjuA9Q$6&?mS+a
%1QE7SL3qV;8a1(-.-i]gd6'*6edn&qT.M;8`dJD$9H\D`8MW*q(dt32/S#3?FB5R8p+#5K!Mm%/4?.JS*?rY6"6g<7?dLR1@15*\
%9QDL=2qikT<es?%Gl!_/'GTB)B8JCoZ5F*1OuuYa<Q>*0=R<ET,eS_0(A]75LW*hLIqFUpotjp90K`sQ$P*tK@l'V[.7!M0p'i@e
%cmMJbTYV6j\%Rbu-f9[n_b>JkjTBZ/`;#FTD=n3fEjjB>JY7!W_C(Em;^`Qpn/.nVc_=E!_,HT6)b6:p(-bl=HquH;K;[iN/CBdY
%"";;leO&\[XM@[?*Fi`=<S-<(DIP[YIh;)?W;K`"EcPid7=0qoq3_iqEsm!h)]ePNgIXKE-?:d+anFXf=rU/2ike(nMaT-dX-H,(
%a/$=ZA\?s%j32/`[$To#1I`8>!VFCS"@B+6Bc5[G6=,`e)\\'PR8QQnd\oJogV(;C,K'_L<5_)i*c_O[hNNf%0NT^Q2'%%2[7K/+
%dI4$mMRO[$k6lA<ar!%2=QXuJibUV='SK-$K#E>?n5'>OSKK79:o),!oL;tCf(+$J/\9=d_cdr'@%qOPk,-#5S"q^N=.Lt*?M`Sr
%!Dq[(IL-66G!:d73:WrA.6lBH(sUj)a3ep,=`4^4,1KpZCMD4#9k^'DF/4h^[rN8&[m[$PP<I'-i@fJ>"uKGOr/,0!\J@Q;_-35&
%LDD)pZ#_^PJd,A95)Ks4A;Q'U=W4@GM@"UE%i`6:AmoGqH/r.\$'hLBk/8ZZ\LK-nepbsJ#562V:c>?=EaZEM?HGbNKZ#MnFIjnS
%9[*U4bi$Tp+>@T\3jm>]UjJP6TT9SgP6`6Vabak%6NM*&+<JHJh.P=V?u"PJAC5+o/2<pqfG)g$'YqTdqc9VOAg/MuY&JKN^d@]Z
%XN8,B.dr`dASq-h7FddT#cKVBS6a$-`=t.NENo3>O[iH=eg`'"hTV+u+A'nUX$"AFg2!.oW!js-0GFeeH3$;iC>JD+=jVq`Q).!]
%%7i>)LDp[27ms<8W;TP;L9j]..J3KakD<Fd<Zr[=+1N?-Bq;t/(iK`SeACMTN0"q_#U\[t:.IVRBHZNVo<PJlj@g.e-Lf#.%K9II
%0T\h^<ITr'jrP:4DafjDVhr1mk1P%Moe6CSLJ=;7:_A.&`H1JWDaPL,."PFiYY=u]1o]`!fU\DV;7gt_O@cJ9.D]i5R)FMqSf(R&
%'4j3Pi)D\nXBWUJcL;CFMLnjTadcd/e&Z#p<f6!9@4[9+>1&AL*`/(hU"l6[+K9(g"dt.7#7#pSecDjEb&fpr!W`E:F9O$4=?><e
%*G_f?PU0GK&>PO(-oV^d+s\6IIR]-nQbM'&GgJHQ4:K(q;113@LN-E4<$oGS/Ht!OdrtjV7N/,?l$QHP\G'UX9A.W;1T2].1ljI,
%MhZ3\/"1f.e8/N&Z9I9+](:p:d#aOYCl99b)6I2B]Gp8L6p\h]-I%3U@b*sBNC]X<1Su>"%L@@Ec5?-I]!fb@dK'FtGTP51nqNpV
%NG)0)2HU&._-8Hkk)"F0CLhVa=9iiE-.iSni#to"DI5>Eh;bi07W2iM!7LBdhpf?2kTYDHbX0se.N6c.E>feD[q:hQ3iscg`Wl,I
%XBI[!,U>nV.gq@BBOW6TeLB#'$s*1cTa[e1C[["X.7b-0.pn->11$>&roW,dWn/tsB,R%VU)<K[,,eiAotq=+qlls<s4W7hJQb_8
%oVb)=":)Jg//7Xl82l*:M:r!b95YB`,BKU*)u=f8D0-5E/76(LWNN+YkE%kpM7^;X*qJF6)dC;OOA/)8V/#&,6M74\1.gNb`#ZEG
%.GbM-oF;h_GaV+,T3;i#5XIie`Ufm7nI&J^(55YmZc_9MP9+&>+bV3_0haWQ\=6Moe%tX_gY@Ml?@.s;K#bdNlBb$JJM8l7_M&7:
%\umdge%e>,(3/T8"<NQeI[h,A?pRdkK-pl<a@IJt\H![5Y5hjoWde*?(d^2Tq7CI>78<`@'Yj-5Wq[T?6BHXL[-t4LdG:eMGF@^*
%GuD@D5s&Z,k/)>B"&DYcN_8)g<3*<K6l_rUOM)lBAo^\+k)h%pSCgj6NjOX_6h7C=,QfVmoZk9$-=FP!]lSu1;.m4mhDs6*NY98C
%]lPSBNcEhc]c2QZJ",R@2FiX10-oujYLJi7GW0lt1,cs1'RNZ%BJ+Kf?nRS1f[T=[bQLGU`9uP-TiQ'1FU*DJ[XOLQKE'CfNiaee
%;,thhG[_=r"WQ6t.Wbn)7=`0Jk75\(>([3N]+IJb#VfAF46N'Dq-<%,+U%'+gf3\]U=Xj]akRVLg^N7tbT2-dUFr:`h!oIDJ8R,d
%Z^//GSXOskakZFJW6no4l^SoYcb7i=F!172%)d62FUp/fX3f\PZ;A,21C;tcFiWBkf@Zne*&rQ7=O3i3cmnkMWcdK48d6@bXZNm<
%qdH1@=&',,$C]P:,JcOnX6*T0BNDmJesup#!Ca)jfU\5OIG,7EF4#g.Rb/VdQ<5rs`9om\KLDK0efD8l,'D\@ef>U%Ul8HqmMn[&
%.)InZ]*#s8Pk[r<NXbo:-?Y(_R>/D>\cXl)8Q2,0SHCNE#]W5tcEY%6%?oA6UL6CQ-`oH8LF,n4IBI_U-k>JgWB2KuNA*r[TnPAn
%9;t";@$<sl9&5WVMpd9"WB3W'6#88UlAif#<3WE$G:X;VcGicI%O"k`Tf/`/7tk@YDOT,s_QBWB?YJ8HmS+e?[-l"!f;C`Fh2sQ)
%h-=^N3Ju+7>.SJ)3J9Mnla>*NF3H6/H.'9FjPp^0UihHYQoC8t4QW2i1b%68g?djSclG`:66,RGN,Us:m[MQD3=mXu[1Kno'a7#Q
%9^%M4MN!`uTf]Y!68L(HWO_VadbXP"<U!6hbr&@seZ8JfdpA=-VB/]B48!^HE&rtLCBhO!b03st^C\!:#ZFF1$Jd_^3G>=YclKh.
%/%HEVG?A5s1cLse<5,:bgiVsHH*L`^/TgEBJh0a1lJ-rC6_U<UF6<ipjg`gN"!*UF#=%J.JV,\-[_1n\M*uC>e@?f\Uic3%k76!Y
%_Bu>/SI;\8A']ks>R2Z1=,$(h,+A'PFQZI'6]JF+clH5uUhik]mRUYRd]A/L*OlqSn6Lb9e:J(/d+rg06Kemf&5k!Z6?cgO;_5!W
%h-m&n:%(F4%_K#7aK*Z.2E`-Ua_DI"_pN$8ga7.+a;ruqPL,jF-"n2TK^KhrNc(5;mVn,pZ*I2+Tf]V:B\\:/Gb"tk9]utAPj/4l
%dh6W@F`ESTF6*ApBp-#J9TBCrL7XL%%T@P7bT4H.[NEu#i3=VacpHk)4$OShR`ldIBhe;Tbah,D4qYa`EsIVYah:F2cGB>eG3^Dp
%2cuYh'tFEpJ=r.;`Z9GH-;mj#488f.V$)n,XWK,:FWk]OeZ+)H[tF/TR@6h+%d%$arJ%m(B3WH@\/fC:kU(#US>n^->hKUTEm-/=
%_KMl#V<1_,[=b$kb3+J[*C;'R#Ht.NY)CI#?)lVPR<eL#eIF0k3oa5jc?48$/QD,a*9^-t<BGu_JOJ+dC53"MQnMG+n3IogXJ0kl
%3N0tq2=5)&Qls["C'U%n!a8UQ0%H&1e[2sM_*<U0r92!X\2d6q>Y<_d+D+eu'<m+C.5g4dV3f9I66Zn48BgfT-)UqK_ko>i)uC(E
%3]s&WWum'FTpJ#^=_hFa*Y*_^XX$f&ZR;t#9^cr$QQLZAGI;0\=cjsOR,mVTXlgNd1c[Wn+VH;rU"t@F7b4dpjQst<1_[4e$o]Ik
%WS*ER(H]]9bmoKjaFgLmfqEXa3_`W!%Rt4@/BsWafobclbU"TJLBaLoR>]b/dF8l"S/k7qh'?UqWcn)6bRUgMjf0Y?a5k0b2E7b\
%mTGR^OL'#14Jp9SM3ZbInALq*TAA\Tdg%mlX;J*TG)j=2Y!c3pEt%@,)e*uNTr48*0ftiV9QsTpg#579jA!i.SqA;@WgK?P`^.Zb
%@Wo!DkW(OU4%Jk(&2qJn*)dRBUh*&s!p3e;Z3-5lP9A[dbDsfZNhHI%Z?,),aQ'(-kE&1iKXd^eLLuD$<\6D?:rp.\fqF*Cn"l<j
%b_eNR4L>oNPI@VtG)i@g_lt\6i'SLrTrM\e(d)kg6d#tJS'p,mQ5s/!<6ItYNdS6V0,If8%PhpM,oXaa:i@fYV3Duc&k;D\PTBKj
%<*qL34'34K.9^K>3Drh;rM4#f5X"%an!(JoBSdMTSapc+B8UJ!app#_^o:4TNa/e>[$aS?nY)3+WD[oHGt8iRV<f1IC#+N,*I=_R
%QE"IC``g/s$RIkkb65"@G,.7<Zti9WD!B0ER$?rBP7OihG&[*\U,=5Y_?&AYk"9g$K7sn=,s*)VN#5V>4%E$?5&CSYTfK\@l.A!l
%orUg*cB35!DlD;KP#eK#;R+.*]:nO<'g)&oPB,G``K&3uR&c)b>H!!W<UA?>Q,oeZ*Gk"lfgAcYcJb[h@(B+=6aO;7Wf3JV7/-RM
%`m-l%\@RAg`Qg1j@C^H\5_@lR.Y5iTm!)7[<3^L88aNEi@]?AP65WX9.X$%Cf)77%m,/^OD5O>c\S.3=9uYD?Pd@YK2&/242H&tF
%3d+WR;SZQ$fV)HJLfMP,]7Jn$WapmE6un_(,s*qVl+SY#Tgd7?<O*hY1ZL"o.6G2M&kG^=%NS1`F+5?E8(T0;(c*U&Vf5J(V!RST
%QEN*2ZGQqrS$#B:EJNVFW)@dKd3JL^F"'2XNd28C'4C#N*BP;OSK[<_NZD^mkpfBINeI7&+C=9aiCIHR:t)Zo?q,:dWak4Z]pntT
%NZEB;*E02CNZH,@iee*a44dPF]IIHI>ErStL$Sfr;)<GGA;@WP`B.#("*&lG\>j*fkl@>6[-ZRU%%'c4Nl2*?gR=EKXGtl/Ygft2
%<C0R8VI^"":RYfobDloCAB%hefs1I,$"-cV%Zeu"?>/"(s.egc[HshWOfWYb<Gm16c&IFC*R$)VhbD9(5S!I\R[+u;nL66-d'?%/
%4rs*hAHs>--`C?P/N_9n=UT=G>'@]P#YS5J44KZsTqZ8S;)tA+[,OEq%a>'TX-fG&K::nD,(Z?X1jtuS`9_.A8,B&/B'1!3kE$Nl
%V'@'(m'_V8S_u.V(Rg^372ra@0?!3JI]M,8M:iIO,Q^ralps+m><Z^F_uRM"!2te.TnSFb:!?@tnc\sS@Wn=X&JtK]ZQke=F)_t)
%G,.TH<[K9u"@L5]X^ZJOpoI\%LtPYT,EMdKB#jakcC9NT*@f&QZk/[n*Ee#XQ"#XJ)j(\(kUja>a?&CoE>#T&[hf3/X-ap\MtHU^
%0fo^q:d27dfs*Yp!piq4%e#OV>WA(V@u8t(-T*tZG#:"IeEj,'_XCFRm*sI=8^3:)Wb&>F8,=9HNLH:VRE$T%2-7+Oo0Chf'=1'G
%\\pY3QlYLEjLNOSm-lm>=&q%;M2;Z$,\DgIYi_6TG"?&fP^'95G'k^A1FYD]b\L',V!M367dHsEfo][3Ajb+SUUCk$_a;S-`3$E;
%WgFf8ihf&u$9^,-KcE\.NdbTj]]4dE6g?8fD,R^(qoP!=;mW6LNQQ!0c&T(49Vl'ofo`5.$:g$RM*/+!:3q'r`#?OJSfN&O=BEuD
%lm/aacP5b);1XMlO<7ad8+J;/TF41MnnYM^<RFQoMPY-HG1[U`aWsZ?N3Yf2%?mG*7>ki`<'`T<&'5*J/)!k@6A]f]BLf%mTpEH8
%VU;/=Z;@p'-TrA[`tWAMrjDr'dI)0R5Q%0<;+8+f,/5Z.pG`*e^AQgK/%_D_#n:8@l0@iGd\E;[WFsPYrV>-uj`P28o#\*7oI^*f
%Fo'/)s2Q41Ist7DlB>TR])=QKq!5]pn`?CG?CgW$Q[OA05CIkMYQ&ukEEW;2=a@jLo<7$,S@rL3aq.mOCgM2Zc2#>ZlSB!]5Pk&&
%?/A9TM#VVh_ma:Va+(f!l@5FshE8Q!GPS92j8%4iB:j-la*/mIn*H@lm*+?>cYq[sF7JA6)dQ\)BlWfqCoNc(li-#)NdZEVlK4QN
%?*`e)eX>=mf9a7_q"C2@0AXNO3e+Q35IbC9^W\WLk?i^[Z_AuC_JOF.9kWlu@e5'HF18dN_hp)Ed/*=[Hg]UZGk:A"X*5@mQ`"I,
%O+cqIE%p",Ds*<"-fX*fI!,#Rm.]+Es6!\Pq3hi,EW*=,k9'-Fjh!I$5.ruPmVL.!28=B?IDQD?\6IQtDr4j%fbNh,gZm)Ge`SmS
%2lHD@Xg9Xnj`Q&9^KC0.(0@]pD!pV?HX@:)[Y`</qTu)oHh$i[LTPruo?2nRcIKC:f-`LYf.4SZFQp6rguhc-Y#!CCE..<E2s7(h
%%&Njt^G(m)GC<+D^V"JH>kZ'RID*;'HLpOSg[gnWbN0t^"auSi?f9PN4aVVLl+rWH\8i\7Q&>lKDR1hu=75"hrT"Q8I=5"0q27IC
%S\KS6cJ/c^B2<rd(#.Z_QTOt_#@HoWb8ku@K.lt@I5r+9QC%4@m(9T^cbDJcFnP^^#[=G-5'u>U4S)@agKE-bVsWs:Ua2i,"O>+(
%m_ISH=2-oqmbDhV<`kd]bI?$*Y:e\fG>eB-QXH:`^`Q>.]mY6VEr#Y4hX.c-]OJIc>-eIJg>XHhV@RIN^fO`.!S/i`S_q,`?GCr9
%G4V<UYfCPXcg9CmY4<<q&9$H3^HOY@qu$*I@LXBg]R3r4m/eU[Z4p*<0!;AWoD<IopW"'4k7?nTW9Xpt_GBI:gMbD5s8;<!FgI-J
%i!O*,SUPd&ErG"_o'O]DjdKN3^1D*Yldg:LGQ7U7lLO:=*Lq$#;hq,-?!XpKN;e1CT`"O"IE/^p(VB)9]6,4U_tq.jbJs>DlMU58
%jZ3P+5<dq>Hu;UMV4Ff:C%ONuOML.FFQ[Lm7m]+pM$`PBQe=<ikAa@Z?/#B\*"2eV%m65/$s^0W`o]M&RQcDlojQ*h\?DN_5.KGJ
%%Vtd;Ir'+o3k7Ghq<#rTc'j1R?Cd$N/Qi".PCD]@`f'GXcVDdSoahXhj*j&*O$S(6Zei.d62u1QrUh$tE\FPcoaC/$IZKQd(5FH5
%6cI&TX@;ljEg^6=?!TS-5!/Z1(#bEF,1Fktj0%UjY+rM-50;:!@rfU?b.=cP?Cei8ZOPIn\+N0sSR7ng$-)D,TD;GabuXIFDdp"f
%^;hJDV6*q7=4c>YF*2Kqonr-S#MkKZ2R`53fMgG8Sl1!iR_kH0k4S>uThchuoI2?[(%IUg=l1=2r+DK,I#kUA=+,g/?PlSE\poFQ
%\>RmU.l+=&Y.FY62$X&om*.arD?%n1WI6dOp7.f6^)W^>"C#)WZ/).4-ZP*J=rFrE>k-@%Bsfm(nX@biHuS='.q14d^,`a:4M1Cd
%m,IAR*G0EjQ>Q<`2_2a%O71un>IJq5r:^'U[hgEiB5c'JDuP"Pm9Uhoh,4-CUKdc_(B=4"2s#OlZ$Ybi42$L;qW[Y7V#9#*b_WrO
%n%MtVWU8"Lomp6r\%0Pm5gep?h`')/H[f8m/TuQAY:1gS9>6H%aN+:]qA#Rsd&VWI<nl`djU/fn"9M-_h@h]9O2h+WD11,[T2@D*
%poGW_d8erd`p8o3H*>OI0%M=G?L7<Uq"jjPc'j+NZ>K9pir&B6A4:tFl,gp/+0X7k3R9>6g4EI9Q<p[J9!>\TL[-`WG:U,.=0Knf
%cG*SkRC,\seZ3T,<q[8mg=CpQFPXC:ZGP[jJ#3#25HtG(J#_W'gZmkA`V1`EXS?DHqRJVs?>1eOb,ot*-^X"7<Z(o;nZgs/#nXF+
%)\/8a45lj'5,Cr;24`D:pgT:?;-&+"?!eFE1)&aUM[$>Xp"I#_Pg_uPb+@[gXSGckEqJ^D0$4OME_g^QT#<q+C1Za\0$<EWb!fI^
%R6rUL+W'8'3,P6t/rKN0jJ&a07!ANNH;_:%Vb\`XAPHh2`M25`>a/7G@b6tC;p@`kI7h$uCHAdTX8YIUC%a9ZB%=A<`3-AiDn4cd
%H)i^5%UW]Fa=6iG6[[Cmf]F,8.K73Ar7@:M,q$p'*uH0Ta7F'Uicef,ffEQp7j5n/lGiZ[QC5Y)p6^7[+83)W6ZC]0%f=sg?e^Ke
%m<@0Yj^>5S/T^:f+8)k=*Hnhtp9&Qmet/,2G1b=T]@noa=.;^5^>)&&He4!_`=VssOR-9W!"[9:n]Rjq/>EqIE*,SbA[Ig\WB3^&
%Z4YXO^T:$uS6``YC[@C]^K%_Xcd)Q9G4F8)aU_`rU#p@Hk48?0X0^F@QhP8q/i'-74Zg4Mm4-DFfsTT2e5)<q`iWZjfE5TOla&NO
%p[Vt`)_oUlDaEXYE+em%d,dNInka859SW,"KlLKe\a*XlQr(5tIil3sI<XaMq;:"*q>[(Qs"=?Ge++#>+/d+iHQL7<(ghI21jW>o
%IQrI[]:JlT<C5_mPJk5=428]jr[kZN:FtY6EdmEPDYE;@dI%gm?bQ:/l>?(/s8;<!IHi3JBA;2I?I[j!jY!b=m/+hOnX0-m^dVH`
%4'2(5^,2KO+2Se![hX>$YFg_:\D@,oCGr5CCiQX>\N[e(k0;T(R]Ue;:<1Cl_L$;qY4c8slAYX3jGQgnOPIlA`$<%ahBW1D.fBkI
%ha@<c2rhYW+<K=G\U955*oaqiq!UMqj6eRBM#SOU^PDUQ8$F$H!VY?I.kSk1b]cPhP9%\n%Pcj.bkD\?IC+R=G%uH>OpZVWp"%oQ
%'i)[BldtU^T"VYF/4\d_R[%s[Nc"IWLU2nsX7%.uil1`FhqXG(St1I6F@?^!DqLN/Y[T,4GQ#+?lYC.po(!gYqf_q6[>"+'%].]=
%3Zqr<KP\[?Z6pjPHU,X^#h]5%qh_XsKtV\\a`\4BP=>N9f@OYJQ_,$Dna+_F&>+H#p$$\`<u5L.T3e/'qXj(LjRV0;p&RD4#3F,;
%2"U(.r3[/URU*N_CLUDnVj%-EJ+N*j5(1/aN`!"81/.;oF1U]kYsE7b2s%Mh1g\m2]pI3^Cdq2;HZ05Z@Agqs\)3dJ(74@`UK%e?
%.F2GAXL"K_!j]Ieb>']@He[HVo@r9*5H9@b/I14q!5';%QNQ_t!+$/Nb5liJ!&"j(]7=#e]GLuCr8dpkm'$_@!+$]K]PMLZHocO:
%3s-URD@Y!!,=kUjB];m^`6L_$:T]fRUI.N*gmJX_'6s.-aX5U2@FrUJeds_*3n_H?mr0D=f]nmq;<0BR4C`@)cc:t8S'OjTn&=#l
%LZ8k_BY/^Q*gi=<j)@+71%"Jh\:+P:q/c(gT((U,N<]ZbVo?IDM!oXt?TPDED/5U>@X*bos5rCmeb9<2R\s2O^OgUn:mJdO-GeQ*
%Z`aptI!+<f]#_thkOte(RQdfL>NJ;c]f^IepUY\LqX)rF<l=U`X-Ho[^9.2qZ]Djh+5k1eh5BKGm+ReOWaaWd&+/;KmA5U#@eVMd
%GO54u=0&XUm(2SrRie"2G<;EDXSF^1S?5FiCDUlh43q/8d@E-Qr"`$%Fe)WE`;ael0m:DIa9N\pO*mD0a"`;rJ7G\F_Z@g1=\j8!
%f),Qh38bXcp14^n`W=+>i#"P/A&.cP3E_V5p=/-HV]RnkANQUtf-dIT-Pq9D3a\)/Xns1+;#C(UA=FXDTM#%FjR(XhYL!3o]<f]0
%2)b*Hp"Scd)Od/=GAmIc^?KjB8u^tiDlZg7.o=0t+X4M1qY]LRk4ChOG6)pG]"ahDXSPbOX*=A44nW[l5W#id6ph3NTmP#*/b0=P
%3i$+i?bKUk'4/,LSifTaV!`J])UQaZ)I)]GRk*VMnij01>n:13G?T`\.qs@gcXUX@4r3YZf6>hR]t5]AB0S\u-c^\Ab,jHB,iKu2
%Sno(?I9_od!@WA@UAQcs;V+(6KWjXaq!u.>o=[cm>4m17-L#;?B6HE!CJ>V:G/DkU6Y>$N+n=C;L#Q0EkNj3%Nu<2XiZF0!Dppm5
%pi=".bH4u8#B+KAX6&9a*PAq82n/;=<`j#?Df5;STn>;5j5/RTbcFu6Xg"_kgkq[Dgpr&!GAu^TmbGXL41K>:GAaV?\b*8a\c6qt
%p$1l/P;Tu@me_%*^<PO0EmNMSnE/;EibA:2:JH@JKu7sSAD"WFZa,+1:LrDWSlapeO*TZKfL&u%/U$RHCgJ3<+CdK@oL89]UosWf
%?X91lro;HP2-kWWEdE3+_geh@G2M0SE3TVD[d1@ZmoG<:n'*msfq3[q7_d!^gWNUhjNu/Z1[?J2UO/Z)o;&L@[q$%un[/"urRT.r
%XjQe:l,bDB?ubkJ-JF>`R2G%DX%TIWYOR$!n(:\0^Ahd['>]CESNhJYQ9Xirjpg)1hhq'%\*pJ,T:DLTSWq=@%h@r%lGdQVf=a22
%edKqjEMAZ0JnsT:UAVD3*hHZL[A+kGfM53@qu"^N<Iqo.jgP$'9mR2;4<MaoqX$:=e!KB0HiNUj?\Foa903:Nd[E7""p`=ZMgOid
%KP^D&3`t?7e;cc1S%*mif(ul8d'%Bb]759VFa<\Z%SjJQN1tr%oF[(WK2)!S?fZ94_g?574ZNfJOa?OZDDZaZ4QYE!3r:6@Z/8s`
%MM(gKpVk)6*s3<rCO3,I_gQ>aM`ufb[]'4Gh_g<U\D@,oC\FcXCiQL:\N[e(k0;R/CB(t.+eMrtmWsD0pWpm<o:+'$cL5m!%u90T
%DeQb333G8DG5ZAbo,W#QE*VuT%Ys)iDnnGa/j@\s5+IW0Il?^>Jp\+Kgf:-4j6VKso0#;&>O:I1GZka8:QU_&.20oh8ZfH,q/,g[
%.H!Hb[.?Ai46l0^meX-<o'dIVJ$/Tlotl,ZBfgfd]f@N+[t9NM0+P*KPe5he-REW54hHWQlT`,PA*rtJn[&_=Vb6LLnLNV-\VBgL
%,NIHU+N\l:_Qha=QAgl[12WjLJ,Yl$@CNfDpR#LNalV):_GGTBCM+00,R>]h;h+aZ<6%cY:pL>`B'36W>9d:aQhL(L6`m:6gp^:j
%pBL:h3eoE@rr2c\qY01)>JraLm0ifd'k%'da]B9ks'mY[\@?ih?^i_=iF0?8mO#\uGBs%O^"c);qkNTC0[9<(Rf-YZVjTV_B)=F.
%So6JHKJ!a,K)^.FEr#G%)C:(XSF]MdqKSNu[e!P_UME-g!r,Tq[VJGVTT?_!%TD55F)c3hE.7/$4eu2/S.s/-oEL?j62Hr*r0Q``
%r8$J8-AKIIKVgF&FERC^q%[oY4gXkFB4%9<cN!!i?iB6DqE+Vqc[U32e^[*6Qh&8%^-?phpA3q/53\)Vo?"2IUVD<YafjROs48:i
%)?6aLs8;g#r:U)Us8(WLmJA-[*W>NlJ,TE'dAq<^huE8hYFZ1`\td)cj)I,+_nXZ>*:i</@qk1Uq7hRViAcU1R'i/_:O/$"?#O$H
%$NI4lLO\NZqK(+#I,<jaXJJ)#rgpgFoIKTOVuF@(jB'[B_>reLSpuB\n?7>R`&E$co_%n!X7Kei*Vja(4mS-?c?7tcFiPX7^-',g
%ic4=r38/'2Im5S.-hu^]`5'-[eN`iij"AAS*q+jDkkfc"]F=%?]YX4&r&k">:K4LcrP0e7'ShAAE8?V5#?tLYB>-ckW>c*?a-aI[
%s,h^OP<8X<an4,0Dr7XT_V!sV:$(j7SN2_d(de,3h"$%uo<3J`ipQ@jos`+o^8UXS5?%TipWL2EGPc7V21+n9\)+4#GIdSEp`.&>
%od3?g0_]!P'7Mb$2fnH-p@n3tT_AaVf9p8qGN3L'f[[WRE:%#Us'FL*^Y<\uYM#,;]DHP(Hg_c/?G,>hs7a9VnuKN>pAOs?-bmeo
%s8$Y(J,c-b[rLO/es7u'd!2'BQcm_:o#,O(2DQm+QcF0'qr8iANZY`(]8gaaYoglX.=,2YXi3eX3VKl[BDJk2TkOJ*47(Sa5Lp(*
%^WT:BH;8n#dV*Q8F/D1iYu"_/SYM,@naUkf\58NUluY.:IJ_W1MT3U<5+O$>rB^@@a+UC"l+%2W*^SNimb.\^r3ruI>W4\pnn3A3
%%XhK?mPkWmk\dMPQ]G'P<qirkdj\[:A9V:5\ieWAj)O:!%@3@'(kl31puoTBhoeN3A\1L</=]i!1gk"b]!q=e-%+m][2h?tqkN>P
%5Q84>f02-Qn^tCG9R8Y[A,OI3[N4^Q(r#E_=I_"QVt/[,:d"U7-i!+@2+>5c87dD7dAD(8n'sMfp@1,?*9urUCAHm?qJ;?WAPTg=
%?Eu)PHEj_79#jjpE8(/9*+S"-UD;/,WW##^o/4MK7D7/l9$t%2@s:&$:"dfS["M[fm"VfP]#;VZoeKl3&%,?Mbf;iuS*"tN\UY.@
%Q\2%$\<!M7>UFKq`h7$nHaHQ*1Q?O;V;V6Bo/Q#OFN:P#_;Y)M/dGW0kKgJTE0\g$s,ha*l@#(&XtOS'f5UK)Go/9k6Q+J'A'O')
%AR$]*0?Z&'ORKnBPU4huZ3it7Mj8^_oCtg>p\F+;G58Z7L=j/V;"g!VL)9IV?bS)"o?G]Fpm3WqZP$\i*M(&9H[#;Nkj:;Vhjtk%
%Tb72E\-s/0QhPCbI`(ljCSSYP1glVtU?R:*V7.MPZ_c'<;_!2:[2gX?bVIdq0_'n6rmpuu@p]ElZqJPZ?NuO?kMn0?D&1$/3=4A@
%Ak>5<[8\agc>sXJUZur%(/r7`0D\ddWVjCJ\=qrV3gn0<FG&-W?Eim0>n&F,\sUj6?q6\Z>s);L,Y#Ug[+XZWB.<LY8o>WRjKOlk
%g\)3p@9K`&ek5Mp.777pfMqapPo6.4it0CGoZS+ucSi+OgiHkX^?fFm.)e7<R(XA1TM4%eKfe`S]0I:Tnhibe#)e>7D>D48o_I3r
%G-RPS4Hdm+j>?S>c@Q;`HF[L4n5S>cLMnr6Dc4o5fP.XdjlOu)#Q)]b>CVnE0Y;B$([QtO9Co'pI)%!Us"hM$kW3UV)]uaT.PnLM
%l1q8o6_-osl"Tq&jbgSCa)\WZ+#/rI^]!t6\,128F<g^@NA#;GLA%gsb"5aul^2>1lgs;S3B_fbjtBdp;dr5Ne/ga.5N&m9S/Z%F
%NkNJKjF22^pW%at*t5k\RCs2-P2>WfY*me_8piF_j/)#%oN/-#J6Ue!Y7Tht0)mC;]NdQb-N45iNLsdX*Pm?m1GsZ?4)J=dbeL_M
%1q[l)Q`e!6n,;%hYFf0-?18h.T:Q#Rm,G@XldodI2Zb`5T9IH"(Uq`=+8&jQ]0t06+(mgjc_]k/&"fEJgmhYWroNM4o=$[1*0n9>
%aJ\rT4t?G"q0t#<!r_sKB."LqmD(q>IU`6Qi`sFDAZ5WJIK&O3CCg'H*s`Y7l^QS&\lg-/7==Vi]K:US=PiF`25*QqrS.P]rUJ^u
%o@!dSF?kEf8C4\M+;.)[I1lp-[uheW$OLjcKEQG)GW*sB1ek>!JHkqB)%Gj?Q%:Z<5:R?(Ns;G'B[AG#K-('J44'Y4T5/,ed*Np0
%OjKcnPL6'&*]-EZm04ICIl9,3Y"+-BC,@@;4D7PY<efA-b`Ebn1X+2g"(hCTpT4RN63Dl2E#0@uqQ\Au5*f;I6\>4:$2P6)OLkl,
%EX*lRJ-8"R$0%c<4?)U`&<]sMoMe$HRgIjN']^1f;s]$#Vna8qC);oD]@A`D<;(nX%7qFHFmI5T\q)P^C4?2%l`[UXV`m"PBiNQS
%]t"tOh8"([!5V61Rq8H,ot$hj=^)_S/'anqS)QDp=[gf',LH*hYf9H-6obIo9!'^EH2Sct;P,3orB`L3LL`l"D_&!'=6Ob;P]J/[
%eS;s8WV)::V6)M=2_Vpr2B;KhLJEM6i,re251e?0G&B,rc+Kode=SntM(e3N*R1kTlc=>[Af5WVNjG$lVT!"-etu;=4n]b03G!Sb
%B@dkWCTo&&ofOO?ALOn%G!$TNaY"(`aAlS`$6+i-^Pjr.93[1"['Xh8f?TYF]^H_8oR0m,qS_K*of0B>kf%ofmCdnn.9.8kphj]]
%iX9adPlE65QE,M3Bj!W4q8CReA++8i.K`t#D)<KYVtR4ZE3VaDGfYX,S;YAK-AmXSes4R/#E%b"'B0VDV]6c_2i`#=@X=8')k^>7
%:mm&^?gPcfMCt\3E3B*"k:;!!$aqV6YhXPR,$l\0^mEFggO>@YX:ad,D&VFgaOQ^]L:Ct<(+n"MA"OW]eeNtSD&K/\FGJ"lRI)3A
%^WJg;51RW83].@MU1HjZL;>M&fnDn&I[B@9(RC&XmLfi$;1CCD4T_SAP:_EmUmc@rD2jmW,u#b35B9[QPIR.ZqLMbWR;<pTh`5WD
%'juE1)/r1#0%%.F#(BNi4%e1<['k^R[*+[GMmOl6bk8^+O7kc<4mVm'8UpHZ[9\Ni6<U>Ei9)%M)=b!>(L'M_,#_G(eC5_GV%&,G
%_T!b=hQ.aLf:2XkZs<m6@Btdl&=NJsG*ub$5hT&:Z&D74.qGrIkiRQ'Rf7rJR51d6j&93q37OM%(pq,fk$f^g?(u8l9X0hp*"C-E
%XIh*Cmpp3B:AW@MI"VfSg?*,UdFsM2FgS\7^>Ok^G[(^-"+pGM&EK=e"+Yb!O:M?^ZX4c(glJoEjJ+#GI'`m6O*1pg[QeDtEVrD$
%Z.g%-Hk5`D51"PQi,)d*)NT)n`iGa/I-kta2!ul-4:E;<1lad<1sU;t``a(GTJ6nOT*7%]lTo$i)DmHr'f=2N]cGs^hY%DlNG\fW
%3M-T7LA.@\0LlR0N\f2[n]uWtqRM-9UQ>KXa5I"<rs7Pm]*gUd%`%T83;tW]KWo`-1N)U^Oh7Bl%3O]g?EHJ=hJibnb,UpiGsN@f
%q0'$HJ.6p?TV='MGuGSJHK1JZ=J#;.nbea)h6/=UQoa1=33$Gq`;m!"8hDRjD4-b!#brAD5t7)Wg#-Grlh`;O1]i%tFV.@8!',B,
%[,jl3np3r!K3<W@'.Yc*Ys;XFf*XMU.cb'j?41F:7B5BUY>N#VUmG,BRH30nj2S]*mCoY/*E3"_*.dfcArH-CiO^gT00#d#99aoJ
%@HP4jRK*LM`3"F!0H+7S?or[[qq_S+5g(YN_[)(LdQp6GX1N?#F?I@K8,n.J9kg*9Opn%f#\kt^HbAAo2[&&4'g$j-f:KbWf<Ea$
%DA\^5mbdI:8fi1uFlmOd`%Ms_5X5LWOj.Pm;Zk\7I,)o^M4Ec`bHTC.X8rof%*ZKU/M;#.k9'\(`;frFB]$rIf.u1VZ+S!L#pP`3
%A8f:-c40C5Kq-tEXW)Y58>#%:mD7\.rp]CAqi/(.be*4mjhCLUP%aa(F`L]R"5(&)cC2nli3_oW9?L;PG57LXc!(ehllk0\\QG!c
%qXg+sQ2>UaGM7g\$)b@I#3$N6m2![^Qm90SS"$krYO7EWL@hdVbRiAm>#RK_gKqY1NPh7a>^'XDUY7JCS.9\b//R',M0MpgG4N@a
%R/hM;h=)Uo2#%%W8]H\.NH^lG/P;qsZ0\hYH-2FeVo5\LCKm[aiVTqJGrO'W#HjW_$&>]rH_r<!?[fe:o)qa7d-W(cn5e<iLGXQ[
%FZW1d=%]`8-ZJicgJ1Z$:5WQ8[9W.S5Mu%A2fb])0_a%J\N`0,WpGM\\K`Zj4.pK"5C5';?2U-Dh$&)egQ6X2/Q)!$c6_ssf.F5q
%]YM8E:ON3CYC0OFp#EpIE=RWA]3oUXnR6AGd;:F>mEZPupb9T#p$]@dnVY<=mrYZ2=UaY1"8cnpE6k\VJ`M7aP0]aZ6cs2#[isl#
%]bgXZ'/Q8)I1DdVT:!uH\\j/n04&4Ad/+7XIG!c[0^niH9V8JW+mT"7;4g'kK%9NdF'*jclX>8"U?TRjm,L6Cg(f%+VeN%t>P.MU
%\rj)MDrC'>1o0`X2\GiLZ4.Z-TTUT0n(h8']L>(($pUB+21`BJD.[e6Y+;9W[o^m&1p>\fNI:0^:2k[[d,=h0(jWWh7"5jpmjDp8
%)+755nQolm<bOZlaSb'?qL%Bl%@<+bQOb0$RCeOSi:8a'361,J/RXqnF!lH513[WGr!Xp2)dm-f)bl81E+7P:'@Uf;^2Ms-/>G;_
%L!HSV4?qqL>E6o?Sfa!\*4(]md[f6]>E)\q9().=l+RC1=%[Z=kBls[qYl6kHTS)$T#[kDJ&:@F]u9()h:R,3^ujB#2@&I/qrJfo
%D\m=Yp%^LFO,`,D*,e8N2flVrb45U?YPa>*?EXXR#%!qAHgpn%%_R7cbsqU5j7RgSkSuU_!l2^#T_!Vef+/(V,IcWl4,)8s'sF7G
%ooFRao<lmi>b<R^2;_F&o/O8ZIAu)GR&s"(.d+;C%>tWdV/%a`dZk@(^31ZCmV&WY:Uf/?m\js?%P,PQ$GZ,oMtrlj7K886"(Pnk
%M&S3DU'gb1pK*sDq^XqL*,tqs0Os@Dq;D$1*upp9_\(>!^HUN4Lp:PH31)i"DXilB]l.j*^[h=%?b(5sm^:"u!:ItFX12fdqWm88
%=)+[4](MD^+dO:tIn3$o9+:7O[t]:rYP(>-p%3c/h2+kbcn![p`rG^YNDb1GF`V]H`]RdA*jRMm%DTDhbQG-1J_9KXm!'Xr4:jRq
%L`MNd`/]VSb^IRT>b@2$XMM0.3E&\`C(qjf1!u]1(q?QjJ&ELC0M)VV<e6V/;8rRD&&hC6Ihd9"$*<IQ_QsFO!,%JNQ!+.3?gaI9
%^2cn%K7pGUO0R!I:ok8T4ReXZPDWQX<Oh@lN0CP*XQc-ai%Zm,m&.T35hE`<hc^rSf[VS^HQ/$X_'f?<YGsX+HE_>R\M#%g,m+h#
%JF=F_];sNNf3e3"p0db45C:)1ZR/Z?qKcV3SIu=RNZX>Mr1Yi\*rU9)Gst__&8:/?`-F/Ha4;;sCK1eMY.$m`<,^!n17f;^F.U+P
%U5lau=&rA'S";OSfi4nHpM@^r6=DdW]6779gK^c)ZO[>=JK/c=)7eNu^Xjpf$LO/QMNkAp(cQmENFQa?2?Qit"lm!)j"/?(H./lm
%>\4bh6QHC^0^`Cb9WDYh#<0l\[Hj&OPI$p`/FtE)NIql#["D0A0`\OY"aBjs#h)d$fCTQ\n[*IPE7M%j(Pct2]m]UTX_mk<;tKXi
%dr3P/F__O`(P@t#CuW3tR[+Uo:&-bZGpq;T:fkoK`5Np:"tIV`QMHcck]GtGfBo_',g/RA!9c'S"'j5Y:X*$h!o^2O$P9%2([B]$
%nHkn7o^11$;bOX.[h$?H/Jia"jL-_]Uu_pZgEYf=DFEc`/7AGGZk9^t$-X?Eo@Lf6Z9n>TSsc+so;A2*)Ag:H[Eli(Y;C4UNg6Cb
%FJ5=VT'=eZkF(0j:A+%]O7)3&il1:>=b3e=m+dSHU\J)<V'.(S17(ML:<7Xf*6TsXTgJ,+nVBPYIYf"0/(*GcZ+oa/T&9Dq0KYD&
%E[sM)3n/X'^IB)c-Nq>DUTW-/PS`gMJ?s%UhDj=]m;an:VsW+pok_W_*9iK[MFo#U>.[)CdiLR(5+h4e-Q*#9\t/XN4_Qjn&=Cc@
%@_s$/1=:%`'4$P<XXQ1b5YK3)-TGbmhk2Qhi"P,Pl6\P:20G?gMdQ.BeAiWsgPIYl"+Hsd60QV%]0nn=rG!XSi.EOf2LE-(ZR0o,
%@09$:jqDNRn]!MY*Vsr("U-dc:9(mTYW]C;1Zu'V!&ckSlJ>9O?]@FrWG"M2=krf;h?cP/>0_^,gs+tRRq$,p/Jr:b"ddumjO\qP
%_t]u]B"agcO2/$SI@[#'>Rtms@2QT,fFE6F!F\!J68.J^H./lMCr%FaI%tPOjc_Nc"aekZLKXL16$!*F;'$?<.5bm/0i6nVRG)/8
%KsUR-@LB!+1H;YR6Z"rf4W.e#cRrh#;-<g4CKnNhe3(G3oUGH$h&:sq3^,S_Cnf7U^QoNrful0Qs-`.J4>!_GZ05ZqEYtCQ?IJ`O
%mqDa@Cj0HqLr$$hB7+JGSXlDC;gY+]GarQpfZ<_^7LNVOe1IK0>%l2OH[B=$,r:*AeA5s]a`PP[*\"jD,:I,L5Q1)Yn[-mKe!B:]
%gZr8;7$h+*:oWDaJkS=u2(jVpC7gJ/?>0u8J$/B5A4,n\SiGs9[("XWoc#"/cf`9*gLINSqsR"?IX-52(FMF`2iU#I>.,BIXGh%$
%c'a&@=SXc6bl?1#j[Vt,ho470:J-9>-&46?9!\?MOj3VH]?b-NArQ?L7/'srFFFetRGiRFc;4V6iBsrth#5ltNIBq#k<-[C%rol^
%SF\,H3Ub4)hccN`5nmmr]/:a%5DsUV2<6a0-dLDs3+nUiZTn/Ocdt?Z@EtVYP0Ep>9_N-+oAeoNi:%[UK327I:l/Y'&8X8T]@Z+\
%K78!dgWm8e`L:e;nUG7[#l(;\!XCirjR"4eJD8[uYkYi7aP_O)mlc0YpR',E2omP!,.LlLDs-f)Z&X1tg5+<Q;nUX[ms]O)\:&jM
%FgULM\'N^Gk@Z0oVr&KBWt4IFL\0m+6PP=Jl9fmj+hd`6?@@>E%^<hOG'I2p_]c^>T@0b^W1o@?)jY!Ljb_It+ud_>5[&6,:h;Z'
%S2Ntr"pMu.WKCk#J;k35r^BP!.`5mk<Q.V'p_b5rAr8HF6W9cOOp<Ddc<q>%VQ.O';AZbEL=iQ>3ZMY>V@9N.Q_%<i_T^6bCIT.7
%aJ!03NgB#G,Xq@"k/NW+c'3%UfX.&=HW9DLS;sQ'L=-onC^c?LUlE/%3G:OKp#_`tH>B#mjrk2Q%%)91bMAr."03kd1.-,\r80]V
%8ch')nUs9Zqcp*+3q-hnpK[%hHqT[R>lDjl=8Xh#*W61Rcn+kilah.\DH(V'0m[,rNC^>>R+%2'Ga"aK3RfRQ\kH/2"d%4#ik3\4
%jC5I80eY14p.c;j16!88pq_`$anN.R=r+Fj&XH5Z;j<'$N]SoUUP-JIm6heUP(lY.,ephLVW<'H3O4KDXI*b6pbLL<[6FA2A'81!
%qj`uh6PM%0!P=Sr[oC!pK<[saC;3RR\?<<BlN+H):7OVMG0DB"RZ,ef9:RVtoH6n1aj_`.=1J[:ZcJ]o7p"0o]LEV2FXY=5p<adq
%OOCE+c0!WDG7@#^>&5b'+5@<@/!"o'B-*nVJ-d$l+):8%CsB4:?JA],#kci,m5"uA?[h.Ca6V_m0*Np^fL'CpY.##KOOVq]aF3($
%T/uXA1SWOIAk`*Woc#^;)I'ND.%8`_`EieIV%X=rO1";Kapq#c\hMBm5q.#Z..EM_gYTEP=B)kZq-'q"8pQi\I7qI&-sMo,CLmYl
%k(u:1S8(Q<9nW0XacG-*b,"9q**0Uk%101Q&5&2.")A4g8>`rp=uRW]fCb?%i0ka:rpUG>AYacr:]&o6oCjWLe9sD>#*k:_WU9A7
%*oq?WS#Su#Bae$Y0f6&lZ7J@q:!0G>O(`>]Td;W-m>)g[,cJ_/7&*jM('2'shcS%L7/RkU&RBRHia#98L@p@_dd#>m*C^Y96ob0'
%O`@J@]KLj/0C&D0GH<(%e-_gWpqQ1/B3SS3dP1TJhWpX1+G#LYQ8fm[_NA@J)[nX@3=$cn7S'g1Ap3=So@r0&l?j;]T(/mpDKbLA
%%7Qm!e^[[MQ!/<#E2j>MJ4;juXQl?jTRPpcSk0VcWu+=4[O,9>CDi^'bnUsh3]BR["<j\C3jh$+7QeLVjijMJR7"0/RVbGn4LrJI
%D5?n#87bB?3`qR25]N2I/"^i4T7hMO;JR;C&s4Re89$6rKj$Z+[hu'G),Fl+'Crcb4E'NQek)U=&T/<fBL=G4J9$Wp@Kf`*?9_FF
%`s=*'M.XU3-uQn%0l]lO]8Fq/C&t.Q2]/q;"o4B$`l-D[M`+R3#Oqm3kYYN3]@$`fV4t8<G\beo]uG_9GM"f2!X`ThQ:;8/!XdHW
%<4[K9nd1+G^Uf>%N:`X'gleh&:J>Je\cXo$l>DG++jkR6;U5[&[>o3kBMcj>emke/`Rb`s9F'J<9Ih*nPtr#\Nd`V4OfAW>)!bGg
%_YB+E\HV""c^"Ki-WJ8:4EF1U1<D<3aX$gV#q\;IR$`gg,I=b)!pWO_JJ>e8>!;t4AgSAHasWQ"c]*Scae8'+Li`%%1tFF%>nq^L
%7r6Q:?5LSp/rG'_'`5Hip<\u+Mdg$0`P*s^I9dQa\g[8p;=*VCf[iQsYDZlifJm@5d%X7Rbt<G2^G6&K]]5^Cpn]8cO@Q1Y8.oFE
%ALX(1-:JG\MlE_d*E7G^Q)`h&@6&^jeNSjF_]sJ1);C(PqY\r7$Br'?NV:JZA^l3=dhW1E`R&P'j`Ph;^V9L6!H`9dI/,fapc:IG
%@']RB&KU5k,@#>pZUY_R&Ygoi5='CqYr[OM_Qb>mmt_P;Irg:I9b?IESsO7<FiPaD(F+U>;2NCr*d:#*nE=l"V'3/W_S^-L?YsNP
%h?`(^9SBW_BlF[$Kn.,a(a85`)+N9r7[k5IM\$B&p#Bisae[+/@P7Pn?&*8*q'6o3%1q)V?f*s3Y`3)8Y[h7J('ac!ZnVE]UP#+/
%_2Ae8f?qFddD8&UpbL0TM@"?E$+!5C_8%LkH1,8O-;F9.FRNii!#I\2!sg=Li@K529&6Pche[fUqmPB/]EIA#_N%$I'gS2JH?CbR
%_Z(05//n&YQl3=$Rr+"jLeC%V`Xr.3*q2Ld%tjf9flYUq[_cs?EH!5M7"d9QWm[js*6:jeNt5\lK<s,S^T4StE,63)K[Ci[FmA46
%Oa@I:6!X*m/7GTp"X)8o@2/W'eQ7?Df/hJA&?c1Y.>clr>2/^9Y-2d]:^hS:6)rB0XqMJ*Cc`c$WY`kFI_gdO*s.kEL5',^`dO@S
%T.5p\pU=7)l]#2BTF?]$OQif"%%a^pQ\k?h8TeTRDk;Y\\+pS0cnLTp%-3I/["FD2c5fGGp%UVIdd]Is)R7Y<)22U++@d0XCPeWJ
%\ZV%XOan:#3!(c,ZtW/Uk'kqE2\.&u%Y<VI,hgg+*s0PN?hUtPl8sN*(2F<FW46#kg.#,[!gtf&:C3m>TApcBV6^>eR/gk=h&(;S
%NSZRtp1cao>bPdE%K`j-5I.Grk*H_VV0saH[[\'WqfB@oYq>/Lf,?(iJYuP=V1CU!XZ3X?#XlSF=dnL1p=k75"C4ZZbZ5>9*[m4=
%4!GNq@_<3``*Ah8H]la7>56@&$;-=(4`M*jem%po]kD)A*e=1UfaNHo617FrT5F,P9\hTigH1K6O,=Ki+O*CO4kW2^;5Q?&B/259
%K39?0H)joBeAY.o;PjK9o]8QXDcLXubPe6%?ekZ^"j&f*_XbddT82[SNZ]Oh`[u2.<cfVtcUN"ZBcgL*'nAtbrWor3MEc]]?0(IM
%P$3_.c:G&;AGU>j27;F2p`h2<Q2.`ola@EsB1r"Ek`X<Q6,ABVDE6];G9ELRK@4Y:20^5gX+\6=*hbWP;bh[4dF=^:I4tPiVLoM5
%*;pYbni"\[g\g3m+ZpMC;K>D+)k#hU+IS!,q?,(4?TYt#ST2CLS^tc*U\(@-Ea91<g>R2An?P1As,t:c\fB"<3LoDU37m82Y05d/
%Qc$?dLNDkPqBn88/h)RN?edF5?h(9N'erf%.4W-d;+9t?pgfSQSiobKO)[W.pY09@&su'9WC(QSN<7oHRrpHf(Mi)QVG*tG0$jZ7
%IBJR?R,=LU8^N-eQtn4^2W7EtAS#[2G[tC&$I4$97M&179e!*`<HD$[)O:[@m_R8o4K4+^(WP7W%?oqJSM\n.OBNbBr5`^$]EcL2
%)+sU2[jo(\?61oq1pl!MfU$q,/2@OT5ghXL9uDT]an<JF\a"`U-FYamTXducGNOG7]IY$t&5\/@K5"deXH8Q\'Zr&U(9^CTG^7B7
%QqsfT18N_>d]1Po-UsJT)OUC2GJc.p)9R$MlkIuTZ0.B&oSfab+r,-cP,+C!pl&Gd.^=C7/kq^ZWY'>-lNP0GFhs</%Xo$;*F12Y
%<4bSV&/ai&#>\=A^?X8`T9.4?VWONdI"@>k-K]mb9r+e.K.lCCAuH[kMcI0_:aqMfkmB4tFbq*3b?m8384s/GlD^$1&S"`t!R!.8
%B!rl.r[Lg_4VT"=6%+>X9rdqA1KslR4j*-GPCTS;:?:WIp^/=Gr$LM)C)sK_Tjt\0F8`bJ0.Qt<\h*IRVDP)>^H(1/\)g.s]l9Z)
%&CQCG_L)M)%tA7USn8sTb[m)1=I*^j^G3IoleZ-q/PF'G:s'IR!m@fI\Ei>c6QQfr6PYpB/6lSnLX_D4VajYKMP-tO+NIJ52*mOC
%Nr]f!Whd,e9hV<^rZP;'!eJ.,-/Gf`(t"rX?suqCT%d^ZfU6%r3`)*;#]R1d0c4]V&.9c&2J!<#I[ZgXcqC27qR:cF&S)IKUX\fh
%%NE'^g@q<N0UT(sj"mE-g?0e?4,K7&6d<HO'7?]2[<RW>4$b=7XK,$6b>(=(8mQ]e19;]dALiEKAnJla$>3=d`_>>7=62n@iCm\/
%5?$1BrdV2TJ$\b$[Aj2[e:2?#YPd96orI;T^sl]uc2=ER`*`@tbkmM\[Y,uVq5<ddfK\ns^#WoTrqrsKBQ*OQJ(m>;nkYbMPL1_+
%FXW+oI_%?7/LGpdFV@!OZADrf:_S=f9^Q=>:lqY>[>?2m3>4X)'4mJc#mi3=(<oCGBB&sbEEB;*/t2QHm]'lTCD6_lR/!FR-N<5_
%`.)X`s3".7qA"5gAlnQjq2$Spm=CLG'MFD)\IV"?^FnOfI-=9%df+F#eL_TGWWo\)_!`*R^U)26_h;QiQ^P,JF"Hi$2IU<oY6FUB
%3a!?T#oWNc[95?0K(RF0*OIPuXrqVX"GjA,U3O$\I[MJ8g-?FDM@(Th'X<I;=^;]k"'WC_Jl!*6$DG%Q0NtBAF>e6@08bJmZjO"*
%%]K$,ZH2T)3r=AtA_NA%P1Z^%VAsO`G;?3DBV>")8HT#+QpdfPFsPW7Ym`06NPsA4m'0Wb$tV>^"]Hg.>G03;-DhkR>ms@Gdhkk)
%f/nEBSl`)CZa.Zl5LLaV9#V^,XA7"t-T"iBLHUaG5+t[&^jVoW/XuU_k/0#L98W%S-4RnX[>oB(p2_`#F$g0eAs?E(X@tBTYrC;'
%8YD]5k?9Anmn%ah<@OSY?"FA%p-`3Y+8BSgo9!2Bm%<F&$8Q=uRLXA;*Z,&taVj6Fb'TFi1TX.6"jWVAi$M<)!/<:N?sr(&1R`;/
%;dHb6f+T7GfsO-9?YN>qnb5i*47/SFZTWil<%8e]G"2Kb^\m8?Qi<;M^[8B\i8<q>07^]Br\M06e2_?0<dGS\e'_:!>rucm9&%%S
%7W7_#5F0f+=)4p=':<V1Zru!TpL'8E,uNq;Whl&\KeEqF"^VUcKO4^V:AQ5P*1+7:&,>-]X#@K[K>#Q!rH.8LWfR/Di`rI_d0-BW
%On8_e5%^+:=!%hB45ttn:]8UrWbCsn^N4d"*+$F1rP>6N3-\,Lj*n#5j&/RGjn+$eEobX/d6CY&5j)g2"FcW8Hk4cgl>OH?G6bml
%)Z=%BZhUWXq5mB++Z#WoDKjg-)2PiOic@q9OD?E82UB";L2E\=WJ4OE^VeKJU.56RicSXKVZmec!E1I"Xu270LQV1ZX1gfjAROE1
%](mn[lML@OAdd64IC=G/4dT+]"eJX4=LYh(qQo!DXa^!2T3Z$8Q!1q*%u0@lc5Mm2iq,lZ];HTX5JHUgS9+rg)ta]Fbp0Vre52p;
%oM&PaDJ3c,9!BPH?=+s@mZ_C([9Yl%hI,EU<a(LVd3Z;i]E[XE>QV[_'"k3U0#l4bnhO6-mA#U%@,)C3O8gDe^qK_'R'SihI_W/e
%CSSRkF@=;",'!t.du1CnA[0#i2e[^rqNiI.-,gta_M9dSJXS#)^-)Q_8Gie=i$g\T^\>7M%C.edf2L88B2.m?qL9IW$_5F/T"WQ=
%/rI2O+RVu057d)Z)%QIQ?%M^qqg?t58F<Wa[FPKZFA]"?d(!NR4$,dJ-nXjE#Hc#?acjc<E4gj0?7Pd);sCSf/Ge'-:t_qAMIKJ.
%$S'Da'%h*oqZa.i3:2o1A$+,^MX58jktekgK`4NHfRVPAY]N4Eh`!DTW:cU$,9%]^AHS5!KXfX-^BJC?)%&D<G2;VqC;6fVk=1?\
%QXg.0Yu'<OPiKq#&JYae`*<Ib=(ItDQAth$p$t(;MRRti"W61a(61#Z>ZR?E)YA\"*SuFr\?^T*o==*Kr;(o]c(f$DNPOS8<u(]U
%9hpfhc`l\!b31rd5K$IZM_UUUNeUOV)mguL&O/s`[2Ac=5"Zd-gOCZYgcdpi2[6+Lg>I(?6)m0/ho9`VTEE4E-gq$uI0b.\VY/5S
%Ik[e0Oq,O!p7P%YBptR$RciRI!j3ic?QfaNcQ`b5/+J;A##YKZ0YZ]9=5iM9mO!DkBE./Nj1bI)L)qm0_Loh%856EGV@jWTIt"O>
%*)]7P9c-*b0US<k5Dh)Q/$Jt+eHPu84.Q<#)uMq)H2O>;^:MSLihUbMl$Rfiqt$7<riIO1D_gANeL-Ygq8=0iRBp(kF*PCiNnoIg
%pO?UXrVI.Wq+qC[b/+ZLa-Z$FhCjlQ=WiS'9Ai#_g&DgToD_*o[F&_pS2]1[F:OV&^L#E=?D_j^U]%+Ib^UrYD&16Lb[a;^dR;gr
%X'DJo_1b!GYQ-/[@sJ\u'//f:^:q*aRq/']2GIc".JGHTR4sl%kU<IR8E?#:QNMq1aUb)HJ$TG>_;ZEc-J4rZdJjkSYh*.XgALe'
%fjGY\fB1]bl\&^!(KM[r8L.Qqkl44"Ec$[3"tm^QO1)Ir,OltPCCBg-[JB0???fLSBjEPfcPrf[r2^[+^[^kAUs)aGULBRDs6@d3
%!`q;(fVt_ljV/>s@5;:S6D7qoR7qOrr2X^Qs$MI\1fec4*Xg1=a(dDLK-`6ZNB)nOjgggVSJf?R'qcG*(@a%D9:UeHo/cF7Q!>iW
%<GBN"@4Y+Y*F-NFT7@IJ0>U/A9<*bF'hO93^'Z#-U=t-"QjE"ai0.D21$Jgg`7=WiJrql;,7s"s`WdMG=s!/F0ruf(Xi;60$prCW
%&fq"N9GM-99gqBWNA6?qc>7$ORP&]Y)=do^qN9k2"72fBT6,SZ-P8]=@l_^C+9`fne&%0>"[M!1N"l7,9),C&.'@fsr%l/8f@Rl:
%f>;_3Y?eL>+20,_=/eAb/HIWX*'\JgX>Dh,Qnk)]gIGQkoAp;+41/+!0PID=ll:Jtb\,i/"WfkO&Je^QJ_1A1nB6<)lD$$jqs(OK
%BUD#6;pc;E:$6i*k.)%$Q2,$pe]Yu`V3d/d4%,=;N0K68T#CCpX0J2Ieo)J/(7'd,+!`t*1Y6?foPq(^B\Sh-bG&5j\3*M`iRaXT
%p8bs[>k9K[=dkQFS&O.d4aHGB-t1m%PXUH"`@$dke[)LY<pc^1*n9O(/BMp%fE4"$Y-0i]1JZUWR$:$`OVi`WB#?=4U.Ii>3B@%<
%YP2-O8rrFt]X2]T`X[t?cP&W+`tI&b!mA,NpYq.sZKBd[=#D2PonQ,O&=SWi8>0Ob6,t2>p+ag57dJ83]M>FYRIV(3d3e3b__(u`
%pg,!F?/k%;dIf#IEcOA,=V>^A"_bcg5FPCR7dG8(i[buF$[kM$1kj0Cq'Qlo4B@[QrMm0ppu3SEr,@oNCc[JoIQ6;OHZAI#-tB=l
%:-AlCcUFhYW5K4`n39<AKMgJA8,NZ[TQ#7LASE^?F;PbQ2$OAW/5C2p01L;>7FM+J!+@'P42;It8@aPDR]='F)T2ZVU,]W(,9pH/
%NmgXSGJo\5kQU+k3WT$j&Lha3-@eR?@^s:MmP:ZAJA\m;09trF,r232Cr!*SfN=+9]c0_q1m^q.@W%n(M^Bfk,8.HtGpIW(oHe%4
%0sq<Bku^')bT=T><5BDe';5KipP;TFgl'uK8J<_@!fP83Ws02d0KX"cWX)i',c"]n@pWNHSW",GUUGrCb`E#CJZ!5oCOo*4kEb$D
%Ao[*<)fXP"SY@sKjr9%4P;Vfg#ogn,VtuR6L2hC,]2P$3qBF?WH'2k'8(]RWnjXYmAqY;-@A0+D!+>]'<)FenV2Rl1Ei/2?18io)
%i3IsUKdeO0h-r1T"M0o+<b\F$/0=MHV3Lbq-1#2<X9m?MZ$17AKJq*=F$[hJq$EpL3#[feWQnQbdj/AnF9u^-nb?.]j.g96,9C>)
%7YKq?2@1bpG$!huX;\@n6u=^nMJlpGm3E'aPi7+sg+7U5;T#Q'FCu(c'p^UO!F9Z+1Klf3O`jktjPV,f'h3BO97)$sf:I?E"h?bG
%EeF`L5nX2o_'Na&.Y>X9R\f+#g`SEI)/5[3.V08g8"+,B?tG+&`b9l["h^u$&@=*\3=3fM&i!0NSu^\k6--+eB?2FAnL+7NM7B'H
%3hu<*i=0sq\@@2dV%ps7_3#A&=eppA-n''PWH4C8r_RPhHisX%4nY2BPf-4)\?sY*P6c+=PI*k)SsJ.H:)Fik!]c$P!9>-fF67V(
%:LL.#,S<isdYKe#o;-.E_X^%,79jhPh/A$(VN[Rh*``r."d*4Q+SD3pZ?LpL+>.@sJ@5/EmdCra!C0)Dcp;^M(>kifln?B\J]&hm
%8.s21)<lR+`e7;R#a[frG11MaVk&t.b.-asiKAjmS4Z(XSdEmW8]W09[bo.Z@>)')5Cr_Vn`@#L!P/T:&0Q)Efa!@.e13cj83JFf
%iM?j?'fHSZQZN4'8V%mTM(2C_m6nQW',gD(A"tbq'OBd03Cd$s*'4i:B9-M5%?N%/@G"#G;PZ)q8Zgua`loDa?._Ph9K3g+X3G)%
%%S9RUDjQ\<mV2Ej*0F[iTUSHZUIJt$;d'@l(%-uPXhLmKOWOb_mTfDB[W]9ih5dqZ)OGVLBWerCVW7m7pq&.88gkl^o0a$`8Ch;/
%57+>8k+m@"==H'R7]pUl`?,Ml`6I=5'qVW6`ELXa:BYc,b`FX"HK%W:'`6)@s,?f.Jj2`m&3HJAEJQ>(_(8J7"DPmkqbO/L-Mft!
%b_eXKN`.tMW*uSF2p9[7"FnWlio:O]5j/KkFb"EZmJd7@MZ4lqEVpqk$0T5r"BU%7r.15H"PU/EdUmO=+&(R^Ql'+2i*U]F:g?ZQ
%dA^UA+r2_fID$c.rsONJ/;bW!_O&bK6Xa.H_?!CF-,H[lV!s$$1K@nC`..&S!,P:pXHUJPLd_=L`G2>n0sL[6oFa_.e&YDF?[#)`
%A56A8/timQr:%6+jl<B'Ak'`]XMBk[Y(FU:h),PH]/66"79h1H608F=68Rips4_l<BbM,')ZFk@%AK<ZTqLhN.9EtZ/Z*!PFsjHH
%Lo5DP6*_c0%<bs=81f_I36RkVdkGtr8p,07V3]WP;XUM4E1p/GB+ZM9rLb)E<j3+<O1%ADE;qZE8(njno"+"DhgbmqY`R\uC4l@s
%WSZn=?=M$QN,R.R<uZgBrttZk6fd,h7"3)uipRs5^>]^pqhL87*9'c\pJn\l>oIT>n_5RgMZ!idYq$<IIK(/;<KZr%eksr+`\nN\
%@NjaR/,9k.bH=IOlqa-<G1C*DrWL,J=63QD:Mbk/@V<Y_n?&8\gM3-o2Z&-BSM;>LD.Meh0>dtZIL5SUL]%ZsXRE7,)SXgX?2]8?
%M:1^4IOf7nNbS-Ve'7s$le-pQ;1j>M]')*=oV^D3+-lQQh*Ir3J6)&]eUfml_=MU=2d@;Me>W'*VfP4ZTCk#f/4lU`X](#Sg4Qfe
%TLSU]%7$3,%fBZ:GeLN\]Q;R>oB/33g&IYQg<cKj)[q&;6Wf#@<P8YtWVrsTr'dB*mHUUoekrWu/l_C"J&ZsBY))i=9Y:>hf35A-
%a3/l#g\tAD:PitJJ*;r-M".gKjEJ_Q]_ub8<P-^t>Qmd&:Aq86F<rc3VRM&4"WfSV7ke@pPskc!lo#'oBf/soW8INV,`4gI'K-gX
%=$oCibMHUjA6`]Ds6#()m7^sQf;l4]D#88b4Kc#>d3!JUIff?<6V2C!?c2XGPbE%+Y>2'Ha16a-rG;*$G9,fEnS^VmIK'C/Gon+r
%q:FuHLa&>F4*J`\230.Mrpi5(/Un,Qc/L6)mBiR&JR?,Le+BP?>_V;0jfA:IeILljZDR7$)ts/oQLt&MZ6WY&C@$6V3s/;2n:nX4
%CVig>9$81QkblfPLct0L/pd31$3kVP*,5UI\"@+NkD_dp#kY14?o%PMT$6hh2Nh=%k.K7JZ?;BQ[lT;Pf#pPWU=D1[+mA#@p#hT@
%UN*ZmkoP(:LOX].I+A8'S'LR/@jPp6!N#+V9-lP%NHV'ug?CK!HAcuW9Pr1<jc-p[e``Wk?Int*7^)Um`PRpI2Yruq`PB_Sr*oP4
%d(L9$p5Q0f11GEr[J%^2mA*V5l#\Si,M.k:emIhV>8!&9iMbM4)G-Ke::dj.,M03[0B]bB=V4\M29kBP]"`QheLNQDG<5o9c-%'&
%jblFFU;0GXk)sA#h0H!N)]X$9]qZ3^g$+cHksU47>ci"l)DmU:(@h0s/EliV`eP&)ghSk4e_9t>%1Z24GNc8V<9h)\7IH/H][X'+
%J[#!qo8?Yog[RoAFpkm'm>&M<Yg;@7OuZpH-I>t6d"%Dk1:BkoIFdi9cT4>!-bYP:3&Ypa7EIrgd7NX%g*l>Gr];O1+#O;2_e,r0
%0QNCdVQ&t2OSijqrG/OMlVL_=_ie1$#\OAi^U/32EIM$DBHK,2$icM6mhFrhgTG[+!IJTuFaf&;Id/jeYlF^TG5=MAbPLJS#,gKC
%=mOUe]0[mQG5\esgZ^Ob9F-`HQ?Fpm?,0g^6m4Ibm9^gG/m>4`6"K]amkf@hDM-BknL_^Ua9gGt4)dkNA/$O>k'^8bTeGE"6"e*%
%NDKl4D7#na#-aL7(rEVaeu(`nee`/WbmpBf3H!3tDm>)l@iTdtZD,dPjk`8.Y_S39TCSKJ%KhHpnkZm5RT>Pa[lR$Sc:m5?=)/>8
%-(p-!Olt[8cnY]7b);/r&p@uqnS=mWU<c\8*5JO-;A5\hY"##(4BpZeFO=ik6ZE,'!_A*]NnXb'QM"=pT,,tXR>A94501(EHX\f(
%*qf0geKa3]q%^=[=:.T+T[=pJZg^]&ea1^'nLZ_S]uCB&BG<K(T6(NDkSTKN(YFX-kDE<\*qeHS^X=s,8B\WG)]Mqmeu5@,N\1;+
%j3B,]?7Y&crnmZN'3af59)JK)CF+b0`<p65Q'k1=@CiMQ:3X8#W3'CuHJW*"-D5!i\og3P7LLp(^gnqQ>&"XeW&o7p>h2k_@u%@i
%kQ:$k$cYg^>4#.op5rBOMTUX/L;)A0)T9VT=2^d[W\M<8f6;DA1=h8bXt\EcX$=IKYmGNaXJO=ag+`3]V09lk>H-:&K'i1b91^5?
%G?^'%k/FkiWt09&^.9*1Ua(U&"SEer*6ZD`!bl&q&@U7EScJe(;@B<T/KUiH\ItFSJjPB?Shrh74At(;G]m0]fmOa.h5JtL>P"pZ
%a0RBC<3n`GmaeoCV/oa%C_"a+a977k?P/:T^3amL<]rjMeN#grWXGh(T#S3'YP$3;6g`Q_l%Il"oG^&>,U<1R-m&3nQ868HL3)BV
%9C3Yi0_*P%bt*aRXS)FRcr'6P<KWAI[;P[0WXXHkChQ/NAW?OE$ZeY0SsLREl%4J[RPpND5&N<?)TPBo^(#$\T=A?DfEJ,:O%IT"
%4[=-/:c#m+b2q:DSP2GEC4crB?Sm\\G1[$gVdVOQdY;B#Gg+gY`[53-%XMZNmOAkdMlf`9<4VYLG/"dHNPtF6TO*Tsd^O^d@i<30
%43,U&'Sm3Z)ZAeigY[n9-Q(UH"6Maqgfe')XMPEcAD9IgS@U1?CLIXqV:bK4If_u8mR.RWUH%+MHVck??+)QJ,^\AX?%M;O3^X+/
%;5\.QrsC+boJi#`XE6[+=US^YX7^[``uQOLYHT?lT1897J'cU_d-VlK^d#7h;GgZ$iV5%!%IR6^&m@^R;56o"G0ibjI0i7[1g@jY
%b:nFG\,2Nbe?=(#p"qFUO8d+,ru:1F-caD,N$Qe)=!ek>=*iCV>bl&>`N@E/*#N&9$^T.RU$`EG`7(J.m$8R8gFP(*4g5UEF3nP_
%b.asR7tGC"a0cAdBu7luo3"\U?8AmKn2.kTEM.Bt!l@6H+-d=c0<Oo9^Z&:QAmk-,AMfE8d"NX3mGlJ;1@KjMM+["XdQF_%>A.Yg
%g?;6TFk=!LrqkC0Q6'D(m:5_d`qh1I@O;grA`IG4#Ol<Zk[qN'?@V0t%rVS.1O&6cA2T\,f%TN:Uf4?U]P,p#G#e)trGVG94f-Fk
%"aQ>WKoZ#`)YP*g_^:6CB\_hn?!PsT5A=HRU>D<n!_l%idJ(7>9;?Hh8SZ+'JJ=2s1u"3P"R*J:n,ch+U_ShLTX_h[NQqj6QRM5!
%C:eIPL!,8=$&+-4e(RZo2e71a[V?548j+(58^:U1b[.VtPU6eu%aA#!f2654)nL6V4_7UAPMrBK[^Xf"KHN,QGQpAeAnO9ui>l]&
%8#sV7Bic3_"B>YV$$Z5=%8.A"i)\#<r/9.;EU>F,XnubU/nf%f8_P)klN'V(r<?$(G=b^If<rG*5"[U6.AG9]055.Om'dK!j_<ms
%!sI'5>qsooh4dd#1DsW595I)/ZUmV2eRXinBZLU(q;fC]GU=PGZR]lMH7(sLqV_UbXF!F^=]XKY?r5U[rS#m*<NHL[C2A+mQQDGG
%UXn+BR,($I#$@U$fBLG(gaN"fSF!=?qQr>_[?"]fPFG0\C.q*\Xttl$Chk'!'+!8b@BWbuFrQdlJ9ifYL;rjXD9;7Oilk)[qGjk=
%g(QNZG7'4(WRbjL5\V]^*P2HU*)e6]V;G#em8C]Rm]BBh?,HQ.;lYr9,uenW[6FRe4lZR<=H?t"[,7dAiSVBG0'N*)c:+]?KO!fL
%9;$i4:('faFaAX>rL.Tr?-+=NgEd]hG0ksYPm/8qW88p[aV\85[;,!=hpL<f=Dp(_b"(@(W1W(&2qi%X=E'h1OnEt'h%qd2cEWj8
%ZX::WT4.Dtl55sHq[>X>Hd1tiQI'#<?=%(s0o[7U++UuK6*p+9'j?7"fYU;4'hDh7Wss#iY<;%as(3s!*]q0/2k6%\H-^gN'ggAk
%YLbnOlM?J&g*<D97<>N;Y&[u1)\Z57DtC)jjT6oR"C8"o_2c)R+:Hrg!0%ob3a12k9A/U;48%'/kIe&(e>Ru(LR^";YB=?eGhf@u
%^5)^X+M;.LSDbHOCtoEB#SSSrHZ9=-j:Q(,0Ce+/@>AesDF)U;D8RemBi[FN6N9=__Sl&@p2A7boXN&nE5t6T+g5IhenfVdVMXVA
%Fiq5'TJ7+MkbXkq]TeZ_O2>37;`Jqf8SG2g%Z>B9Li9(L^e,q/'0cQX"%MfbVg#RpR2sN\WCm^"I];/BA#"[RZM\$+`d;%q/"/S\
%3fmH-1pFTQnR*&VcR[m:,=gTQr,_00Hio?YbD2Wq03O\Vnfn[#k<'5=]NSFl2dH=i7gT*s4HeR`9KEZPj@5\qd207=Hsp[lA'fD<
%OG7ZtN=ChSBHB,"[H6/'b0*H%SDu<",>ekZk@91o#\4ClR(SSa)7)t;OKQe"?K\ONfW>&.kY3nRO%#4qr0%q#3"\M.]un>)$/mE(
%(u9M5>mENeaCq_AMj'p(Y4/,tEgSE<#t"k>s)!+fEgaCbN2R*jG)Tkol=%&`7NSB6?(&#5BP;);4/H(nVRYE]]l4a*h8K@UN!gW:
%l0$"cQu9$Cm6[/qN(;>P>iT#d5o&f+a1\YikX`1`G:r61dMP))g1M_USbHtASsa!IQ+jd+^EY)SRhLi&-?kpYD6s<Aa,Ns&BCWp+
%';Nanjmr7:^@QI.;u+]:qdOD^qal8";=.uahTG9Vf(>iLo=S>r]o'rgo#](19A9s^H1TG7q`hCR2]&BQAfbl6s7kW8Ed@*E>.HbF
%CT:X2I6%PfB(>$[p)i]e(qdj1p0MPhpu+[QJ)+=(5Ff+=LRTsTT;h2Ib/;5/25?R<C_/fnq!`D9I^jNYIU2tYhft$nhP":X7!@_o
%rjo3Mn%GhViNID#FZFdl](!W('R"qL3SX@M$pW"m_dE.GR)c\9bI?GsH#,A2o'su2k5p+Dr>\%/?Z#N2(@bIpC:mSq=m<g7'h3\$
%[+a_l`F&B0f?3sQqd4"+LDp)Sa".)[YXcI.e`8En,X-D]*j$K5\G&Ma2X-g9+7;QrO7'/V/6BgQK6a`-=P6j6qqAg\BROH`"28D4
%X<6;$HFJ'FlcIDZB,BPP@?'b*TR5CDL#qRi.::g@>C>hX];=`_!IOX_+#D^l]n]2M[!@i$<SkCMlfH:3ip$:;"g]Sk?u4dDJ'^[F
%(@E:1/Y#%PX+9&6DtF#kdo2(gKhhiicN4"ZQ?qlM7t@3h:#i3!gnO13n<]-$DSdh7c,tt##FTi:]ZM;!]QsBpq;p"VR?dHaBh:+L
%Xe'q=\?L/Vm,%S4kOnc5Q1rD`Q*[<^gCM'5Bs)[pjgs8;HGc=;'HGAfI9f&*S6S1fqe0J$8Y4HC<h&iT/1mrAD6eq(+4Sbnp!$"Q
%'63',rl6+=B2>.b([_f[WQ%j5l-f.jm>()Zk/e39&4t4*hlhX[r?,BqHi.R=iR7<NB8b)r(M%jkNpRYFZZToUs($KT0Y2\;r9V]#
%1$n(iKp>:0in`>.dDdd%DPd$1-!"4>c,2ADllV/I?@@GXSE1j^TM3%D$=e!tQ?P")V[G$@r:oe;lW"]AY223Ec77AD[H#DVZ*psG
%FhbGkH:RuX@fE,b4i]&6l,ELEH0XV8QZ@B=Pm$+6Xd7-@Sdo_:;gQ@Dk!)P)kFTHf>+T*DkD@jAmQqS8H=oJ#DpsbZ4'D2GnuC,A
%GhAWMam`(@,kCM"H"uKZ;L/-4g@OkE^2R2gRDLDE\[NU>.Ccc"4YG&EBY>qBXm^GUo?Zi(b6ou#<m%l^4s#q=n(5==X+utNo&<74
%?9(((Gu82PZr%UfK,\BAZ(I9@RCc8<amJ>Rjck2YQ*Z6MU7=H2:Wc?-jcALbof?thq;0>r[!_oQe*Z^YK6o!-LMaIr?<N_(/$H[V
%r`!3rl.maPgA1TLr8_JaI<f>74'd;9\QCJ&eo#pd5C]mk=5K?:2TdZ_Q^d*mN@e;iO'_:A%kbRiQ!\`QYF"-q\p'%L]RRVeQ9W)s
%]e=llMf4pm%pn[iO'[$KP`LmnDjF0\[6aV)-@/QR?[D=OgtAho/q:"<qH=rqk"hks)mtU'l0c^FeBH)-bgc"Dli!f:eHaK$V18+.
%<4#Z;1F:])3=I\YIp%(YPs)l>4*>28rI4&2XkMU1LV5WRVcHT#mS5qApe4G"I+W+,D8(M*4gf^F-)Y(X?F6X(#7#TSD^+E/rGl[g
%lI0YHe(!>:%"3M9K24B!TnDt$mY@e0::>_k$uYG[do3ll)q-V6_<LSsoC1:PAN+lic,?)f3h?oke(K#K5CN:tS`Asi0>G/j?@2Zn
%Hhtj%oOrRBe_.Y#SbFeuo\Pp]Q0C6VF18#2jP?g"g.nb/h)O(NTDl^"I=Yh(gFlW(Vu&9n-T@p2*us1JFaNfB`kod:V`1>3cbA1j
%bPUH]o(ScjhRNTe>J@AR`bsUW,*j`<[ME2g2dYA/hn/EY](Gd;qo+2Y)muO,G;kPkSt4^tqqSrrd2b?PhCRQp\-Kq,S9b'\oB*p/
%XnOd-o32$'10@kmH2%-YrL5=bna=ZBV_:e`DEYTjGB5^F5.p]'C@M)^a4AqqRn$hSaiuK254@:n*nS_Nb""<LF6i2V`CtF:]K7@e
%WB2n/47(eI_rgM@$o@K73I!Hgp%kaQZSut&hTX^jNt5l<;,bc11u`^8mBp$GR>]5CX'7CY=-[!T`o?;go&)n.et!V$hVVL^erdF"
%[WddMmC^46i7=skD"lN$Mpne4a2sg)>N_IpT5G+`*^2i,GjG@BnndtYIm':^ajTOh0A0`VrR%1fZWk3iBD:,l1UHQ-fBT\4:V3+&
%Xd(<&*NVAmR_,uUW6[&u0'pfYS"'08*dm<Uk8o+Yld+rtc]7-o5@&[ppUO4O2V5UVLVq>aD.W88c*a__o@97Qe+:\:[BK04T#e86
%-fRU*rl%R/2ZKZ'pc*cUWkG#hCOULe5NmK@[kKabnmR)^SPKW;SkL.WXF6+h(S9MjCG!3QHJMf(:%`EWI+cZB$\PFF.1C9Ep=&ZV
%D>n5/q<beZcF_isrC>,eg\(R<m5H,1`9mD6Z$uTJnEa.dWkEUWWSG/$:e@!'bE_2P?XHg)[>m>6KD<-YI")*1X)_6hH!7a<GoKa"
%<o.[nPF9<hp#0U$LT*I!R!hstfXuR+>'m^XUtU.KDCnUH'mCHE04,bQAk1>?ip+LHO,Mac"0qWEs67Qm+NJ`sld!PgBQeRpDC"qR
%c_:Yam8<LtYVR:?S?0D]%UY#OC;[jRk/Qa7%)^`h\OC[[GOC]4e=nP'haogiA?-a%I^4%1DglOUF+3T/!l*VqDt.J@+5cS>o@:nZ
%W3Mi_YFF"M`8''a>9n7WZWN2Omu*`Yjf/$:hfpQ`Cn>0XlIC%\_oTg5l@QZm2k?(,h^hICfCLp*ZLR'H?hVHuI_9VX5D\o4ku@S*
%FnK@Z^UQECf./4Gr:Tc2R`s*]4@h7$q+:-jAT9Z^Hb'#&3GcsKP-=\NR<8GA9[\=VkRgFs`ugqe:(QdaZh13JR8<]M-u??#?Y+GR
%4R$J(<``i*pAUWG=nC=a0DY866_<nhZ^lJTk+J3Y=?jKgIr=%lPFp[E]enVoo3uFud8V"9f7V+:D]5P0V<6XJ2&PK$NG#B=*P)%A
%d@I\Q>Q$X1CEGJ'*5-ZElcu.=]t,0-:<.Q#Y't*Ah)VTUgoY/VkO*d^If&qIjh[G:HhZ]ak3bC9S_!7X3k4_H?MA.bmb`KkXEX^$
%g>Rhac_&I#h#I"i$VB9*\(R<t:oUOf4h1O)pYir3GB;q5mEt=/#JG",J%3#eGk'a5.W.E)S\80TG]\Dc>qUX)E4.<4n!_Gc7rM.g
%?_+hj?N+uGG.M_[mb*qlr5HYNb-Q!8>PYf"G^?4@X"V7BX4?D)@We)WhI#(Z%%aUC+$Mkj]CGaWBJ&%hhHtW@?*18XG]gU1f)<7h
%]=p7G^U_(Ac-NN\^Fq7D2s8NE4M(4N9E3D1`RFb4o>]J_UVlIbs)E<umb[!6P'q_j1%uZCH2QW5II$FTKt6'(."A]%A8S5gp>ko2
%qY_f)o<"49gO%97D_05ZIG*8&='seYP!A@tS\*h+TAFK[00J(H48n[@oUp4(g$JFErj-ri59;q>4),8LZT6[.c$F:dmsX1tf55U'
%f(/b$l+stb>B?lnY][^kZF[HQhrJ!K<pl3E0;Ktnc^0jgGL'X8e'FYYhgN8J?/9gKB7'#U`4+Vu?/4<9\peg<LS*.pG;^MT^Y&?=
%pc*Lqrc!8T,(%h-HEj$ehLo<D*%rRY04u)FU6cD/Qh9B*[eSeBq=FQ_]8MZ:rS>MP0+W7kDU3J"b#@aFp9M@:GP?9HB".M0#02Mr
%oC[b#rKVTQQM05(5('WmgUhNM&:_@5%^o.$D]KhDXFGLQ\$@MmQrhHYa8<'sAiHVoooALE^J:AJq!r`X@J8"4PI%CfRt]0IdPkq`
%p(-&.GfR/"j]_9NmF(7]K=?3:QTB'2fB5'LZ/bi]]4^-aj1D(IL\K]Ph5cn"YMO*0IK0;NHiHJ/6ZiTfq/GNmdc#u[(V?.Y3d\"$
%UT>cj+1KF3O$>POq>F+>rVcCb)m_*o<.B>-n9IcH>^TjpZa7t"h[SkY)]OS$CC_I-]W/Yn\?fDOf[tIhGj"26cJcUe_9QJ-rpXJ^
%HTjE>@HtIQp9*7t[S]+YDP);:H;T`L8*:-Gjr3f)'K:4']j5?Z<q![`(/MZqO1/K0^,S;<IOIqo(E4aV]/-'ScMF+&WHch)F1S]&
%IW4"%lh-_;rS3t+MuBJrc1^a'<(t%P48"Rd]C-Q]^N<70m[`GqXeW4T[H7%^s.rq8h-GMm[GG/m`qe-MoD@\]n*Zd>J)lZ^[VsFQ
%\(^/Wf_]i?0tPuISQ5udVbb73cKX<d]3QIp:Nq#+5CMsC(<TE]R'53+qsi9>)muYO=]??RLXcn?]he7aj8RiYj4kn?.5/HJfd_>J
%BoTF;Q,//GQd[jmX_/3V/DK\MCVXtkA[8#2D.2(IiB;KdW5*TjC\XShj;5#h+INbjEtEdt`\]>W?"\K4[M0s.oC/+HbYma>Rk&?a
%l!=mA)c]$)o>-_bWq@`QXY:W@K')qg`s='h#n&uG@o':XS+(Y:c3W;Y\F_)G$@2lSAd,-:WZDED[V:36oImN>ZY=R[bC;/.faX6Y
%<,X`h\>3aHA=dH!I=ie<W@iF+T6Dt"H8,*[#)iDIpd=gd;_.l\D]\dc0mm,C8$0>/"JA&_IF@]0]HMY9T5QoqFW3tH:MT9l<hngq
%@k[0$GR&j%QBjG_9ap02EDaVMT7O<R>%;+%K3)@ZD2&R1N,GNXfY>/5^F+^lLlm[_'fNq(=<%n\qu,*QiJe^=4>:JiDiAUIU]"u1
%eN><hgMc!6[2V:$)(mMG.t@4);^1-1iHO=JW5a'b4)/*oQ^5R6NY6clR\F_h)um&q^3<$DS*'FX]-G%(PjcLFG?3hBBnkA[mCY[G
%cQUKV9=&]9f<=B\ph]6XVgqY/?Sh;Cc`I$tl.>IrTEt=Nf[D]B]&lN7r9.M(Nu4gNm7t9XV2=2)(\E4K(\jo9DgaJiHoSLMi[h-n
%U;g=n!@:L?L2iY]=e>5Ji)QB<7&bu^SlDJDaUjn/=Z$9RdIs6+N8[,J]Yq*jL9E"[d&\,nSnb2tj!qcs1_LYt3](';%(b"@(KHLA
%^RU(C0]:sGGW"Yh'GeP@Hq6q%1M.&!/L[dK!1ua@]![&#-,(H\"t]@\NXq68:@PqF%XgjW.7mEN*OBKmk@&n(<@&-Vn,Z/upa0>R
%ea""Ge5Q^:.Hp"fC;(H`On)C$X,15qAK9`8A,ut*$X>kJV>)m._#_l_1/7ftWc;o')@M;G@jNE<&P+6+]aB/\MNr3b9bZ8u!`48X
%#I'UD\`j-V,k0nakVn>2dl,2>MNYhm'?7(EQ5$6dV:Ce:<W\.QUF^ROn.\8jcDqB2gX:/9B=A4p5Yui/X8nPO%J\R""):D=>$NlD
%8JR.7'bCMC_;D#pJ4t]i8J"\/DgGk@"`T>0](e)'Zb-Q%8><ig:"O?D/BRuJ1+Ak&#bfBr`]XCEE8DbjS/^*;gp7QZ!ia.N[tt(g
%M[KXuMlrq&>!*&`UkXZHG!-c/*E+rKoD?V4eng7<'G%\U(D`K?iBB=E*3b(S^&tNiIk`2b%N=mge+mZj5dWoWg,lE:4uJ,!0PFP4
%U-'l)"MW@j)bZAciPb4Jb8ba_"=GY4/>o0r4gQTX6/h/uSE[B?"rma=#1T-<B.?/[i$3F\Qp_iK4])6-:]^hN5YW]FWNfECHok?D
%HiQ;\,u@j+Ur4_%84H1M:1)HS_O7MON1ORUVJlt'(j_/"m,RtE!=\d_Ls>)e$pS8Wa@<p;.B@E(_U3qH_WD0r\XB?\/lV=B,:(JQ
%pmJm74RKoge[P#U^7Ipkb+thAhuGPCU:LEm,3,[n/ug\D=W!P&*9:^po/p^/,j_*.]4CP[YUg2(-2;S')GDq"pkH2kQjBK_`-GeA
%+BX1EEMjh/OrVO]T,7,2l!OP;4g<``f;5s9G4]aom5,i#f[Y3lACmr?9k2FULea>5F^%P6Ld7fQ8%O8NcgC^V:$k,j>o"m&:.Kja
%?3Q=h%!nh*=d9>I<&IJA@%pa+DN,dApe:pF@jI11!QO'<'[HeC6>:$94<?=4Ui0@p&2Z1nYoFTu-&)GG&qY^Fi5#+[*R@B-O/OJb
%[E]k!i`\-r<ARDWi]g@4eZ/_n!D-#_BpUFAH,)OdKIe<uU^1E\:[,6,I&Seh6I&sY-A!g(0YJd2F!A<n9f%1YNsAr7=%`"]L83e.
%&4mp:'[B)tE(4_*W,a1U;Hu3J1Hsd[UBh?*JhR-"W-#6DlOIb*a)pP4U)c;ME'$XP2XFm8)RA\[`+B<Y@0d]6(Qh%q_'Hf)hm5j4
%0`AQ8+0V["8$C)[V:Pg3TOi>!B0JqY4Ai[MW%TpB1PD2?0E\GkV"Cfq?3I%;+S\cK$P$\^0SX<d78\^uE$-smO<HT7]h5eV@"\Qp
%OrT;m3G'`HL4kX:p7D?Q1`HSc(R%B%E)^NN5[D<T'7Lr(0bQ&?Vo)$7):>ptlp$>P2+i*ejGZMF&B+',C//:I-T)EC.;WmlS$*8\
%`qO%E9B\&uqF;Gu12b+W-,O%RpdhXg3l[YD,UugBP?*=d#)Gkd/`XG4iGN2j&tbFr<?L8UZpPd1,_8[^@D_C=VNbgUKWjd7Rgk1t
%1!a=+#0iff6<B1C2U^AG.`;Xm65m9NdY7c=8-Y@t3O1Gh"Ah1KLAI)8h+`tpjNTp/qkV_s&@N<K&X")L7kE3BN*a)KQ0*%J+pm\R
%Jj"3`j9-`P>`YPF^`Au47Nl^B+cJZ'kCQHIS0\BY"rcnFW]fn!*ZA^:8g<>,`4!^:F'rA;@LKMSS<!]&Ac_X;muB#G,0#4c+Rsm3
%@OG[$B%<@qEDb4r6*s^g4>*oj"N/7dbp`f#BeEj'TCc/&Y'9VmDrJ(p+uk4G=!p)M=$:+,*$@BK`C]%s^>m!0f&Ib-D+<(rJl,1W
%CBbjDN8%QMN5CAe[gk(*+q_eR7PGXaGZu"SeIXK%k(2;qKaS=GQt(NA\hK'HLVqb>`dl*88n8.H""aMO$"mL^I>7nWOQ3slW!k$T
%k7>&-*&`at>hIDZpmq^`WZX>ZMf`>dg?S<U>p>aS\--_l7$BIe=ea:f6GAUN7OsT]a6PV"d(5Mi"9Y/Me1hAj3#gX#@4nO3D?eH!
%6S)7hBcK+J^)O9V2KNr6d&d<Y=i<j.+%CFH(s>V/cgojr%RKF$pVh45S3YC-O.[&`4'N3MNjKc:(2SU*$[f'Yc-(3C'L=l9aO^i[
%%-l$+_,1t_s-5^1\MQ6[34QJZKFSmI2+iEdoP7ijI5k2_24<+c6`:kn6iH8fB`"RZ=b*W:4C+]G"eUmZUi=KZ7]2B+(FMs:DRd"8
%,W@$<EZ"M;,"p,o9E:X'GbS(,A9rNaIZ$dq_oL^.U_=<6&RE=RggccraMKJq<<>XKF-NX(PAn.R9hUSA!N@JpUQU]^$UV1oaQ[b*
%'0nhi1!#/$W^9EJlDkuBeE<dDA9#s/W.T_g9Ke7a,PhKK.e-YR*#sX=^-bFflJktr0q]4oJ4[[BXp9&NTg-"?#paA*U`PnUp;b\G
%0kq;PZldYQBG2\,_jS*IE>6muF.b4[fLhZD-78jM]bc3L(ghttX2u5XQf^DgmCE=8A:OZadZsn\N3#D=1BdkY'T""_/qj0CY2-?`
%n<>+!3rt7I8/.`4JCH<C"pD#l_\>+ghDCm$I.a$%)G/X8&sjlO"JuACO9c/s9c"1B"@dlS*m)dgW!#1`[hT5!VpHd<$ln@P9IQH5
%Ir<*$[7?O?F/eSeY\%&LRR*?*[e)\+h&ZWSjFJ,H6kJ?dq]hr:$iL/Z?(h?WqFkG1UXopVmDSNm2,W/34QZd)1.=Z_`)Omt_&U/:
%TO(Pg10_"g.7Bn%-KDWTS_9hA_'r6>F2I[`&I(Bf\-7*`6sUgATZTl<jC&X:J3(FXDsNfhOh#V*@&GPgM@i=(hdLcTV<3A%Rmu[r
%D,]d1Bh'g)6F!'.eO?eY=<f680nGKY_^mi*9RdN+`G'/?'Ft]0CljXRl=AgYQ_dk8j"okE1I.CBCI,*;BjuK>)=/PYr!m+b,.sr,
%/XKFEe<H5[!#XL-PbB=!llQGj$kWn=M0"%=@7k:'E/`gVEGHh[S1?a!E5g&B[ub8r,@446atldlS0ORZI9;&?.05cJ6>FHTAO9U7
%1/!?V3V?92D<>mr7L0tSAYr:r__SNbY&&X)=IQ)H9p#iC!(PukK&Bgp-VDf@Ta2Un&]BHdUEI7LY>Iq?_=$hBJS-uDpV8VFAI&s@
%l,<aWjq3a+%UhB8*JEIp150t0#?Zlg'&n6*9_0N?"ABsVeg"+)G"^99O>%n(98Y2(ZRd2/92+%h17D/s8R-S=<,>8u:>@7ZAXbAp
%ju3FG)(/T<e]Q1!oW8pP:TV44b_a+B@pi_;5',ZDZiqk<ElH]sm:D\^g7LQ9('M5ndJTu([fqO:)Wu@3+&_;R(i<)@Q5@AN\;A_'
%?uSX?XZFlG.4-8R94UT@0SQ/*D,tlfp7$(ZVSu=",7G&NROG"`RBHd-74]b.JMgqo**@9F.VhA8k98'nI8t]5^qiVHhL4UTNr^1N
%(;P`E2&ZgG4:a-t>b]RJ=KGIF&nO0]o*=h_g5%(9>U_(9>R6s4&9k*DD@1LpD_*[:)ks`7Rf5-Z+!R7"E=$$Lb)R.j;%Y@945b6e
%(a#J;#I@+SNfg_AK4./&"N:bL6iofbR\tEC**adX$KR`"U9Vso_u7C"*"UGr!!^CWooi$@!E!t1i@X/Is5BR>@#,u@eM*TM'ldRa
%e@n-CjZeTA]G6rU(FJYFS"_HA/A,$#[R!P_dW0L&5qBu]&.Z9C:k?f35_-d<ih1T"gOg%+5),%BqTV<G7)qekLEXi;(W9`YY_l+[
%7M#n8V>s:][4;8X_7jTLBGRL6i.:2U9/'m$O3(C_1!ZdFmS$X]W`TC)p`;I2aPXk.O9K"l6ng%m_LW2jJ554/?l=S9TFNdZXQ.Eb
%+Z,,8(r\bN%,!Ahj%[9.9kbab]mRW6_^V7=N1ThVMP?M/`APH1KU[$\KQ7c7_Ee2:iQVX?Kfb\I#udlAa5I=Sdq\m_JT/p8+JMrU
%HCfr;,SM=X7@aT>"/Gns)CYH`TfXM7aVDDg[MfhP(kNYQa&V6\G+EYqS>dI'*M9K:WO."H;[n7h;969\*LU:OO%qO[bVb,c.>=0_
%_N.0^"qWCP/EFl+1sAd:K[04O^eDpj)_tr"U&`Eb[\"8T/k;797"H+;PVXR'n([o!U\Y0+fEb;Y8u`K'9oQISSE[SZ,:Y4fe$_[d
%Nfb4eW4E*\$2cq:\RG"PMS:W'3t5!g0\#D>9G';*$T\Z'R`'hjqCJ;gP%h8'4Z5LNShSg4.+^D-HPh0=QJu`aY.??VYr/T,0L-lk
%5alI3f0OCgJAg9l'$A6#`LZ.AJ.r]l0d3,JARZg`5#X=(FT=8+gMbo15f8*b[08$e*?T23V0ID\Q!K<cI9t%G#X'#=+rtna"N,[X
%M314=Wm7CpNrc/c&hR5AOCQ)_OF[lQEJtt_XWp<$TM;I!-Nc_0HEpAP"-Gh`-IN)8AO;4VU7IL"NgBXTRNmR!OX>qt6_kYi!cKW7
%dt#[XBLE59&qfCgo=5%"Iugscf-OVhe@"+mNH[6!\):kTSm=fD<4<dYO>;\@E!lmc6!A>$6r]@#N58!45Rai;qMJ"E6\L"mc,b:X
%4ED_%YI.j)22tFl+t&W>1=+@?P_EV"]W?]g/A,-JW)8`I[Yr7KN7l'`[(krIA#1$QE"%3d%$Y"JQR@\\&*+nhK:8o^h:Wfjj*Fqs
%k%@9&Xhmtr?*,8)N@KRH'SS[f1E?6hZk8GLdUCkFeE;!R]V]lD]InsF4>82$`MK$-9H!PoCB5df2`l0R'P'CaJ1mh*%_kge0jGPL
%*G&KB;GSl7$[>FuQq1GWF1?1fgEm-3OMTEKq0V(nG\(GCM!5DfAeOXd+'4VsA;SXV&5A&sg#=T:0"uGpFDF?-&%WYNkD9\0!')&K
%k=$)YU.j`&Z:EScLk4e"5q?*$LJ<>#:lbEYZ5i>sH#[qf@01Q/@%pn>:T:fGfM>?-=`NgO&V/O^*gQd1l?Z4&:P2=_(@W:K2B1_"
%C%p!oh;<3jU6[^M"Z[4$9/je$8QfI.eRh*j22BF%[g^S,hSActR6C,0g:d-i*$Y&Q/qG"PKsJE38OD$hf[rN!JU*]"0anIX;LCh3
%Kcq*FNJ73A$N:H3S[!02?W+J_67C\kdI(\@!+O[5N/#Ud/NYu(J2=0@\J0EaVbQ0!Ng!0l-@8"<jt;M,DBdV>)S+r*;M]mN)#UEu
%7;F6tY`),RK>49-;hn.f[$Z-39LVP"QPN1/hMao]VGSV]PVb?>2.\7(;5,R1N@N<BS.hq-SJ537Xs#/nbm\B=,7nFb'qm?]-tNS%
%`B+sK?NO1;D7:TgOi%l5PTU;Pj8-u0PZmo_j/4oJ&TSVqQ',K::G?WAOUe`:&:oCeUk.ARZpH:AkokT2Ta]G?:5jp=+ojFdQpRH&
%?cJ1nLoJHRFJ4t5ochAIk\h`8/L]7.#=T.4:J+r;BGRLZcs_$U3aj^hOJJ!oF-5MG4FdXj6YaQdVHKjI&i,OhE'k8uT]?51B]OE;
%61Q'+72%H*nHO4oaWpH?O+@A(Z8aK10G8,$]K$T8"m%R.1O:NqaGLN9="@kF-;@9A;'OMJ-/!T]J3o!Z4W4PlBSrC'qE@[`RP`5Y
%1MBiNIV(Dn5]]O5]`JbYlVXfA!@bYhQ:rN0BF@ES>`alULUo/YR_fVFMO:0^1"j%K)b:1B64e7XR9O>YK^E2)FNf.W76F(sEljCT
%nXM46\[Eo\5Dd<+?Goa@ob']c*[jtWMKO>W;c**/OuRX@+Yus'G<7GQ/%&VW0aEP_+"46koN2;I@[&<;6^Eo3R-653%AA,XNi=\[
%2;8Oi!DYn]8rPA@"8-[$`X8DO:0*%YR1"+m-imI=XfogCA1L*j&YjhL.U-eJ3\QDV;^[JP2COjEjb%P#U_d6+J9M7;gMo]H1;+RM
%bo7GnLs/bj^Wj1$'dITrHpG]rjYt`;hhV[j!an;;jpa.84U)UP>%Q*\H3g3V-j0,hKSIHJn^A]!7e,b#7[IGa9YW=9;[KR:T$3F7
%.)qpo']h&!UM,0jS.#T=B[0VfKZ)po=rgqS(tUJRWNj6ITP(.^e`kML@K9t+4t4iA.7PX1B;r?&@p4IN2-Ll-A2.a4VpGI0SUgVA
%5`$V(6GFh-4coLu1'(mn+U7Y\C(.V1i"$Z<RPX?[_&,$*'\"NBQ\qP2WNLSeO<^WM;Q8s*6I80$"(s_EoT;W>;ip,+*gK1$Ca#'F
%'cj,SJE'TAP.__(UhC%E-K.+]C`r!oe%m#77M:$L(][0?!J!WgT`Y1[7TR@-OXiPjN*JL_[EK)O0G0/@gDeiG/"$)5C5<@ic\XoK
%5@o[L6\N1?j$&Wu#8NAg(5=qEW>q:<6Q;NZoDf<jbS\f9U5"Ho'm:E)(/Ru+Ysa'%-j0R^:gI$Odm?(6MdTnb,'#`@;*sFXjYI(2
%LeRV6l^AAVfgHk`p]"JqU,8<[_IC2V[<U=_.F"OkP]3p,$PViePSg525Ki\4.Bn0E8a"YI98O?N@,#,hRc0kNM$N[i7,!rlU5`%;
%/(Xh8kJG?`J7_drN%O^;0UNmHN0'o4#%]iS!aUkl;Hn3!+`-EbiSl.T=='4&JAdgE9ICUSBNHIl6u)XN9XIb7nPlbM@(0$2R:0`u
%d:=4(1e=;?.63_\6^2-r8!3'jSM[e6.qJQ8<$m]l.k[nI<JYY6qMJ'-"p^8?OJd!k>Kh4D%4Omd^E^7_1**J7)cn\IiC*N=@.4Y#
%:80\8A1K+Na:==]$0@2clR*ktNDSi]<,53.=:%kfji^[YI>Th``0(H19.<2q!og_q*ubp#3)s.prY>Y]ALO7:;k`6UA&bfFG!eVI
%SEqIge$M2-/#c@F7&iWna/^C_ie&Y:^."*07M3D$dI7:&CcQJeOl9115T%;9e"Jm;Wc-hJSKK:CnB[?/!0V#].o.nA>P2^5R0rfI
%GY5#J(aQ,eM0KeOqM]L_3gRYRB\YkT42r^(F-P*%q-Pq+"nG'6#+6J5r25!2gad(k-sT?WU3%rrQndtu)sK=n0TbqF^sQ,:fZBY8
%StSZ3MT.&"F_iT7_d5&]QVOW9#5Su[A#Dc5J:jRf-e6nZ%Z6D')!b1qgb9)n9JK>$mN\.B5;j'@8V/[`FDlBJ(j[>fM$sG*F5%s3
%EXE;L02_&!BNI'W+Li:tAqq"DBpAE)1YYq+dQmbr-$\$tq&#d@<rbY$P,SJ'(Y$jN(lK5T35L\\VUYYXAR&"l`?\h];Xa_@3f#L.
%RQs7iMc2l'Ojr?DNd/o?`O4`51:??Mg*k<C_XT=DaRjA"#Z]Q6R+%^VHjNsr\Q%0C`Y&@g3kZ_f`jnZk^q6;SM`Rf?`$ZDU&p#r@
%)W2]kXsbdtM8TtG<5jJF$khIIMhm6,^]\@5)sS34A;Lho0SGp6NC`iiTELAVBJtR>&YkWu$FgD]2dd\:R$c!0VehR,KH^=-A"+3t
%@_mU4@S@'iM$9g"5_Y'PEGgui1K6dUoEo%Q;/TQI*]!R:$CqUMDpp]2L9U5S#Y6Z;.0B4$AHNdm9J/YlROdS(TH^)22O!;<IERN+
%#bBdjXXpPfbYgsk$_t`dZt^C2^nC-9\4hL+,.2\:GjtdQ+b1nQ83g]sGUaA5fJSC%T.ST$AcZ?PcEaRe@!2u(pSE]qE(e"YEFt6!
%gU0?q(f2,>U+kX^XuB&Y3H+`).il3=Q]KOD;.b_KR.Z5BK)c>U:P;"nn8u#B-Uc31[/p+Ag8R@6`([MdE0ckaO;f^2UBmM8,oo=0
%."DaqBRK?tB]Pr_JeoiP#EL&-&YA=W3Y+-J+62=I2Yad+!X?4R6LjJri_b8$'nL@4\s8\"0/qf+YT%S(D#kdnV;R'H"U&#RZ-8l-
%ZqiDpPi;!"qZU<p11BeOFX[<A*g0VA,1&oBJg(:sK!0g'aqq0E2dfH*Z;bE1g+LiVRlA"-dp/`Ild*gD.EY*@+e/-)2.dODi[m;\
%Rn@M'Mfi@;aE$B7p@?fINHle%<-J^KT:;p,^T#>HpU`8-p4^mg9"mMePI^.aa5m#N/%=U?4=&Uc!?O!:/ASk&[Thh(oX<2.*q$V1
%VahkQ4WYd"V&PlPQnqhG'$_pGfu#/8/\0e*@0[0=TA)O"RbGII\f@I>qT'i_(rAi\lCc9"XuK3TQ'\[moHGWY:aL#F7"7M"00;*k
%'*&UPlEr)STkal=oSuC4#RZTE"f'b/X1B:Z`t\"@R0X#;^hIL\%,<s2/^haGFuc4RAdNaZh81n/2r\/W$qa;3)-TL^.K]sN!,[3a
%$qtSscA`@'l5Y,R8!@ar(u+-5qpRCtqu1>(WdeI9\gW)i,#^P<8#:on=Ee/b5Gged([]T.L>,jWZsd%rd?%YDTf,Qe$:U>G7%mj,
%.`p$O#IPR'9Rgq<aD5PbdHbh/ejikiD3DFE/Rb1N>Tu^E;i/^Dr>36r4+&#-&6lT9^c8PO5M_+re5R;>:p7q?Z=-<BV67miT\plT
%i*hNP#Z*BVb(at;"pF.3=\:\![`X-A\-h`QTBds/aI[I8#:0P8E$J,#*]t;3,8490^k+;RL^/&,O@iLkZ)][2,are<iF2$\#]fD[
%C8/;bJ06YH?Y9?f=+KiXeeolD^.8<p,O5crEatE?6Ce->e]Q,&1B6n6a"#KnPR&t9eW;OCZp68]Ir'KO?5Fd;%VENUU_:mU:q3q)
%a2F+]V!6R4!.nI\qK#q*!2V-aieOaG(EGK_<FWTnd0N"&DFS#PoI8;3on*,6EEHkHYZn]5^_ga(9M@U#1!g>'ch:[Qdf.:<;8WsR
%aFboj0Fj%E9t&E<lXUE+07.aS/rEi79qDkuQE;rn1WiF<\#D-5)G5r;8/eS1$l$LSS:I9bj.lqi0Q*otN!&r:[l"@VW$sGDLmj"-
%)O_9@@:N5E?jK@OlbY3-E&<5:;Zn5Q`7RBXi?/mS%V!$e"!2M8YmKlt#3SjL(9.b(-CcGLFTFTg'Z:^$0I>LdrE:lpB],:.[GH!3
%49?:k1?HdE$!5\*osr2g-Ws4lI@%d2lEO#Rh7(N*(:L4qZRV0p68o![L`fVc?l[h>]c/VXR[I:ZkS=08%[;WcXTm8I@VGl(PURqF
%LSY.WEn=!]+.@KVGUfF9/\ls$E8X\3M/k`tm8&cN>fL>kRnS:dH6p@C^-;s88^7WD)8O*Ug`'p_qaBWC>'-bs$=GZY!W/'I!M$-j
%9cmji3Oqk''N>bsapR56n7%PPWo[j9$OAl59VmW8ncHn#E\oq_.cOLj"]1Q/'=1)2?3"-),aY2T07`=2k3&!ZY.Obkh/#QSXY(_M
%+HC3M\`s5UHl=:s\u17]cZO@2^SRn^J3CbD9r4<Dl2iq'q,#SmVRcbAYnWtr8d=3'Q#k!$@9AW9d<FMB7o[%a!dK<,MXGZ<"U(fV
%RE9O%eHLUXYi+dS+C!d(.YB0'J0:jFTbjlT$_T36M8kZs!\TBUPHdgC"d"1DDQY%h]E%LJ@/_XJ?C)Hng1!sH*73dN"=^t2eqDE3
%"]1a]aVX*^$R"bn@RXP5]Du]7Bl"I\9mHcP2G'IuCMF(3=\_s3%0oLjB39Y#^_s#W0MB@JSjarnVn2kcXtG5PP5N%:HNl0u(A2Q7
%8armo!*Vuooe]`U!'+2J$]eVn\cD:`6^kTrJ=t'fF_Hs&%EK,3HAT=iVQp2Ri9ZqB'NA380+h/ef2A(NZ<=&7Ea3;ZS2dM2'jFiA
%f9]mJSN=B[ZiIBoM7/=:dj^Ot5fBW=%p)p7q4LWYD.Nad,suUM?BC2>V>CTuBK*=&OP;Q'aT*=cVE`\?"oP6p[X_1dm@^lf:<:FK
%f\-D:U,5kLA-rMPD9,Z\YS;)A'l+2Mm]=8j>\sKuDD>EJ`tT=T_IULu2UKDH:a64)O6a>TE<2g"8/G:R`<Ae$9l+)K;d=j;4Iq:E
%M@7dFOdR@<.P?6*-3\IHVr@cRB'@Q8E<25k\LDYf[0?&e->?Yb/V&VF%"f9r>Q>XnWUjMT$QqYWMGp.:iW:0b1'IcAlfG,lP67X0
%EXg,MYf(kqdnQgK!4$#JO6oOI#can4%^2i_JAR2D9N5h>!J*NiL0Sk4!>L#DMekBi?!2\WSqQC7fua@_SV3Z!NJ1N,8[Sa"VRj8;
%onYn;UL\:k>]Be/=p!_W_VtVBNMNQa@nHqJ(<m/l0YGt*3X=+9#<J;&(GH&^kRoBL0I<'dFEUSeJ91fta2ZUEYV:bR;d1AXWbVtZ
%WF'YA"isGLlO;J#!hSr)((<I>8uVBS#;^F.<M(57^JJ,c?jtOmYQ1P&!6SlX[0:MJW4](0/O8&<%6Ll'"YA&$>\sM6A5$uo!d0pr
%!e+'H?@]WJWoD&1nJ'*gVTjlt;d3Q.q-](pVHU>U07X:egS.fI]KcL4l3NJBNauAt#BpJY7pm;rfFq1h+G?cS!i04tX%rajEIk?n
%W@]e,V(@eH*/8G)Xc@f'Lr4F]mkC=PrYUuP]jas)11t%hFb70TEJ+Z9F,ATPX#7k0Ot`.B1((oah_[eZ0p</%d9t*i0gk8EB%"FC
%">!X1`hlW6k3B`b`>]c&g%uK(,m.OEQLV&0<uE'WmW44^Pj%iHa^WBt!.+neL'5N$K>C/K!K(<-Gf,>7X3$Rb;IeER"#Xc._DR1Q
%MW@U$?uCuW?CtXK,:9[(M>^OsDdG.F3!W9<([O)@H!t7uCosaW=Nn]4AeF;(o+m0+'U:H3e,^+j$8]nr%\#or/+E..K&IYR?N`Z)
%7Rpu%6@gF*K?K-hF7a(f&j7:denDI(=:GOg1sd,3l`^rE6qU:"%A4T,R=K8])e@^?8ZbI`ctrbN6P2L>huePFiHkf`c[gUtq8Xf2
%C-_%V1-"c3M@bY'BY9drQ=l.dQidE!)-MJ.*!AE,Hj,W;(:PI:lpCc\HPRS+]t4;]kVt)1U@XDh!ppboqoB%$cJgG2,(nml`YJ@[
%Gh@]IpqYTqoAB_bl(C=YJ5(Y<#7e8F)fQ41N,?l&%Yl202P&Xpo\-ZncQd6=e3i,u9kF(SbVnS=F%:R2hc]-XcH5IbFO"heGi1K(
%e$KU.[i4FbG7+pdp,9\>oBt?qCbH.2-E;e$"#ddGDecSn?'cmD4;chMQ+L2QjE%pKS"h#Ug*X-fm+@PHLI;C<dHs6E`jkI'rjd%I
%STaV2,iMd4.EASLL_+N=EUJ4053MW`Qjt;Cgno<jmH/\"%M<r6A9*&7+^fB64Up*,Si\m8bu,&l`\sCD\X%*\]CeC8&:ZJee@N"m
%Dq=OIL(.DKDM$0'mM=fpmV^:#KAIqS4'0/@]CnAdDEia2!1V4R1t>ad?B6Et]J-e9,kn3N1=#j[R,mnVb"Wqh(EHoTh7`"P#7DE0
%".SKSf:r]aE.\DS!H+J]4M\)>UE@,?+?[F_anbKJ17cbKiB7GWE*MB\[6*Vq3CN)+bh4mU3k3PheG-i:Dj/^=W6'-&"80Ws9nFGh
%oq\B&/-+tRGj?*LH1<L:^uiT@5li;chLu*b]Qb5)@.WB1J,l,Vn"Ki!]"8=Sn3EQ]fn5_i!1Oen+ouLdHk6QkoAX$qJBa"]@/r2;
%4pV7pC%3@8LUMMM<*FY\"^prK>nDP2<jsd`2QPXE!H82"70#<?n*,&R#>dLBFoT),=RX"o[dX.'H0iiNDmS8jle_g?Hfh!@naF&q
%IfEhuNB1?'*Sbl94(,9S-NAK&e2mglrI$NLp[6ceoeB;#[r8V1a$>(!^?]2ae8t?piF$_#7XW"&Cdu)#m'lf[JQ(Ig_hV'RqsO@W
%%EQSn9me#bob":3i<,H=L(F4Z2An\lC3&9k5g&^,LEFB(&S3;#h7mdYSG-Ck$Od6DhiEMP^,jnWmD,c@'A&dRhkmkET=tR$grU%@
%4o2<Cld0k9qYkl3:%$g42Wrk@o5/Moi68Zuf7>a85m+3UV"ZT?&(tj)!,*]j7$a=Qp#?RX[QZ/O5&fW<b]W*j\,#F:OmdjK`&jo@
%j1F0L(Z,\fH1Gh'\TQufe9'lo[lNf+)rKW+GN1c`n#ppuKMXIhFlL%/=<IMr\jir:S*(TtnSK&SoA\L]Gj!#SH16@qhr_`[5(&P!
%ml^A'&)K>9D'$@Y^UIqHc@'W[i13[#juN^lH^b6.2:Q@0c?4'Shuh<=9nRYMH^im[r:V2QF5)%<j0c@AnBP`do&'V:]hO0(/pj&n
%Dk1;p%mFsbgH9`DYIAfHc<YA[hudo2c%C5cHCG0.I.]B.5&f&A7!Rmn[u'V":N&&J"$aKDKQh<[S)J7uoH(qldQ=E#dG%oNkG#Gr
%n:?AOk/'1b^!27Trcst@+1UKN0"gl&gJiF`F15lA^2MjR_Rihq&)K>/D'FAcQa_h@c7NrJiLO',-Gg!oH(,']39>!$]^s8"7!S$\
%[s@Io8)ECE4,:JjK6KM&LB-3NDtDocL,ok%q;Q64I,KmkH19)oD\Cir,Mkb72nT5>p8LNP#Od'02@huj_:qA&kCL+!nBM&Q'B'&n
%]1ms&mWY-+n%A*I&O(0JgI-;LHaek$f(EqOhuh$3c%C4hGFJj+h!R'254H/<4F"nZ9Qn&@\U+n6jmGEoa5(@D4,:FBKD5?32@JBP
%gMI_=F19mTpqYX%Zf%C\h.FJb(T/Vu4D1V;K(g1P/9p>l+-qr[0j4!sTA?B\4#acGDg,N2#P+GP%dIh*-FJ7Yd.ab+W-,?!/9p>7
%[qY>_Hemi#q[IZl]QLBH4SZ_"DY)eWh8^kP43+o7q0mGkobM2ggIK,.Qb!?(LUt`_GQ)]R#9W`i9cgt=VV=4X7hmom4sV56#Ode9
%ab+f/oO7$`O%G!8/q#Vi5&d:O9_cD1DDU6=W6';qSELIJlgQgqI14W_!0[[1!)4M^i'B;In3K^2#!W59RsQje&7YW>k;gM)k>XB2
%"Wj$2)K]B,<9G(n0P;`6,t>^F00CB;Kr^Gd71XZY9'(S%/9YMF]LUQneSE&n+=mqtgLI3%We,e?T]G6,NYkEfB2gH"SV!j*-Xg]Y
%V"k/_(nV"gW5of&%d,`c+8QRKPlaMi`.lME8+B5`E.H.t8.,q\L;BgoPB&#>$)9I!7K]k[(.T-XdDkZU?(6$)d**[b3GoHD0^P(P
%qb62gGDYU\ZVkqa&FRo"rT?)PhCVf:NH$;&BEM6E[AKaUjoV&Zpl*WE3*%YEGWQGp(rle`-aj8b(7Q*P.-6(Y&YT8r@rs,656X%>
%O%L`Q(<dpZp]U7$U`?J&UKV:s-7J%,NjBmR9`0rD?O-Jlg/GqSN:LHX"h9!(.g.Z(D5nKm^bOO_%QkKN`9Xd)'#CdW=bLCc"k.O@
%&Z/tBP:ZrDZBQD5%,hs\5rT:=;P=%l'JU\[h*qQUg=Jk*+"Kth"o'd`nD3\R`HE3H%=Y6t@:=?lSI+/W$bL)V?N:UZIYj9Fk0mBc
%Gac67aA!/ZK5ZK`(#EH;nnf0BGW;JAVWl-]3tC\>4$(9oJm0JI!>_R-"$A?"f\+dM$H=m$o!9sn^4Q"p:jX<DP0M&QYc/H#;YM[s
%:XK''(P#c0EpFbt*,%[hh=8(AGb#0hJ/LIpb04q\G.&"kkg3,^\hHu*M0+?S5lq7c;jfVqK7/ConJ;Rudq`<ka)L[<lW:gFMr#5J
%H8$6%6"?,$*cu2GhMZG/.It<.9eLju1m<,j^k9nZG:9esr'"jY@'C/*ghrSHeDFRoK9-f6CjiUolgbA+,/I0P7\dd:'"BDWl/<Bk
%T6,+>gB\0d4kO'3)r(>a],a'IooUO#BTYm3$8hf5(e>o^<M.'+ontOq8NfgaoC)dO\Z<+(EqTO*ReJ%CEdn6q>,Im'n:AE,EUYM<
%cXV:Wi`.0qj)>LJ<iY\+-7kFYa0,\D_.5N*OO6Dsd[K*;&b`b]M;F=V;RJ4&]Cs[e:?A)b"4S9d'A::C3o`Beemuf;k?p(0K*e$3
%qd<t^4hldWS]MtHbU!)kaE>:;-Tnon2VY:A^MX6!1"baeP[bNlOdJRhV++,H$=f_Z@N;`.#_Q?G.gcIJ]I8m@g?b2BBQr%rE;1uC
%ZA#oGkcK4>MZgiY3k].S^aWp2#^;?NO+R].cW1/c$P2@()n,f+eH-`GWu"%:S<i=F"qVRUh:q)Yl\Y]X9S#fFHI1*+%&dR0AK7ap
%ktTD&UAp%]*d#d0U39Ond?ObUW`DoO"Me-)hQ.ZeeA0H?VWXT[#:KpS=D[,];uQ;-F3%m0HI/Jj8.t!HEW^1GJ-r/CC0ERH"%YIL
%jO^Es5a;j.m`,laClU%hTEH3-[noA@\:UaVkHapjIp#+4d8g6d^t"Nc/A+5E+=S!S1kF;.6F[ua^k:n5FCu,A#uiT?Pi?<iC/*tX
%^a!,PeC=hT*R"*@Z2lZ3?4W&c@cCQt\+i^"P/jD]p`+]sFWN\#!>5e'+ZS7F>sMd;\8\6;%>"%g[*bNe<l%M-s*-M<13m]YOdS63
%j5IQKd'hQP(q<#Ok%NNa2/A[I?XS2gbQ,nHfUol%lUh8EQr8%%\]UC>"%B`!.R:p<YM9rPiC;J2!b:3J:=tF+7C]<W5]SF<p2X`%
%%M[ZeZ3)?0MTuV$)91DBC/'80_EH).)(5u+iJ!tA5NC[3mnG\pT%*<J%CfgU!n,<;/&eBk!,3^YoQ:.m5rZ1^pc:Ap_Gk9UlS]RU
%*FaL.\b6]8*_[cm;C[n4A/"s!-(@E?9l0k8,edqih]6qt"Gc1rFU,q'_sME<(?&k_Ss]0dK?g#9Au1XBY8?L;O?`nS*>]%r&6`)Q
%GZSd5cB(fUo3fDKG]6?g;T\1+=/1D:dA_Z#I2LY%!W[I]KVY^f5k88HIV\6W3+06B(*%2uZ7V6a(<*kO!o+9"i5+L4cW#,'Lr,;F
%_*,aW1CS4YAS5hY!kL\:.N-g%.KC=7%o9f@"iT+C/PN!.l='pm<Q`5sK5@ps@_/S<]IR&KQV3nr-M:ZXckAo_6u^K$)rEkk6j^"o
%7WlfS!iB'deB9(Z5h1K>=qJ%u<=9'LWN$]1C&q%elLV(F:"]TE=c4],;*YN7'G5UEmA8AS3&ng6Wp2iN/t`l]hYM5g$V3"qR@SmY
%>sRa\]hda)(D)\iWR/h_l35+4P14)NS+6^c7k5J996g"`:/tEt;o!nh.lVUe>m1=^X"AH?%#DlBN<N7uJ4Pfc3V>l,+pLZ!Ot'tj
%<&($j:?A?i'a$MTmNl^K`IMiNGoTd<TZa!WON[qbFo6@e(67Qa+jguZTX1h:34hceFRU`^\o,h"+eK5F^'Rt_[1)9mO@G?uJ]8(0
%^^4'N6!#ibDCH2U?W5:$lqQaWHC)M;J<#qpo"Er5<&L=dkueKteUV$F-7;u#<$Ij0``*GUWGA.8=cl\:m&I8j?%9/9VhN7tKX*^!
%->6W;J>?jn:5#ceTQk.E1WX]]",1*EfX7.1_2r"N\fcp1Da6RZX/S,G(ng:_=#^I(Rh>s`%I6,j;r^-br5dDY;+1t.EJ`3;W(RpT
%_GQA?H9a;PkI+3C#DXI3@<0ksciMOnI]_("3Zt-8F%[ap9K,UDmXE-?3ZnS_i`s`$f/cb)1/`hF!Ymei"2lBh,"#En:o>dC`,!L9
%d.NQ7Q;1/f"$2^E#?1+W8RnoL0I77n:n-'?>fd*-!U:7-=7^sP7E/=n!)rMT0d.;MNb,43"ROB41E`9ghb8/XjLWX6jMRhF7pPE`
%ioTedP,j!rP)$CI]a.pBJBXQ%;b5O%%nKHQ7-TT+rW*>UfMufC"V=5HK$0`8?_T%nOB#6:)ElJZJ<oM!%>:CZ/qT`q2m$?pbOt_A
%1'k6,Ekd?O&<qF_<$o71DEniX*(:7RXeP.j`=X(Pe.&s::Lb@a/T$>a>WOi^(d2S3EV0l6:oc&sVAt0g.9)^M#_#-H%)JnW'itlr
%N+/3'Vq'?cn18^ja8s[-h&QTbT)G\chSOoqg+!?fi<GbT32&MOC/?KRBo`m,V9m^\;#?Y-gaki07W?jZEKq+;68GALMH"5',6X!#
%E<OgoQ4_"k<?sYqqHpa2g\M2o5gcC)Q>c%5.!6'^WJ:HQXaNjgm7=\8]VYH8B@=[rZCQFSiTMI/I1csUUXH$h+Apsn\cM?ia]OU+
%Ol"q2l@NbK?Q<uGSXIc)XB6(8X;d\/&:B1-;S2F<J&>e&+7WPcAX\96mYMRXN>?-1B;U@ZeX7rH!I)l7>A;s[m#QmKr'07'8"eIK
%7ubUmS*Xd=!p%"6aX9.3B%BHgKXcA$htt?$"t'M#@O$h6`:"-A$*NL`FnO0q_J.cMgV!j%$F7I!F:,Lp.eO)-q:g2j:%g0&*)*<i
%aatR/KP..jIRbOQ)r03.197[RgiYKk0&(QWgV!h/-!?4pBQgi:em#\]?F_XOEO'.;N[4<MV@HI4gN&2jkjpC5rtZRS]jdi>!-)Om
%5\"$jFjG.Pd.Z$YpBQ"a^0_P*o'p/ZX\<2Upj;V/)QKI6g+9CRXKT9[W8+uS=QbIESEISh]GDe"=>.V\o%W[1A*60i)(E7dWR"lW
%!PE"\X<ipU^=C@3^H_9"IAbkfs,5mBb4U3G;I_>1gLsO\(o"f^!h]!kFK4MQ_ET*XPtUoi\kp]F_CV%m]l;>tpE/X7Ad2(HRjeK)
%"BSFa5J`7aYM54pkOV3\^<.qlI_D#b!E9em5m(]`/eJ<Lr[tG]@SArg/sNEL?;17l\h/p,LD#iHI?h7"n*@BK"^nD5jpPR&0r]\&
%WF/p.$>3;f%BE4hg"Q@(b3CDJ2V"SthIE?J<KVqK<+S\k6.PlMWDLj8(UHF#[dP<RlS0-j/Q/;?m;$i:WP9"ibR-%ee'&mV6oNL&
%#iVnQ2G_.7dcHd*gu[c&3F='I-GNkY3<+=)0gMCjhBeV`*8r435e`7%8>2R9LPsWE?>iL6qHFj$FKYjCiW&C^R3^]s&"-6ZUD0)?
%5bf"r*/>uZ)5SIbXY9o-_[r\A"dUirH8XqnXG/H'U$>=G$EA7eI39ViKIKlieV.gD^#AjDn8t=/^@&o,K#nA>Vun@X\A;b#rW1Sq
%Ni<=K_8E?YO1`;k[6SsMjt2\Y"=>`<K+g"]JV5@(Fb)q-0R(>MQk7@I,V"@:#p^ob0d3Y6cB&/U0T_(nAhY&(&t$O$iXqQq5f+,#
%`F'*E?lFZ%jhH"lYGXbm@l+7.#=pNM;[c2J!g=4TTa915L.DGu2;g`;1;NQFL*9*u(kj*9TKriW6Qe)hbZ5i0#`<>+$Ch,&E_FCo
%4B17ff2u)J6hl5J6_e3:K2;"+`A!^r7p(BPR!.C4X<@dAB^cVb!!BdR1H^=24OhL)LMR4U(rgY&A'b64*fR?-9R1T04i+rODiimR
%m7_Kg#p--11*>;ub^D1b))1m&mHRApn.*(\nQ:nI>.W<q-7]r-6d0anHOSm'0tbU5ps\)sI-ZRO![]R^hu`%#OOsWRKYeLlOTfbu
%"r>;/26MIT"XL1"f`re&J8#A1TE;Bnf:W1rLH<Q\#bU%Krp,\*3(m<dUV$cj#p-,DoopP,$n5RV",SF6ie%Rd:e2Nmi!^up4#36i
%*j-(YbY'&Z"\`8GnH;O-0SU6?XUj@n!c-G=ggl*649cHi\JS!/:k)7CIQ8V`i<2iB:sfD>R39<KbaC0)&hn%:(e]rn'-r`kBbMbR
%J9_gJ3!*\eO>$a5:6<PInqeE>#ad_?09,<)'gf_&$"F)=djIZd!Ri5lr.%*H5+lja%krWf":o#MKctPg.24%LJ2n<s>%8>%0lVYW
%'I7RHGn_N?J;Fu[Vu^L.OIuWO;NR7Hk#*$`"u;Tu":QuR6H'<dS&,^i^ha>m0#0"E&hTcD":GL*Yl[Ut+JAk\W%^[J0Vs@($8AB0
%`!J,s_AFW8X9oRd^q:#kq_PLm(aG-Q(%fYmY##-#bcWY>#;EiCKEj3GJj]ht_87$0^^LT\Du`ff88J9I/4aFSZRh&t!DKgBJH;0O
%6(!,#%ugp(VM4!W8@9Qp!R.r*L'03`JqO8;)?gEQ-qM5V"O1<S-<uX7!+oIQ633Hn5p?>sE^9a-Quc\p"(9O\#m4Sd"c3:gg4_6e
%J9_qV#(VOH,Qo5g0+7j]9YDSH5BAI`rQjO4,Q#gR$T^Uc?3T<e$QH$oKp2=F%Yc2,R=er/rL&@*BRcmf&DEb%(e3)KM&:p<B-mg+
%<+Ve$ns-a&o[6FQ+H6?<bkq6uNa_#GR?+'*I\p6Z[_K%tlkanK[:Q(dO0CD<"W,S4]F:V)R?g-QIV*/Qb9ABfOSkN4@AN[dQ_=o"
%Qu8T'IYEI4(KfQK1G4&AQ.dTh`'2X+#d;SP$mVsJ#o\KIB8-WT.nn?0lW0FK6+^,DBb3c6U!pY<UhLZiX3B$Hd.to70[fYge8U$r
%-c8L;(Hh%7R$HVD4>od.CUh3KY[M)51Ln>iilp*F!'=%4']cs%re2W3Ui$G>E45f%gAjmJ5!UaI43*Z=Z;`#Hb5rPJj@P&c$u'S^
%S,4#Np\#PUC`pI;X,kO^NnU?LG[d4a(l/:V?5`3fhX+W3YCa9'[M<2-<;>6:Dl)]6`$JoIZJ[Mscu[C[pjHuD]m*"Sgj1_r"Hu.K
%KOS;-70eM2*`M?_h(BHC_ki/_alb&&]?c@)G&ToHK&M,DnX=mcC\fskl"3`[0I&a2q/$3a'U^p>9,]uZ&.r5sKZB6,2KB1'g\*Ke
%2SW=XW_ZNY=qR0m[_mGI<\G:XTs!;5G'h+uEc4UHV[:@l[E\%1c)AB?G$KGMLPT.db)GEUI>p.8M"aCXIOsoaaF@XOD>Q*\6EZ/$
%nsb07^K%JF8q5_!lmnOh"?9mcEK%*QB8ObaRe>%"dJn>MLAIA/P;OOMYUi8GccoLfolMGp)8N<]]B9l5J%j7a8$)[5j;(l;ZY_#O
%-/0,>;R,TX)b.qP&O[a[hLOfU#^%/6.K]LO!#iZNWjMZd%3H_gTORi(m5t:b8L*j`,c35Jji@#pPC((#Y<I-Ffjj(l13V^f+!Bf_
%pNu]LSh`AY9Vg#d0sVIl$e%$[qDFp:72#p.$Ss_(Jk$eIHk"DJ7cdc6PqFCfhed4H-OEg?bB@8bP]/[867pE=Yku`&6C]B,N?CYu
%h]CDq^G+%:%T[E/[kJs-;F9c=<@&cH"0l'4,]eSkRH/O>WS2^snD$4M/VnfEhe)\',(e`%^-c6Pql6=G'd%(!BNn`c5?eRW^T^Q,
%hnSO,W6E6RcE/5dXecZ7<$/d";[s5F@s.p%/Fs]XnLWPuG$t+QSep?&hfQ$6$s=m_Vcq`LiX4*P(,VMTDH@:ek70)eiiraX*NGUu
%?)'K,2.`<uaP)AC=4J;1CYL"5'dmP,AR!Z<CpCS-]bfuplpA*?Q=[<`=ZebHqPiSVgJOil@Xu8l(&`*VcQ<Da4/>;J-I7[%"WLF=
%fK(S-Ts3pU:0/"oie8T=gbKi=DO?WkFk4T:R_(AVO]`HgB?.-@=<l:g]PO3Up,k3=W5A"17D#eT>c?1kB2IL9!XX,[R/6h&/j):n
%[G9%@$CnTg<_`f6cr1W0neRM75i7lA%p1?R*FYnYK!^[Kc,Rho<J0h86d)cSeHP^TePZ+Ed@mk@HCaETHr!e^=`[+8mt2FW3$J<=
%[RFKC(9?3Gqsi-LpmdfJS-;$s81%$GZKk'1FAH,FhG@t>T2D.bAgToj7Wj0\V[]T&8@T"\Fug6]@-)Ktk^r%2E/6Fp&Otd%&b+QK
%ZR)W?R2H$\i4F8F1+r](QZM)V.k<riGuLG_Q30cB'rR)o*B4-2JIbU'-1IgE/d-8_$^mTS#m$cXH&g:=Gn@ESk[r.m0O$JX5A`LU
%D*ENR#XkrErlfmH<:ml+^P;@c<9ql%+$,Q,KVSdLlC3'J1'mtVgNIWMom?pY5sL)fOQb=Q//MB2Xh94:Hr,>kRVe&/GSM1\nOnab
%R#_4RdT680SB&`QhgK_Z$prZSL#UiF_,"W$^ql]>LVD<ij2[GMr>d`A*`\Zecnq0)i"6sC!+mkYJ6kIh_/QANpC0KOcEu)UF^7+1
%mKq]gOFPK`4$9;6WaAQjIp5TEK!0ffk:No*),CP'a)=LPi!W4rR4MjaI#MI0/%?/9]oJadY9bH-k6Fh!QRN7U[/:&bJ"5[7)`CJe
%Y`)Y0AqK^\`fZQLrN/D('ukn-_u9X=#Mulo$0ppRo1/:q`BS9[9>#)sH/c3B5B=JI7?*/1p$uQUZFVac=oXWlfRI4s>ETQ`hkYZ^
%]FBU("SM:f>=<r4?XXOf*O2?UM?&FBFom]>NW&'flb3Y/j]qp'kQJH->kB>pn;V#IJ4EG9KMN2=77iGlm@T"?<,]/l$V`]0mPE8P
%];QSrWbo-/2ZXRG="n/,IelC*J?%,9RX7d!2S#uZI4dTIq=Gc![Q9hYm4a*-@'ja3k[.7A8T2BP'1_u"FW$9AjbC)a57!)&'uE$;
%`$]Jm-b\+=GSiX!)LMtW/f8[&9'T@QF?#Hbep@@N<Rb_uHON/flN&'G<a@'?G7">5-#gnOKg&qSL#WpW9mnpg^O`Y]BA]n1(UCke
%-Jn*6RX(&8eng-!Hu#&hS1W?1LX:k$=hd7"D"32coO$;)fiHISe_BM90`l^.J:l#d2:%kE*:\.:((3@.-a=MmZhD,5C\Ud+%JNQR
%EtJHsh0U17B/W=I:(5ElCGC\73&U>ep`OZQOb]-L*#O!M6K&@s75+"LT"Z)W_EJ&^:<atoM]aZpaOB,g&Acc+!>\+iQIDZ*DQA;/
%F['*eHsU`Y'o^o21[SltI6XpejK%l^G8$d,_a*6aQ>jo3:NP4RcT@Y)gCuLCC2C@2OdAa2NaW^Z@6(&3OPC^aI0%TZG5)fWaglcj
%/duCfJ;g2c4it/irEIo$+/.%/2`,0*UtGY+2]<S"9FHL@n)Z4V9EoZ/=.7H?oH(\23.j(u%:nP=A@ZT_kY!&0P!o?sL96Gh1OuHX
%'eS3tCf/cU2>_1JHSZuaO.Tk@HK6WbphCIn#9,]i$U^*Vd9t"5le5CP!EQ*6kgWAbWM#q9IN5*h*fELU>?$\7"ebMF9SeE[h)gX[
%D9LEQSUJ1a!;I!k*XDgA$mXC[q0eUI4:6FZ>l;_;7+CJp1Xt5]]Z[r+E1"/Sk12]5&jQRbZbB<SeoYN+"Ju*6IDlUY[c%/tc?K)^
%#1h\SZQ`Q[.CHunH`BFDR;5knZ(,^uj0(<^Sh:2g(1qqA.1YgMe)4#[PP"!af$h6gSaBU,a4YrR]+I/@>Q!gP+40?\kWmh5<?/_8
%Mtt1Zhk,`ceWj!Dh>mT.e55Vj/c(NOCqAt#NmAeO"t/X^Ds7<Ap[*\-8JFoJqs4]*%&WWQ=ltT8m]]:8geS!O2#H"#=2gc.QXfV(
%WTMV<Pl+d7"u'd$^IjXT@>X:H:ie\b"\Ds;Zl4JnD]a4a>\[EF3+O1_)<u(9).t24H?d4n?aspTB>en%[>El<l56B;gT//MFI'[#
%Ge>%4CI1_H&-m77+4&SOp*SCA@5C.@)DjZ>Mf>']A-0T5<p9q_[rCWCa[M!R$Zf4`C#7jU9Z/1$;qRu;!+RpldGdZF':@?;Z@kI3
%_ZY,8A;'@D$-^O05kB'qL<Y@qYpc)q%aNPgo=1Vs=aYK#R>rj)U5OOXZn5H<2JU2m(&Pn:#Eo07a*k$Q)SWWRfH%3jgRE)`IrfRM
%.6VF^=d^/4ADS3a5f1=]'jZ\KaLYadK8*L+CBS3c3\O.oKUtH2AB\XDh^Z.q<7Ir#-ip)l&F"R\+nQQY41^!@V-DG^^X^?U+(U<p
%Yf)hb(BIVo@N#e1p_tP+dr-30@TJ*+%i^)<O9Y]!TN[II+"B?WZF.D8S70W_:$,]3/Fk<sp4+(;S*0\Skj)ou(0eb*6Tt0tX-#tE
%3/GkY*8li;(P^aR.3f/sNXSY&4CT.5>Q7ZX+86`BP>QSq'VbZ:Yr'8mPlnN^L!nS(r<<(+]Js&C9IBn\p&WsBl*gNoQGYZtNI)]P
%^`PfYJ@/m73*(#q=:HAgM8s`hq@V,-,7'@0^3V)]#a6.[Y.e$&K*uM\E=Hr$K/CP=bn%"_'?;X`4L;&o2n;%?<C)Pj_^())mT>!q
%cgRoKFGP'"_*N"4=h!ZQn,;X/Fl^+W["#djk*%ACf<Jq_=qMLm=2E7h4"JJj#!i8&,jJp\3/$lM<a>Q^f:Q[$2@r^W;iC#_qG:KW
%eG5&Cj;>/D9WlEr[DD5I<:9f.Vh`A,g^m-4B1k>XJ]Q(g_9Qr,7HcUUOYLh!A,1AGq,slj!5BPk;d^Zl#@aIW]08k&J(qX[Q.lRI
%#<lO]Hmocc="fG;%f.PH8bb:O`p[Mj248A"q1/hVYC[.G4Zq[U+8V)p'Cc<]`7T_$"4U:X2F@*$$DKP^^hjMGCE?;_a;kp=h+HU\
%%#KgDf8bl]=S6h'0)Oi'eq&<u,+t'!a+N+YE>)bYQBTBb583rm&.W]BM#bYg4B^)WLeuU`Ef>=k,:F(cGo-"YIccOf!GdP?iFL<q
%f_r=/2(@;A921o9OMl!YlHZ0)Yp@9`Xg9k_GPKfl2r35*,AcnTJfm7)n[3UmP=K`GXfr2Q-F"VJ>t-NX<A&5u#bbhWYuO+u:q^7@
%?0#Z\^+2mqgZ#:_ic<YmOP.s2/6LI/X@-mVYf&S_QW^nl;f2bqN9tHBJKE^Y*`Xfu"#f&q7aXq,?k-E3L7=$44l4pD!eI8`d`T]F
%V!:ppW;=)*2GZK@)R7GM9jM>Vm_Cd*5%?I6omfIg,&"!Z%cm>q(9,_Mm+`h$SsQ^)GcS;[.S"q7?o_k4q!nF:FCuX3!Je;D@?D"5
%`Vt7GR"*F/Ykm'u?+i(lKshnfr4pY]MCn';oRknuLfASLMk>:b:'`S0.9o"HS+S9n<#,il=HN5VEm$.Ko3o?U;XUqC%KKZZ-\S,X
%L+*bY9D`=uq#"7OM-,1EI]+EV[7mik[lQ*P_*1'Q5a\pL$"^r54a+7br4te%nrD'?]=1L6"lp5]0sFebK#kGu@+9V\.bgkm.'6ST
%bJp^%B7JhiB!7'*kV]W;:.SH'm8j]aXOKY>26uXq);BqUHL%I>kHioh`<g5gi`MkWGo?l3gZ.kX%WQ=)0dp`"8$;dm-kjLQX;&^#
%I/mieW!<bS[Ur"d"GiSpPNDMR;Yo0fR+dH]DgmLT&US\=QJiH9^r,:Eaeq:,)eTF!SRE)lHQpB=+]?[9k],H0@\'bh64\$IGk7[M
%5u)'AmDL>;45`-h]KA8C=+ds+Sqlq&mjZnokNs>_pY?NO]tpi7`a[ZT%#+i%B[/f9:<ci@)pX.C,p=$#euV1ODhtSP3>Vo!TS#-J
%S'@#"^\<IWXK0Gjf55H)*/j#PjG10dJjTbCCClNJolC<4PQ\$,0JULDP,6u8VNX:*+7=m5>SDfMhBP+6/#!BujseXcFn]fs/"AZZ
%PC9X,LC^<Oh>1Ag'NQL*pe=%k$]ktt]n$G]-gtQ1pZ,u6%^`"f%\uY,c4AhK&umTl_FKLU7kf[sn`N\U^?4%r]8ql_h43EiGbbP/
%h#\lbgP2UWZGla,$d45,m#KWck&."!0([C1\F7TLJYZK.7lD6in-Ed:/eJ5\(h2tY0#J/8@fs"g<uWe\Y#Jd%NM%X^ctC*n`N?.V
%T=D#@C45Q_,pP^1gCr)koB21mo,8U3UtObs+KN@f+3m4-'PCdG$?1%R>,j^26E1,R:61Wcq0p=LO?:Mf;n'W;1pW%j'.o][:R\MO
%n`+i;Ufb2JaSb%PT?X00YS6R=OT=bGFie]=a1`8:C4NVUXY16M\uE^Y?kt**.POi+(e!4r;V$\[*U&o_AomuJ4*"Yu`39pRXoI^l
%A5F0mp!s8m=t[$t"Lf&@aZJUQW?)>uf6K4QiT)LkMr_c$!\%.9"V2+``V[^,,ESUj'-&J?d7he@[ai\/0V=M9PlrRRfHS)^d)/+q
%=Ff<LA,qnqW(&j]F!'Y=@Asa5gM@I$n;^hZ@6Pnb*'Br-k`9pC$L%i9pkWu;bj_kA1L:Ou\\5+o]":5HG8T-NVoa"9%3^QbHU:ON
%aIR4S>3d8$Ne899I(LKd=c!$:0ar=F!ZYGKeORLZHA8*^m)XZrFlEGM^uU8Qo79q+OO)eEmZt!6;uj"d#7CgIr]EIZ$)CjjmmKi$
%NdG9$MNu3G'-><C[_nHGhG#]hH'FbOqVt%Q$>iJO>YeusS=Bof3.][DN4+V3AVEPt.V:E)H7Xd$,q9,hU8NWe$4XPI'Dbo]MbK0o
%2d[U_hm9&jN17jaNDpRH*Pb0U!p1#LG5&rr"e6K\H"WN#5,L!!%Ld8W</^9tdt"M@"(D?R6&^3Bog0s`9H!WBqVrdjp8!&Hb?aN%
%!,#HXAc6Ggor?!6>%.JYhhD68pjs)=@bT!@Z+q\jpGh`sFl8@Z*u6c&89VB-P,ibo#XM:]NBJI)LMEO96g>2Sa'-\m8Gp;Ug3WFr
%ZTherg\E3\/fak9L3FUQ??SepRl*FG^mY/3=B>kV`9AdAlW7q]lItAXHVr"<L[u_R76tne!mW2_]lbIkf'&sZY*U;FU%s;t+rd1[
%NgKf.Y`*J,s6Lusj<4L]nuT)*7d?oR<Y'Y(`UIE*M42feG)oZj0=(GYdDKW^">[K:3D/4@65Mj@q:Wp?;_,@9o16?/*5!8_#m3oj
%,(A;5>e"OVW$^uf#^Z"t!#G18Gi3ksVgW5J0A@$3jq/Oj'nK1Le)XZ"V4W_'E7f`X(97f.%83q"QH'HJ_89:?qi2p1LB[:fd>!\t
%9M3\/@6=A0$aMe5Bg3kfGetobC7e63j2!*bA54ln+^d48hb>g^+K>r$V2kM5i3X_`)n[?e#&DD5Fn&"fn!5g7j"H-Cg\1AY]PT<4
%,S).=,<4l!%'c/0%U!US]$F\A=rJiUr%r/n?Xe%;=-#)AJ\Lja,Yr.!(?'%V$Uc\U@^D"(OJ"49+A'#Tjs+PomB1L\&<WP$Y)t_h
%ZC$tgZ-WA"RC32?@Qjbe+W$\Egi9Vf.U6MA[jfmKN8o+aFEnjiT9,S?(th"U&:W"1A1<#dB*l`XS=Uu')9Wprb_Y*hcb(H=*',rP
%'2CsmSM<31J;oh:M)9q>D,)'TRU/"D*d+fk`q2k65rMP$(h+#\2!Z<:=_DO+>8J-'#]fmhShm0#;jIF9^0Sr+:*uN6>?eC,MoF<N
%b\TcV_K`k[nK<+Dn)"J:jmn6:1+$:V"LYfq/,HfcJ4Pf3P&`*eR\r)3frnU57>Bq_TBeRP#KZc2\*Ea`<:sn4qYPlN5fDfd7V?un
%/V8n7'SJ@adH!:/3C,cQe?W4TiPZ`4]-V:CYJ]r9p-B&UG*t1hhnG.jn5Hrtr<C<$E%Lt`>D^(WpN_,7:G2moYR`jC^G/b*k8J'b
%qoZ*DA+0>_'>7Y/\b4/kB^pj;Qe0)<^;3_O5j;n>Onr,W)a:J)ab+BDNel!c/^_$`MBUDV_qUgY<q^+'H=XQWoD*d>AJ/-4>+AT2
%\PRoHB#/K<4%In8eIOl7Ghds^5(1e)AU9",pNk;u8Jk7CS&3Wa3^^?GY<%40Y*PchAS-E#.[Z[Oq;u21XPc):hQ:<HN"%)N&b6[7
%(Mr5V4+&U1Afea(k,=[/WOA+jb$MHC(&Q?R+*3Qop`<AU$?M)MfgdK.JmSV9-3"S1p8OMZJ6MZF:fZ#OT$_l:UQi3h]4[?G['X\`
%@SK1kWYnNuaYH;e%==MLV5Q9$Y78$Q2cngiFJr>AQ&4E+3]u$'s#/7goq$r<i-7=O6s4!-H7ncmDCn;i=[8&]b9C]T^)0:Deg['2
%G2c>+9C6#@1Y[18P?8Gme6APp<9m->oomI2jhd7Bb3`)93^,L1W)CDFXO^UOY]Y1p.U];\W0=@+.nFGYctn`R>r<Om41$W`=5ACF
%;4WEES%ZtF.dI6W?8D\`g06-RUT0Ud]m^ScX^&qJX4t>\k1>fo(7lq_>9$&=GgC.iRYY_5B";D0;7AI,a-WVp)/QXMkrFZT[UF)8
%m/s(gSL=t^lnH$=G$m7Ep'?%^VCqLubjlon`L,P/MnW"LpM1T0,n(lWWLEe9p@\q=/PS[A5V2J*g)qPWK35MFKcqS@];<epHtj!d
%V0FFnQ'Y$ilhIo^K9]V3XfU"mTqRVWc,Rho<J0h86d)cWeHP^XePZ+IfqYjVHDSD*&:l]:FdBUV;rKJTs(sY`?-!e^gV*:@LP&)h
%/NFs_Z<FnCT*6H69aY/r1hDgl:n;8JT`'D`>ZVG70L`AUQDPG8W,J*&WGP*SY@/W;RbDrQYrAAT[e7%l9;X,;D4.BXIiG+cN38Kn
%(8k9CAaXJjO>C]KBe3+t4Vj=5U)UZW0P.ZUK@_kI551;l2BraVaYRM9c.'*MX$tWVIAJgBC<)4G\+S@:X;3J"c0%43C@S-HZ:_-&
%Rg!sgU8grKa3Xni*4lBK2d;`EnFm%-k9MOR6/^2N#3&d%`4&N4b^:jmD0lm8PfmOuS)*/++DnAMpIK!p\&/]"ZOHhOeb/][Ks%d#
%K=_Sug9G?Y62M)U-]n2XB+X=DY$>e@eF`oi7/6\H8n^G^cqn7RTXr#s)XmOqnGZe@ZJ&aV8QdW;iaL:MeRJ&VcS.%@[0)fmfk+m+
%qhStBVL8(TPe'R\X^\9.D:V]2216rhothEmhCq#G*M310'49(3g0p$Rb1U3]OI4mp5CN_WfDI'&`M2smqOU3q['o7QW\/G"p]N,^
%V#]QXodDt4So44oQkl=%\[h34qr/LO?6uJVq%fEp<3Tj!\RKED104NA9'o4:9<dBu$Jk&)=>dsN'Z>S+`00iIk#`sUSZKESTVTQR
%Fhe)]PdCle*BXX+,`D(P9nrdMUP0^(QH?c"@VYVA3Pm%?c&-,NN0.l,QL61FLumMtObmd@-?&WI/Zh@PI:@RfVDaZ1/)ap`9T;uW
%;s!7C2(b-\BA_9=:##.p+dP:AZks7Ta]#9rRMP4]C\O/d2(]"X'/?AQ(/$)95uLG3Js^eJR'sg:j'"'mBq)A.HYL"r]I9X'P[`@4
%9MLCYnK^1dJ!HDP<d&Y^jpWBh_=F;jDo>D_>a<\#?3i!W`OE1ipF4(gbuR;/,_VPnV#bg]LA2&5&sm?:r,!A9=/fo'LDJ38dfMMF
%:oB`tD7s8i^eQa=^@sNqGoLL%FFl]qbuE.M>Mf0B2:]($ednu'WM[Wo12Y[qKUNYaX!9B^Vj\CUJ/+Nb'[#G4!U3I2+.b=b<FT-Z
%5LVJKMJ8QL%UBdticD=LaKH6*@Qc^rZ!<0#Z$VP^H+YLaLT=uf1,3W%_h"4Zg1G-YN=s_<qc-8BKMk@!^R+8&'[gFsD!;+1V52):
%/V/="Bi-oq@&B)&jklcAq,'afN#jMCcX3NE7:hi[1mPEb:U$up+Y>0V`lRp)-*=;NB*>u\PSRcggnqL91P&V!Bo/[N[e\Tg8SR_Y
%Umt@UM_ZB0N>o%GZfYMR[/aa^?Hti/M`%*f2btkSN_8HU:=EH@Mk2`6OR7dg(@+CrUP+raqV-[GD.mX#)7@(A5..c+-@t_@[C"M+
%iVK!H=oe0J,5Tgl0Q#[bY>S#/PJqZA8rG?55E8$%M_E1IOA\`0O3_9,;G2pDp566"WMRjX5?5!+5d2Z9^CO!lf#!-C=;oLbdUM8m
%]:r9Q2A6@C6t6L:0kspb8Khq<`.N30&CP%W^LgP(VNB@UlX%1PUht",^<5XY^oO9<`)96DG?LfkdW1q)4_e[cITqK1BPD=*2DR:7
%ZD\Z,k6/"PQs::n9GS4+Q9RZ^M";?;IpP\;6:u%"*&d"0V'YU\.;`AO;VIYg6:kr?"d(Eh;Hb,G:a:lnY[bjW8=&b#8834oPks$&
%/1Y<4NVg*<YT]i3%9r9m.BPJFlCWGrC"Z'U9$>4L/Zn`&'[m[&26G]Ri]Z]]rd%Vol>D;j=q!#!@J_?c>'0]h16JB$G/.!8CX^\<
%DBgQf;[R006)j&^djjK`>$E,"4S]UAX^7;kg)G3]WW@D5>>>#mHLh*#GT"o"f7p]WKTX"%@0H4Y%Iul-;I*oB(O&\Td+B>3;Vi#*
%JL]H:R!oN.k_:Wk;"e9WGD6eE0b>Jbba^PtZ&#rG?L"nVX>UBR6-$MdL</0'`%:+B#Cj?/8&g;!`?W/5_d4G=RThNO[,K1L5\)M"
%/M%p#rVcG=S(V$OQo/;:nWXhiB00AV4IL'DWuu1O+).E2>*g_cMU>Hj<X%p%D9M]<(4YRXEE3;'VTlVPCMa'Vl<*3M6_MkdJ=>F`
%pg%A.gqc3.^6@33?f(F?!cCL*onCV7AacH48.Ys<_[t2KVmuiQ#(H&^:)cNOL.'GsmcLue9:KZ*?3to$1lo+F$u&iUs!u`QSE/;h
%\!JCja(180gK=R2'7R#*EWN>4$hhk*fta*MV=d$(q;1sherVYjXNLXg>$$gQUKp%:;5(HPeAhR@%HM<04arS%cphJ=%IK9X3]>Fb
%T#75m;'@D:-IdXi!*>PlVj)csK/2`B@iiJ,ZP<i9PYOr4-2B:<0M/!9Xf5hM7@b^c./Y?3-V3bK"XXmb[n=69Sg^sT'eJ!-(-MuH
%H9i]0.6o0;8Wb3";9H\=4f.5E/k]=mDjB<RI39i%//Mlb=`S77p&-<'A2R3Waf6gYC/i!IppsH`:-DJ.Yf`5*?"M@M^c)tUZK`UT
%c)RgT5c[M2.BT'%AS`CDlE-De*os$;P#>i473mSS,flq9<$EnoS`JNRr(K^X!3'mgamegiaTC&RKIj3&-)jum:Zeog:`)gI&!P)1
%6BPek<O\'ae2tfa/SUK[;^s/MkG>nuMNo+(.XF]ELGqmq-S'eK:Y&Mh3[b^+'jl1-[]'L($WagDTr[PH%"(M&,HE#O\#d_EEjP%1
%8C4A_?H1RTXknBg_f6o$KY"7_3)iIDC,Q;NAUr+"bR2jN5(b^me8l<3BkUsTL6D>-1/rNp.RQdS;Ai*XPKH]J4[U)Z`flQ]&tX[h
%HR<.ISQ(?,mA)L:a\F<Qa`UK!RT*o,6^?l20Qa8C[jM'"&;D[\8O4\;:5Urn^8/,78Btu5i]%;Z1:)G2+<Q_R'dNP!.]q'e<-+5Y
%UuIU!VBF;J"U;A;[n:9(]m_"d)N#bnfIT^c+sio.@!-E<5T_^(0IbS##)0de!;%-Co!3`D#Sq^]p>00&RSY"tW!P%BPDW2u/u]*s
%5aQs-SXG;`-afSmTN#Ug5ns_eW)B%JKBdTY#/+FlU)BR"<X3!X@Sg3p;td1L-`/icNuu3YjYldib%4Jb8MZJB:U6C?'_td;nsOX$
%,W+hD_IuhL=d3NU01f5CUT(%9jbV&o(8qt1]$G"cc5QKu`Nh=O<Ip@eI':ZDK+_,i:?jd[E)P^fMGk(cjoV+7X?5MFW?,/H-fp[d
%G#G#*-BgbkjZBM(L%$Wikfru"!9R2mXF__`q-H8rj!p<N8q'YC9(nH8:stt8Jh$dl-)`SlW<=LL8gPl7:b"bb"&0pe3D^&K8T7Qk
%Ub!pJTQOBC6-4aW#c^9@KqMsC.IeZ".S-h<!X9`=,q')I<.ZSC8gu/;;+a-<(SMI@8Pps'abit&8m7HO:ut-F"=5cp,q,0Y.RB=<
%9dqKi;+a-rND^.aj=%F/A4NWi9R9Zgi^XAMJs:"H18Im%.Rcre-ok2*5tR5;%B:s.eY#Kt;@K!>-rlBrPbo.ZfBb6p)H06WW)BIV
%Js%X\'U3-B8jS^nV%cn^;G'5HQVn0ZHmt>R8siK_9#d)f:su'1c9dst#qD:\G=C5M8l4VD;[H(Q1e""s9aM)D>$19k<.^8mV%Qaq
%;bB>ISPfeemPLc5b+2E;9(J3E:pR!`Jgu1@.4G!j8jSY+9dQ_NW)SA36)>3Y'IoB@b+V]>b/#8:T#m]6:c,2&_4sm58g9Ne:gm8$
%"!s4)*@SHtl9LV.V%/`+.WqCQN7C1"oGMeEF]monaf)r"?E[u^keO0p&@>!YP^!tE8jmAnK!L2(H06ELbUUH)<iH0ID+YtMP,hQ6
%b%2_"c.S7P:h<b."Qan77@n$l$PA-$^j;iAGWnF1Y7aKSPtFm$X&O[#^Ife#3t@OKCj[]uLH^kn:uPMD$!JnG>:4YY90m\274G1`
%XOMhOV+N?'!2f*]H.E%.[7o9:1FVpe;Gb>1$*$[7.REa='S>2Ho+j%[?5NXVM:V,BFdOa2$Gn@lRm^/-c+X+">@<0d$Z^iEb']R>
%TA_$t4)kOACuAH#fV"t(GKZ8d+TO34A$@o!Zj"O[I[so$MDVc-:)!QRdF&HRh!F2CN'tdOR:ttY_])M(IZ"Cjolp&.5+&5_ErU7*
%11Wi/?YCL3[QB;QmpZ%E?s'Y(pG\[Pq`4o'g4?[')1oi-aa(aC^'>onEBROsM5e>[]S_4sm>+g1i4`:6,O<kud^%0c<]eLT+0gK3
%.][STc'A]>$3h2I?9qs0-rtM.%s,oGdQh"VpMB(Y7_!@Bqau(E_ff\6'c*m<YHUL]CT]jA6=5?K;_[>\ODsC&!B-Qf9-g76<#>9P
%"P1$5Gio+`EB_(m^_qRM&toVhos^dVkgb__N-@*4hWp!6_q7j/oH.Q;$WTR/eSHQD,KsoL>?%/q%HM!1<Nr-4MrDe^#G1[nJh9*X
%miT$#[!Y.t&e78*q^qTSL6b3'm83`l9pG<4J8[CFB3AECEM`!qkTi6WJJ[\C)Y6\hq@Qcon9X.#=<IA*-junj"kPMUb/2]bIGi8T
%(#7Y`aoBN?($m!=BW+YJ#M-Gc[]>8OHL6-Y2J?O6KB"bo(B8Y?b9!816*4_'jVT$JT'n`&E+`]1_;D?fJ+Y_#\Q-7H043M5?6fu+
%rM0Y(W3NIm:l_]UTS^.sh'1;dP*l3<:8r7_%9;MUFC#u[:6/F).%OW)L!"13hd+H<UQX,B2QK_0X`]?(Ja/!<OF6cKj=I-L%_dpE
%,/-&6S(Clq&c1sBQq8amZL;#r&5oO!R/NO,,aYe_jd,AKrUltM[9)+dq'M@)NjoW'Z&$#mdBa*1;'4HV@_tc\N4f]sM_)lR/(38"
%p2e(B@jq,2S;hhfm+out)kNYAI9s1cU%Mn)Q-=[^I;+PIe;<lQ1\6>!fb7hGqjahR<%ls3WKF,]5)7(h?'t"I/ktY3\RkTa%Sn`F
%g+$brdaeek-ggEk1o7<XU=lWtAmn'G$d:Ng*NLXTfgDgHR*n:q3n9;dip:[<T-K]fKIqq(i3Fsi+kUS^a5DdR1g>a%Ymof,mlgX.
%jL.0D3NJ)C[>7kN@eV=CYp3M>UE<m7Z-&+#"$FeuouI`B:G$!0WWdS!>Er.SR`?!u'%3e'`OU\*aHTi071X3H@7n#_2>Lb^3ULPn
%JReL<`LSp_kQ0F#U"\h157R)s"u^$rCL,H\*gLLmqIa`dFM(?&=q'HCl?9`&>J%aB_7FYIf4&Ec@FP,6-aBfpX8f:DHp+HFI5^?o
%]t)bS6h^p>='8MUBtg*K5>1@`cp7qur<BM=<WV%jG`r02k9[4k_XY](-uM+)HgWYibjq@EENA3B'8tT9N-ou0Bi>Ao(O=)<VRJ\8
%d,sWm?@e/E@iDr<bI0]bE3pWi/DY*6dID:OII/C!#8D,<1Up+p5JUB8>[-:*&Tc]>paTK=]u`(S2ue3*O0<1FmPoTN`GHG?g*SU=
%D@t-:c0gTi-FX(\0"5IqV%2]cjg;CC7Y_n[e*V\6lII/j_SW+]DMN"AG'c`mmg`oRYFVk0II:qkPMWb./gf!)&\Q";qI*;hgK#kW
%2k3(3lRc/RB(8qT[hoa>@oSPlY6Wl)Y<_,RVQHA,nbns(URp,Yb[^<+S9D1rZ!2P&FI^=3Bg.jTV'U_eMuKdaIOR7(OQgobN+rOd
%;$sTs"KU%F'#6H>=6F?1n(O;;TBA--i1dYRU/rDFk@mkI!*.2D_Xsn"@YL:E\iGNDm;OjI>1+Vmc=SAkeufncQc?H:[!i<rrE=a,
%S@69(CVf9R$!''heM@[G[IQ!ce$<q^&W#MQ6?L8eh?&ILFN6hkliIV?m;XkNCq[^8*u?H4Fn\fE)WY@@F4F&IjC3VHS/0-c:''*k
%HB?BE4E=04JUUCY>RT#7OH(ZI6saGg98l'F5UM.aV,&^9@*+12@[(Z/9dh+3"rFIqi84<WE?XJFXE(R([^[l7jl0Kc(V)BG`KK?R
%%;qWr@Nb#9q-&6X5\?OUdP)JEnpWR78&sE8<$$"=8]t@\!`P]=1DcV?MH$N2blns$gb=r"a@ltJ:>9#qR!&..[e.hPjb+q]8`O''
%=@TpN34FB=@2LH5\aHe&T"&G.P6`pjbj%j'F7HC*MP5/F^,J\l8afo3ChC$C'(anDP[1l`@R]W/A_Q=MB"K$LiUkH%4^t@TJM%Er
%%SXlaQ6l)7$XJAVd)E,K!1Y+A!)?>t06,CI;Ljt,NNShF@/3G;>qFatLuO1,l(TNke\8sn(R'\)@VMZS@hGS7HKeUe[=*/G`R&*W
%>5IKd(?i)^EA3NA39h-PV618:QBs!_F_ul&6DgBP\g[Ql)QB!V\OZEP'nSfrb<n5lKIa10WbJR#kKrU#=mMZ&7V]]5[I1S\U:7dX
%Z-*._<9CcIF*]K^f0uVjpo(LM71ZkDK^#[Uf`k7@9/P;?QXN+S_lc^#p_ISKMsi+C\C4n'+.aLHd:=%8kD:U5]'S-p5'u!kg?`k0
%TS5"Q+1'*6iW8kh+qS^I:La]aD>8a]!NgN".,-lZ'!GT2K:O.6BXWi0_BpA9m:&]@Jq0cTY,/GZ/]m)"O[ONe2-g[RM7gcJQQTRX
%D4tBH-uX1ZlVT0KKf093NH]6L8*YI?m3])3"BB=O4?lFj4>'s-?2G5PWCrW3QR/hL8D75G]9o-iZ/:PU?fJehQ\>/eVos2>`NdK%
%?=Ds1RqFQhXGbATrIuLn`ZJs24070"X8;qB8fCO,bRL/A[,FH-n!Grr_e\W@L%%`oGhIH-`60bu04+#pFQ4[7I_9hO%'/h;iUs8q
%*k#3\abuPK`Ee44a_T'5o].[qj;l#kji**4.)J;n_-@J_cfe3u2!,h*E99U.09I!YXEfROl-4QFh2#eo_0aH);6Kegca/MeP\mfo
%2qYLpgu`[d,9ii6G''P1Z97ldEEi-5Nc%D@]8u092<Wq1#'`T*STX>JB8^KYcLJW+<Y<-q[)nkhWjDl^T@Tp:g$d;>3"b,-Wk45^
%KpZid'e)K&pH&_/N7ehB96oi,"FmiHC?'^W72\!VGMVUVW3'QTV':!@e/K@)2o;ctk/u"m2%+tE7sCK@SPHC5GV>l!#gBXIr'T!f
%%;DSuH\:+GjTU4"FL"$`Hl3'Y,B29*`p7uT=?`gq.`s9L2X@5-*Q,VBqiCH-pB#T]l93cOIa`K^\e+/IfSmdImI(b:H;uSb5*)r:
%APETsqpYPkGK,'eLX3'7;=u31>Zc+o-rbKHnmVKIb4ne/HU^5iR[!KA1:abP,m@@NW+>2910#a9E`OL\=8&\j#Sei[7*q_M`Mh=t
%8b$L0%^Sbt[Zdm[::+>-g!asD--ob\Tql2;l;EGmZ667Wku5aZdEY]5>HXkT?Wj/p-,d,ihH!<S]i*"3Pnb[.e?G[p'Ql2i=?TY&
%[S"RM;")2;_KT"W[-E=7C=O<'f;`:+Br`iN6FL"Pm_'FO*[J<!6!HgW\Rm@u<3gFOW[^-%Gcr0&=e#DlV#;!j(+;#=`4B.cNq-.X
%-H4.c3D;/K9r_.I>_Nk,44g9(`QpDE<pA__a,6X-?.ah+n_9>,X$4!d?!4s`FldD'XfK0Sq7:1WP[c4Z:EUZM"HE+OS(MC3H*4Ml
%'p.7E?A!Z[YH(W9eI+stWkDe@V4Ws$XgZ</fNr]qpKmc:``Q!/\u[N>=(P=RH$)Bqc1;g<l(neoT2D/$l=hK37^#5'l'7cS=hQ<H
%>$eCC>g)K!KPS-3.c3k1f-FSNh)2]CKo2L$1mlk"HmR0DT!-;CQK]o6eoH0bb=^Mjj]K_#Ff=U"k5KZ<p^S"==MH3#.djL^RYq'E
%n>kRK.eKa66DM[D'WjkO.KrFZ<D"mfWd)!"Z)Xt1_5f%2bpI,.WcG]s<?GuBi?Kj?<97'_eJ=nNlSGO_K6Y-pUI(N/-1!E;`+f%^
%IR&TFPrh+&b*kND_q24%GSlF_)HODunqL/q[*2q`1ot)M8Yopu<-)3Y5,1J&VaKeNVF@SlW9"UQ>Y:4446gY^:kJFfq0J>2%ss*&
%KH2+"FEdrWn;MhK&!Y&4d\paI8fh!W@=q*NW&Qt,P=h+p-'p+-'f*0J=GonM:Fg_=noIep<P1tY:_cs1Kf63^k]#%mVi>@*Ml7=R
%8_&UMI6HeK#B!P#?^"_pb?/CY'p5L42#((]>;"CcYsPd_I4KTonouI7>$eF*[8nS(f.*^1X)`srjeEHR![Zh%:gjm0Fa<O,mol$_
%8\C@e/=G+1Pu[+WCh8lZV6;Glf.rX<qc_:N9#&eXQLns<bE?![90sq4b?_P/9RGHg@*;kW3S<nh,mdf,Yt;h_;FIU\6,f/1/@elO
%bR,.j0!f(ub@['Y9)6[\+'V4@,\5)4QAfW_bpk#D?F/^'bA<K?Cq7e?.ndW[ZEe%$S$Zulc3c3TNjD$qMO/-7ZO.F)X5:5/c&1n)
%P-a73X6aX?c]XkOk?7A^ANd'sD0aHjTe5k=Ej+TBWZ3VXBC!-7k?2k?V?*g)[,jPGR^Ob\aj\[j<d@k'TbX<1>\M7/Q45FFg@Cq;
%Y-s:&8_01@/U:Ht!o[q<McMH(1KlQBj[Q;8D;!;`AQr3A8_Fk'Pc]I%fnq(mEjk7)9@?j7Bp5q>=5'HeBhPM6D>DVC[k2)n'"?sr
%X3>E`duq9oDd%1j1oD)V[`iGWhNg5Tg"Wg1<Vj0%Bks*0o.14'Js=)O1aq/MW(dc29PTj2/XKYH\7JT3)Rk*/Q,bJO=q\C-<*RRN
%bmVD8Puhg.QtE`OF!##6f<\.rUiU6P90Ti_Bh@M$)Aq9sFn%jMg(1-F]&dLmXD[jb#%q/S[DhHtD_3V7hc`doAR):sDE6>2iD5li
%-Fp0JOh64fHdS,P)&-hp4Dg;8/H]34]B*G$e8AFAZ:C18/\=E=fFE=b0"++8VN#F)]^L:/odjGk2Lf1I>7>Fqfd`CoB!qeFDRMn%
%(9/n[ZEAUFLDHPXm=<X5<_6VDg('IteFj>7mtugS](s,(T(N&trq0':qX_Ju\(cE1Vn`5/Y@%:\YJ5SehLRokqd9?nl[S^.QiHV`
%J,T>D5Q0^4^\j."^]!`T^]*UB^\m-Ds4757gL#F0p$_qUg[Dn+qtkmBg]%D.+7TScrprAQ]79G$TDgdunE$q~>
%AI9_PrivateDataEnd
